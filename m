Return-path: <mchehab@pedra>
Received: from na3sys009aog107.obsmtp.com ([74.125.149.197]:36290 "EHLO
	na3sys009aog107.obsmtp.com" rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1751553Ab1BPC5A (ORCPT
	<rfc822;linux-media@vger.kernel.org>);
	Tue, 15 Feb 2011 21:57:00 -0500
From: Qing Xu <qingx@marvell.com>
To: Guennadi Liakhovetski <g.liakhovetski@gmx.de>,
	Linux Media Mailing List <linux-media@vger.kernel.org>
CC: Hans Verkuil <hverkuil@xs4all.nl>,
	Neil Johnson <realdealneil@gmail.com>,
	Robert Jarzmik <robert.jarzmik@free.fr>,
	Uwe Taeubert <u.taeubert@road.de>,
	"Karicheri, Muralidharan" <m-karicheri2@ti.com>,
	Eino-Ville Talvala <talvala@stanford.edu>
Date: Tue, 15 Feb 2011 18:50:58 -0800
Subject: RE: [RFD] frame-size switching: preview / single-shot use-case
Message-ID: <7BAC95F5A7E67643AAFB2C31BEE662D014042CB8F0@SC-VEXCH2.marvell.com>
References: <Pine.LNX.4.64.1102151641490.16709@axis700.grange>
In-Reply-To: <Pine.LNX.4.64.1102151641490.16709@axis700.grange>
Content-Language: en-US
Content-Type: text/plain; charset="gb2312"
Content-Transfer-Encoding: base64
MIME-Version: 1.0
List-ID: <linux-media.vger.kernel.org>
Sender: <mchehab@pedra>

SGksDQoNCkkgaGF2ZSBhIHF1ZXN0aW9uIHRoYXQgd2h5IHdlIG11c3QgY2hlY2sgImljZi0+dmJf
dmlkcS5idWZzWzBdIiBpbg0Kc19mbXRfdmlkX2NhcCgpPyBUaGUgYXBwbGljYXRpb24gbWFpbmx5
IGNhbGxpbmcgc2VxdWVuY2UgYXQgc3dpdGNoaW5nDQpmbXQgY291bGQgYmUgbGlrZSB0aGlzOg0K
c3RyZWFtb2ZmDQpzX2ZtdF92aWRfY2FwDQpyZXF1ZXN0X2J1Zg0KcWJ1Zi4uLnFidWYNCnN0cmVh
bW9uDQpxYnVmL2RxYnVmDQouLi4NClRoZSBhcHBsaWNhdGlvbiBzaG91bGQgYWxzbyBhd2FyZSB0
aGF0IHRoZXkgYXJlIHN3aXRjaGluZyB0aGUgZm10LA0Kc28gdGhleSBzaG91bGQgcmVsZWFzZSB0
aGVpciBidWZmZXIocGVyIGluIHVzcnB0ciBtZXRob2QpLCBhbmQgcmUtY2FsbA0KcmVxdWVzdC1i
dWYvcWJ1Ziwgc28gYmFzZWQgb24gdGhpcyBhc3N1bXB0aW9uLCBob3cgYWJvdXQgd2UgY2hlY2sg
ImJ1ZnNbMF0iDQppbiByZXF1ZXN0X2J1ZiBvciBxYnVmIGFjY29yZGluZyB0byB0aGUgbmV3IGZt
dCwgaWYgd2UgZmluZCB0aGUgYnVmZmVyDQpzaXplIGlzIG5vdCBjb3JyZWN0LCB0aGVuIGluZGlj
YXRlIGVycm9yIGluIHJlcXVlc3RfYnVmIG9yIHFidWYuDQpIb3dldmVyLGluIHNfZm10X3ZpZF9j
YXAsDQp3ZSBvbmx5IG5lZWQgdG8gY2hlY2sgd2hldGhlciBzdHJlYW1pbmcgaXMgb24vb2ZmLCBp
ZiBpdCBpcyBzdGlsbCBvbiwNCnRoYXQgbWVhbnMgSFcgcmVzb3VyY2UgaXMgbm90IGF2YWlsYWJs
ZSBvciBJTy9idWZmZXIgaXMgaW4gcHJvZ3Jlc3MsIHRoZW4NCndlIHJlamVjdCBzX2ZtdC4gV2hh
dCBkbyB5b3UgdGhpbms/DQoNCkZvciB0aGUgaWRlYSAzLCAod2hhdCBpcyB0aGUgZGlmZmVyZW5j
ZSBiZXR3ZWVuIGlkZWEgMSBhbmQgMz8pDQppbiBvdXIgcmVhbCB1c2FnZSBjYXNlcyBvZiBjYW1l
cmEob3VyIHByb2R1Y3QgaXMgYSBwaG9uZSksDQp3ZSB3aWxsIHNldCBtYW55IGZvcm1hdHMsIHN1
Y2ggYXM6DQpwcmV2aWV3QFZHQSwgcGhvdG9zQDVNLzNNL1FWR0EvUUNJRi4uLiwgdmlkZW9AMTA4
MHAvNzIwcC9WR0EvUVZHQSwgaWYgd2UNCm1haW50YWluIGVhY2ggcXVldWUgZm9yIGVhY2ggZm10
LCBpdCBzZWVtcyB0aGF0IHRoZXJlIGFyZSB0b28gbWFueSBxdWV1ZXMsDQphbmQsIGluIHRoaXMg
d2F5LCB0aGUgYXBwbGljYXRpb24gbmVlZCB0byBiZSBjaGFuZ2VkLCBpdCBzaG91bGQgcXVpdGUg
YXdhcmUgb2YgVklESU9DX0JVRlFfU0VMRUNUIHF1ZXVlLWlkIGZvciBlYWNoIGZtdCwgdGhlbiBp
dCBjb3VsZCBhbGxvY2F0ZS9yZWxlYXNlDQp0aGUgcmVxdWlyZWQgYnVmZmVyIHF1ZXVlIGJ5IG5l
dyBpb2N0bC4gSXMgbXkgdW5kZXJzdGFuZGluZyBjb3JyZWN0Pw0KDQpUaGFua3MhDQotUWluZw0K
DQotLS0tLU9yaWdpbmFsIE1lc3NhZ2UtLS0tLQ0KRnJvbTogR3Vlbm5hZGkgTGlha2hvdmV0c2tp
IFttYWlsdG86Zy5saWFraG92ZXRza2lAZ214LmRlXQ0KU2VudDogMjAxMcTqMtTCMTbI1SAxOjM0
DQpUbzogTGludXggTWVkaWEgTWFpbGluZyBMaXN0DQpDYzogUWluZyBYdTsgSGFucyBWZXJrdWls
OyBOZWlsIEpvaG5zb247IFJvYmVydCBKYXJ6bWlrOyBVd2UgVGFldWJlcnQ7IEthcmljaGVyaSwg
TXVyYWxpZGhhcmFuOyBFaW5vLVZpbGxlIFRhbHZhbGENClN1YmplY3Q6IFtSRkRdIGZyYW1lLXNp
emUgc3dpdGNoaW5nOiBwcmV2aWV3IC8gc2luZ2xlLXNob3QgdXNlLWNhc2UNCg0KSGkNCg0KVGhp
cyB0b3BpYyBoYXMgYmVlbiBzbGlnaHRseSBkaXNjdXNzZWQgc2V2ZXJhbCB0aW1lcyBbMV0gYmVm
b3JlLCBidXQgdGhlcmUNCmhhcyBiZWVuIG5vIGNvbmNsdXNpb24sIG5vciBJJ20gYXdhcmUgb2Yg
YW55IGltcGxlbWVudGF0aW9uLCBzdWl0YWJseQ0KcmVzb2x2aW5nIHRoaXMgcHJvYmxlbS4gSSd2
ZSBhZGRlZCB0byBDQyBhbGwgaW52b2x2ZWQgaW4gZWFybGllcg0KZGlzY3Vzc2lvbnMsIHRoYXQg
SSBtYW5hZ2VkIHRvIGZpbmQuDQoNCldoYXQgc2VlbXMgYSB0eXBpY2FsIHVzZS1jYXNlIHRvIG1l
IGlzIGEgc3lzdGVtIHdpdGggYSB2ZXdmaW5kZXIgb3IgYQ0KZGlzcGxheSwgcHJvdmlkaW5nIGEg
bGl2ZSBwcmV2aWV3IG9mIHRoZSB2aWRlbyBkYXRhIGZyb20gYSBzb3VyY2UsIGxpa2UgYQ0KY2Ft
ZXJhLCB3aXRoIGEgcmVsYXRpdmVseSBsb3cgcmVzb2x1dGlvbiwgYW5kIGEgcG9zc2liaWxpdHkg
dG8gdGFrZQ0KaGlnaC1yZXNvbHV0aW9uIHN0aWxsIHBob3RvcyB3aXRoIGEgdmVyeSBzaG9ydCBk
ZWxheS4NCg0KQ3VycmVudGx5IHRoaXMgaXMgcHJldHR5IGRpZmZpY3VsdCB0byByZWFsaXNlLCBl
LmcuLCB3aXRoIHNvYy1jYW1lcmENCmRyaXZlcnMgeW91IGhhdmUgdG8gZnJlZSB0aGUgdmlkZW9i
dWYoMikgcXVldWUsIGJ5IGVpdGhlciBjbG9zaW5nIGFuZA0KcmUtb3BlbmluZyB0aGUgaW50ZXJm
YWNlLCBvciBieSBpc3N1aW5nIGFuIGlvY3RsKFZJRElPQ19SRVFCVUZTLA0KY291bnQ9MCkgaWYg
eW91ciBkcml2ZXIgaXMgYWxyZWFkeSB1c2luZyB2aWRlb2J1ZjIgYW5kIGlmIHRoaXMgaXMgcmVh
bGx5DQp3b3JraW5nOyksIGNvbmZpZ3VyZSB3aXRoIGEgZGlmZmVyZW50IHJlc29sdXRpb24gYW5k
IHJlLWFsbG9jYXRlDQp2aWRlb2J1ZmZlcnMgKG9yIHVzZSBkaWZmZXJlbnQgYnVmZmVycywgYWxs
b2NhdGVkIHBlciBVU0VSUFRSKS4gQW5vdGhlcg0KcG9zc2liaWxpdHkgd291bGQgYmUgdG8gYWxs
b2NhdGUgYW5kIHVzZSBidWZmZXJzIGxhcmdlIGVub3VnaCBmb3Igc3RpbGwNCnBob3RvcywgYWxz
byBmb3IgdGhlIHByZXZpZXcsIHdoaWNoIHdvdWxkIGJlIHdhc3RlZnVsLCBiZWNhdXNlIG9uZSBj
YW4NCndlbGwgbmVlZCBtYW55IG1vcmUgcHJldmlldyB0aGFuIHN0aWxsLXNob3QgYnVmZmVycy4N
Cg0KU28sIGl0IHNlZW1zIHRvIG1lLCB3ZSBjb3VsZCBsaXZlIHdpdGggYSBiZXR0ZXIgc29sdXRp
b24uDQoNCjEuIFdlIGNvdWxkIHVzZSBzZXBhcmF0ZSBpbnB1dHMgZm9yIGRpZmZlcmVudCBjYXB0
dXJlIG1vZGVzIGFuZCBzdXBwb3J0DQpwZXItaW5wdXQgdmlkZW9idWYgcXVldWVzLiBBZHZhbnRh
Z2U6IG5vIEFQSSBjaGFuZ2VzIHJlcXVpcmVkLg0KRGlzYWR2YW50YWdlczogY29uZnVzaW5nLCBl
c3BlY2lhbGx5LCBpZiBhIGRyaXZlciBhbHJlYWR5IGV4cG9ydHMgbXVsdGlwbGUNCmlucHV0cy4g
VGhlIGRyaXZlciBkb2VzIG5vdCBrbm93LCB3aGV0aGVyIHRoaXMgbW9kZSBpcyByZXF1aXJlZCBv
ciBub3QsDQphbHdheXMgZXhwb3J0aW5nIDIgaW5wdXRzIGZvciB0aGlzIHB1cnBvc2UgZG9lc24n
dCBzZWVtIGxpa2UgYSBnb29kIGlkZWEuDQpFdmVudHVhbGx5LCB0aGUgdXNlciBtaWdodCB3YW50
IG5vdCAyLCBidXQgMyBvciBtb3JlIG9mIHN1Y2ggdmlkZW9idWYNCnF1ZXVlcy4NCg0KMi4gVXNl
IGRpZmZlcmVudCBJTyBtZXRob2RzLCBlLmcuLCBtbWFwKCkgZm9yIHByZXZpZXcgYW5kIHJlYWQo
KSBmb3Igc3RpbGwNCnNob3RzLiBJJ20ganVzdCBtZW50aW9uaW5nIHRoaXMgcG9zc2liaWxpdHkg
aGVyZSwgYmVjYXVzZSBpdCBvY2N1cnJlZCBpbg0Kb25lIG9mIHByZXZpb3VzIHRocmVhZHMsIGJ1
dCBJIGRvbid0IHJlYWxseSBsaWtlIGl0IGVpdGhlci4gV2hhdCBpZiB5b3UNCndhbnQgdG8gdXNl
IHRoZSBzYW1lIElPIG1ldGhvZCBmb3IgYWxsPyBFdGMuDQoNCjMuIE5vdCBsaWtpbmcgZWl0aGVy
IG9mIHRoZSBhYm92ZSwgaXQgc2VlbXMgd2UgbmVlZCB5ZXQgYSBuZXcgQVBJIGZvcg0KdGhpcy4u
LiBIb3cgYWJvdXQgZXh0ZW5kaW5nIFZJRElPQ19SRVFCVUZTIHdpdGggYSB2aWRlb2J1ZiBxdWV1
ZSBpbmRleCwNCnRodXMgdXNpbmcgdXAgb25lIG9mIHRoZSByZW1haW5pbmcgdHdvIDMyLWJpdCBy
ZXNlcnZlZCBmaWVsZHM/IFRoZW4gd2UNCm5lZWQgb25lIG1vcmUgaW9jdGwoKSBsaWtlIFZJRElP
Q19CVUZRX1NFTEVDVCB0byBzd2l0Y2ggZnJvbSBvbmUgcXVldWUgdG8NCmFub3RoZXIsIGFmdGVy
IHdoaWNoIHNldHRpbmcgZnJhbWUgZm9ybWF0IGFuZCBxdWV1aW5nIGFuZCBkZXF1ZXVpbmcNCmJ1
ZmZlcnMgd2lsbCBhZmZlY3QgdGhpcyBjdXJyZW50bHkgc2VsZWN0ZWQgcXVldWUuIFdlIGNvdWxk
IGFsc28ga2VlcA0KUkVRQlVGUyBhcyBpcyBhbmQgcmVxdWlyZSBCVUZRX1NFTEVDVCB0byBiZSBj
YWxsZWQgYmVmb3JlIGl0IGZvciBhbnkgcXVldWUNCmV4Y2VwdCB0aGUgZGVmYXVsdCAwLg0KDQpZ
ZXMsIEkga25vdywgdGhhdCBzb21lIHZpZGVvIHNlbnNvcnMgaGF2ZSBhIGRvdWJsZSByZWdpc3Rl
ciBzZXQgZm9yIHRoaXMNCmR1YWwtZm9ybWF0IG9wZXJhdGlvbiwgc28sIGZvciB0aGVtIGl0IGlz
IG5hdHVyYWwgdG8gc3VwcG9ydCB0d28gcXVldWVzLA0KYW5kIGRyaXZlcnMgYXJlIGNlcnRhaW5s
eSBtb3N0IHdlbGNvbWUgdG8gdXNlIHRoaXMgZmVhdHVyZSBmb3IsIHNheSwgdGhlDQpmaXJzdCB0
d28gcXVldWVzLiBPbiBvdGhlciBzZW5zb3JzIGFuZCBmb3IgYW55IGZ1cnRoZXIgcXVldWVzIHN3
aXRjaGluZw0Kd2lsbCBoYXZlIHRvIGJlIGRvbmUgaW4gc29mdHdhcmUuDQoNCklkZWFzPyBDb21t
ZW50cz8NCg0KVGhhbmtzDQpHdWVubmFkaQ0KLS0tDQpHdWVubmFkaSBMaWFraG92ZXRza2ksIFBo
LkQuDQpGcmVlbGFuY2UgT3Blbi1Tb3VyY2UgU29mdHdhcmUgRGV2ZWxvcGVyDQpodHRwOi8vd3d3
Lm9wZW4tdGVjaG5vbG9neS5kZS8NCg==
