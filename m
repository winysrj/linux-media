Return-path: <linux-media-owner@vger.kernel.org>
Received: from banach.math.auburn.edu ([131.204.45.3]:51454 "EHLO
	banach.math.auburn.edu" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752919AbZBBW3F (ORCPT
	<rfc822;linux-media@vger.kernel.org>); Mon, 2 Feb 2009 17:29:05 -0500
Date: Mon, 2 Feb 2009 16:40:49 -0600 (CST)
From: kilgota@banach.math.auburn.edu
To: Alan Stern <stern@rowland.harvard.edu>
cc: Adam Baker <linux@baker-net.org.uk>,
	Jean-Francois Moine <moinejf@free.fr>,
	linux-media@vger.kernel.org
Subject: Re: Bug in gspca USB webcam driver
In-Reply-To: <Pine.LNX.4.44L0.0902021651460.13005-100000@iolanthe.rowland.org>
Message-ID: <alpine.LNX.2.00.0902021638280.743@banach.math.auburn.edu>
References: <Pine.LNX.4.44L0.0902021651460.13005-100000@iolanthe.rowland.org>
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="-863829203-948596715-1233614449=:743"
Sender: linux-media-owner@vger.kernel.org
List-ID: <linux-media.vger.kernel.org>

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.

---863829203-948596715-1233614449=:743
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed



On Mon, 2 Feb 2009, Alan Stern wrote:

> On Mon, 2 Feb 2009, Adam Baker wrote:
>
>> Thanks for confirming that Alan. I'd been looking at this too and suspected
>> this was the case but as it wouldn't fail on my uniprocessor machine I
>> couldn't prove it. (Theodore, if you can generate the log we discussed of
>> this failing it might still be helpful in tracking down the underlying
>> problem.)

Right. Look at the next mail.

>
> Note that I'm looking at the gspca.c routine from 2.6.29-rc3.  If
> changes have been made since that version, I don't know what they are.

What I am working from right now is attached here, just in case that 
helps.

Theodore Kilgore
---863829203-948596715-1233614449=:743
Content-Type: TEXT/PLAIN; charset=US-ASCII; name=gspca.c
Content-Transfer-Encoding: BASE64
Content-ID: <alpine.LNX.2.00.0902021640490.743@banach.math.auburn.edu>
Content-Description: 
Content-Disposition: attachment; filename=gspca.c

LyoNCiAqIE1haW4gVVNCIGNhbWVyYSBkcml2ZXINCiAqDQogKiBWNEwyIGJ5
IEplYW4tRnJhbmNvaXMgTW9pbmUgPGh0dHA6Ly9tb2luZWpmLmZyZWUuZnI+
DQogKg0KICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBj
YW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQNCiAqIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2Ug
YXMgcHVibGlzaGVkIGJ5IHRoZQ0KICogRnJlZSBTb2Z0d2FyZSBGb3VuZGF0
aW9uOyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQg
eW91cg0KICogb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4NCiAqDQogKiBU
aGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBp
dCB3aWxsIGJlIHVzZWZ1bCwgYnV0DQogKiBXSVRIT1VUIEFOWSBXQVJSQU5U
WTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mIE1FUkNI
QU5UQUJJTElUWQ0KICogb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBV
UlBPU0UuICBTZWUgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlDQog
KiBmb3IgbW9yZSBkZXRhaWxzLg0KICoNCiAqIFlvdSBzaG91bGQgaGF2ZSBy
ZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNl
bnNlDQogKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbTsgaWYgbm90LCB3cml0
ZSB0byB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLA0KICogSW5jLiwg
Njc1IE1hc3MgQXZlLCBDYW1icmlkZ2UsIE1BIDAyMTM5LCBVU0EuDQogKi8N
Cg0KI2RlZmluZSBNT0RVTEVfTkFNRSAiZ3NwY2EiDQoNCiNpbmNsdWRlIDxs
aW51eC9pbml0Lmg+DQojaW5jbHVkZSA8bGludXgvZnMuaD4NCiNpbmNsdWRl
IDxsaW51eC92bWFsbG9jLmg+DQojaW5jbHVkZSA8bGludXgvc2NoZWQuaD4N
CiNpbmNsdWRlIDxsaW51eC9zbGFiLmg+DQojaW5jbHVkZSA8bGludXgvbW0u
aD4NCiNpbmNsdWRlIDxsaW51eC9zdHJpbmcuaD4NCiNpbmNsdWRlIDxsaW51
eC9wYWdlbWFwLmg+DQojaW5jbHVkZSA8bGludXgvaW8uaD4NCiNpbmNsdWRl
IDxhc20vcGFnZS5oPg0KI2lmIExJTlVYX1ZFUlNJT05fQ09ERSA8IEtFUk5F
TF9WRVJTSU9OKDIsIDYsIDE5KQ0KI2luY2x1ZGUgPGFzbS91YWNjZXNzLmg+
DQojZWxzZQ0KI2luY2x1ZGUgPGxpbnV4L3VhY2Nlc3MuaD4NCiNlbmRpZg0K
I2luY2x1ZGUgPGxpbnV4L2ppZmZpZXMuaD4NCiNpbmNsdWRlIDxtZWRpYS92
NGwyLWlvY3RsLmg+DQoNCiNpbmNsdWRlICJnc3BjYS5oIg0KDQovKiBnbG9i
YWwgdmFsdWVzICovDQojZGVmaW5lIERFRl9OVVJCUyAzCQkvKiBkZWZhdWx0
IG51bWJlciBvZiBVUkJzICovDQojaWYgREVGX05VUkJTID4gTUFYX05VUkJT
DQojZXJyb3IgIkRFRl9OVVJCUyB0b28gYmlnIg0KI2VuZGlmDQoNCk1PRFVM
RV9BVVRIT1IoIkplYW4tRnJhbmNvaXMgTW9pbmUgPGh0dHA6Ly9tb2luZWpm
LmZyZWUuZnI+Iik7DQpNT0RVTEVfREVTQ1JJUFRJT04oIkdTUENBIFVTQiBD
YW1lcmEgRHJpdmVyIik7DQpNT0RVTEVfTElDRU5TRSgiR1BMIik7DQoNCiNk
ZWZpbmUgRFJJVkVSX1ZFUlNJT05fTlVNQkVSCUtFUk5FTF9WRVJTSU9OKDIs
IDUsIDApDQoNCiNpZmRlZiBHU1BDQV9ERUJVRw0KaW50IGdzcGNhX2RlYnVn
ID0gRF9FUlIgfCBEX1BST0JFOw0KRVhQT1JUX1NZTUJPTChnc3BjYV9kZWJ1
Zyk7DQoNCnN0YXRpYyB2b2lkIFBERUJVR19NT0RFKGNoYXIgKnR4dCwgX191
MzIgcGl4Zm10LCBpbnQgdywgaW50IGgpDQp7DQoJaWYgKChwaXhmbXQgPj4g
MjQpID49ICcwJyAmJiAocGl4Zm10ID4+IDI0KSA8PSAneicpIHsNCgkJUERF
QlVHKERfQ09ORnxEX1NUUkVBTSwgIiVzICVjJWMlYyVjICVkeCVkIiwNCgkJ
CXR4dCwNCgkJCXBpeGZtdCAmIDB4ZmYsDQoJCQkocGl4Zm10ID4+IDgpICYg
MHhmZiwNCgkJCShwaXhmbXQgPj4gMTYpICYgMHhmZiwNCgkJCXBpeGZtdCA+
PiAyNCwNCgkJCXcsIGgpOw0KCX0gZWxzZSB7DQoJCVBERUJVRyhEX0NPTkZ8
RF9TVFJFQU0sICIlcyAweCUwOHggJWR4JWQiLA0KCQkJdHh0LA0KCQkJcGl4
Zm10LA0KCQkJdywgaCk7DQoJfQ0KfQ0KI2Vsc2UNCiNkZWZpbmUgUERFQlVH
X01PREUodHh0LCBwaXhmbXQsIHcsIGgpDQojZW5kaWYNCg0KLyogc3BlY2lm
aWMgbWVtb3J5IHR5cGVzIC0gISEgc2hvdWxkIGRpZmZlcmVudCBmcm9tIFY0
TDJfTUVNT1JZX3h4eCAqLw0KI2RlZmluZSBHU1BDQV9NRU1PUllfTk8gMAkv
KiBWNEwyX01FTU9SWV94eHggc3RhcnRzIGZyb20gMSAqLw0KI2RlZmluZSBH
U1BDQV9NRU1PUllfUkVBRCA3DQoNCiNkZWZpbmUgQlVGX0FMTF9GTEFHUyAo
VjRMMl9CVUZfRkxBR19RVUVVRUQgfCBWNEwyX0JVRl9GTEFHX0RPTkUpDQoN
Ci8qDQogKiBWTUEgb3BlcmF0aW9ucy4NCiAqLw0Kc3RhdGljIHZvaWQgZ3Nw
Y2Ffdm1fb3BlbihzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSkNCnsNCglz
dHJ1Y3QgZ3NwY2FfZnJhbWUgKmZyYW1lID0gdm1hLT52bV9wcml2YXRlX2Rh
dGE7DQoNCglmcmFtZS0+dm1hX3VzZV9jb3VudCsrOw0KCWZyYW1lLT52NGwy
X2J1Zi5mbGFncyB8PSBWNEwyX0JVRl9GTEFHX01BUFBFRDsNCn0NCg0Kc3Rh
dGljIHZvaWQgZ3NwY2Ffdm1fY2xvc2Uoc3RydWN0IHZtX2FyZWFfc3RydWN0
ICp2bWEpDQp7DQoJc3RydWN0IGdzcGNhX2ZyYW1lICpmcmFtZSA9IHZtYS0+
dm1fcHJpdmF0ZV9kYXRhOw0KDQoJaWYgKC0tZnJhbWUtPnZtYV91c2VfY291
bnQgPD0gMCkNCgkJZnJhbWUtPnY0bDJfYnVmLmZsYWdzICY9IH5WNEwyX0JV
Rl9GTEFHX01BUFBFRDsNCn0NCg0Kc3RhdGljIHN0cnVjdCB2bV9vcGVyYXRp
b25zX3N0cnVjdCBnc3BjYV92bV9vcHMgPSB7DQoJLm9wZW4JCT0gZ3NwY2Ff
dm1fb3BlbiwNCgkuY2xvc2UJCT0gZ3NwY2Ffdm1fY2xvc2UsDQp9Ow0KDQov
KiBnZXQgdGhlIGN1cnJlbnQgaW5wdXQgZnJhbWUgYnVmZmVyICovDQpzdHJ1
Y3QgZ3NwY2FfZnJhbWUgKmdzcGNhX2dldF9pX2ZyYW1lKHN0cnVjdCBnc3Bj
YV9kZXYgKmdzcGNhX2RldikNCnsNCglzdHJ1Y3QgZ3NwY2FfZnJhbWUgKmZy
YW1lOw0KCWludCBpOw0KDQoJaSA9IGdzcGNhX2Rldi0+ZnJfaTsNCglpID0g
Z3NwY2FfZGV2LT5mcl9xdWV1ZVtpXTsNCglmcmFtZSA9ICZnc3BjYV9kZXYt
PmZyYW1lW2ldOw0KCWlmICgoZnJhbWUtPnY0bDJfYnVmLmZsYWdzICYgQlVG
X0FMTF9GTEFHUykNCgkJCQkhPSBWNEwyX0JVRl9GTEFHX1FVRVVFRCkNCgkJ
cmV0dXJuIE5VTEw7DQoJcmV0dXJuIGZyYW1lOw0KfQ0KRVhQT1JUX1NZTUJP
TChnc3BjYV9nZXRfaV9mcmFtZSk7DQoNCi8qDQogKiBmaWxsIGEgdmlkZW8g
ZnJhbWUgZnJvbSBhbiBVUkIgYW5kIHJlc3VibWl0DQogKi8NCnN0YXRpYyB2
b2lkIGZpbGxfZnJhbWUoc3RydWN0IGdzcGNhX2RldiAqZ3NwY2FfZGV2LA0K
CQkJc3RydWN0IHVyYiAqdXJiKQ0Kew0KCXN0cnVjdCBnc3BjYV9mcmFtZSAq
ZnJhbWU7DQoJdTggKmRhdGE7CQkvKiBhZGRyZXNzIG9mIGRhdGEgaW4gdGhl
IGlzbyBtZXNzYWdlICovDQoJaW50IGksIGxlbiwgc3Q7DQoJY2FtX3BrdF9v
cCBwa3Rfc2NhbjsNCg0KCWlmICh1cmItPnN0YXR1cyAhPSAwKSB7DQojaWZk
ZWYgQ09ORklHX1BNDQoJCWlmICghZ3NwY2FfZGV2LT5mcm96ZW4pDQojZW5k
aWYNCgkJCVBERUJVRyhEX0VSUnxEX1BBQ0ssICJ1cmIgc3RhdHVzOiAlZCIs
IHVyYi0+c3RhdHVzKTsNCgkJcmV0dXJuOwkJLyogZGlzY29ubmVjdGlvbiA/
ICovDQoJfQ0KCXBrdF9zY2FuID0gZ3NwY2FfZGV2LT5zZF9kZXNjLT5wa3Rf
c2NhbjsNCglmb3IgKGkgPSAwOyBpIDwgdXJiLT5udW1iZXJfb2ZfcGFja2V0
czsgaSsrKSB7DQoNCgkJLyogY2hlY2sgdGhlIGF2YWlsYWJpbGl0eSBvZiB0
aGUgZnJhbWUgYnVmZmVyICovDQoJCWZyYW1lID0gZ3NwY2FfZ2V0X2lfZnJh
bWUoZ3NwY2FfZGV2KTsNCgkJaWYgKCFmcmFtZSkgew0KCQkJZ3NwY2FfZGV2
LT5sYXN0X3BhY2tldF90eXBlID0gRElTQ0FSRF9QQUNLRVQ7DQoJCQlicmVh
azsNCgkJfQ0KDQoJCS8qIGNoZWNrIHRoZSBwYWNrZXQgc3RhdHVzIGFuZCBs
ZW5ndGggKi8NCgkJbGVuID0gdXJiLT5pc29fZnJhbWVfZGVzY1tpXS5hY3R1
YWxfbGVuZ3RoOw0KCQlpZiAobGVuID09IDApIHsNCgkJCWlmIChnc3BjYV9k
ZXYtPmVtcHR5X3BhY2tldCA9PSAwKQ0KCQkJCWdzcGNhX2Rldi0+ZW1wdHlf
cGFja2V0ID0gMTsNCgkJCWNvbnRpbnVlOw0KCQl9DQoJCXN0ID0gdXJiLT5p
c29fZnJhbWVfZGVzY1tpXS5zdGF0dXM7DQoJCWlmIChzdCkgew0KCQkJUERF
QlVHKERfRVJSLA0KCQkJCSJJU09DIGRhdGEgZXJyb3I6IFslZF0gbGVuPSVk
LCBzdGF0dXM9JWQiLA0KCQkJCWksIGxlbiwgc3QpOw0KCQkJZ3NwY2FfZGV2
LT5sYXN0X3BhY2tldF90eXBlID0gRElTQ0FSRF9QQUNLRVQ7DQoJCQljb250
aW51ZTsNCgkJfQ0KDQoJCS8qIGxldCB0aGUgcGFja2V0IGJlIGFuYWx5emVk
IGJ5IHRoZSBzdWJkcml2ZXIgKi8NCgkJUERFQlVHKERfUEFDSywgInBhY2tl
dCBbJWRdIG86JWQgbDolZCIsDQoJCQlpLCB1cmItPmlzb19mcmFtZV9kZXNj
W2ldLm9mZnNldCwgbGVuKTsNCgkJZGF0YSA9ICh1OCAqKSB1cmItPnRyYW5z
ZmVyX2J1ZmZlcg0KCQkJCQkrIHVyYi0+aXNvX2ZyYW1lX2Rlc2NbaV0ub2Zm
c2V0Ow0KCQlwa3Rfc2Nhbihnc3BjYV9kZXYsIGZyYW1lLCBkYXRhLCBsZW4p
Ow0KCX0NCg0KCS8qIHJlc3VibWl0IHRoZSBVUkIgKi8NCglzdCA9IHVzYl9z
dWJtaXRfdXJiKHVyYiwgR0ZQX0FUT01JQyk7DQoJaWYgKHN0IDwgMCkNCgkJ
UERFQlVHKERfRVJSfERfUEFDSywgInVzYl9zdWJtaXRfdXJiKCkgcmV0ICVk
Iiwgc3QpOw0KfQ0KDQovKg0KICogSVNPQyBtZXNzYWdlIGludGVycnVwdCBm
cm9tIHRoZSBVU0IgZGV2aWNlDQogKg0KICogQW5hbHlzZSBlYWNoIHBhY2tl
dCBhbmQgY2FsbCB0aGUgc3ViZHJpdmVyIGZvciBjb3B5IHRvIHRoZSBmcmFt
ZSBidWZmZXIuDQogKi8NCiNpZiBMSU5VWF9WRVJTSU9OX0NPREUgPCBLRVJO
RUxfVkVSU0lPTigyLCA2LCAxOSkNCnN0YXRpYyB2b2lkIGlzb2NfaXJxKHN0
cnVjdCB1cmIgKnVyYiwgc3RydWN0IHB0X3JlZ3MgKnJlZ3MpDQojZWxzZQ0K
c3RhdGljIHZvaWQgaXNvY19pcnEoc3RydWN0IHVyYiAqdXJiKQ0KI2VuZGlm
DQp7DQoJc3RydWN0IGdzcGNhX2RldiAqZ3NwY2FfZGV2ID0gKHN0cnVjdCBn
c3BjYV9kZXYgKikgdXJiLT5jb250ZXh0Ow0KDQoJUERFQlVHKERfUEFDSywg
Imlzb2MgaXJxIik7DQoJaWYgKCFnc3BjYV9kZXYtPnN0cmVhbWluZykNCgkJ
cmV0dXJuOw0KCWZpbGxfZnJhbWUoZ3NwY2FfZGV2LCB1cmIpOw0KfQ0KDQov
Kg0KICogYnVsayBtZXNzYWdlIGludGVycnVwdCBmcm9tIHRoZSBVU0IgZGV2
aWNlDQogKi8NCiNpZiBMSU5VWF9WRVJTSU9OX0NPREUgPCBLRVJORUxfVkVS
U0lPTigyLCA2LCAxOSkNCnN0YXRpYyB2b2lkIGJ1bGtfaXJxKHN0cnVjdCB1
cmIgKnVyYiwgc3RydWN0IHB0X3JlZ3MgKnJlZ3MpDQojZWxzZQ0Kc3RhdGlj
IHZvaWQgYnVsa19pcnEoc3RydWN0IHVyYiAqdXJiKQ0KI2VuZGlmDQp7DQoJ
c3RydWN0IGdzcGNhX2RldiAqZ3NwY2FfZGV2ID0gKHN0cnVjdCBnc3BjYV9k
ZXYgKikgdXJiLT5jb250ZXh0Ow0KCXN0cnVjdCBnc3BjYV9mcmFtZSAqZnJh
bWU7DQoJaW50IHN0Ow0KDQoJUERFQlVHKERfUEFDSywgImJ1bGsgaXJxIik7
DQoJaWYgKCFnc3BjYV9kZXYtPnN0cmVhbWluZykNCgkJcmV0dXJuOw0KCXN3
aXRjaCAodXJiLT5zdGF0dXMpIHsNCgljYXNlIDA6DQoJCWJyZWFrOw0KCWNh
c2UgLUVDT05OUkVTRVQ6DQoJCXVyYi0+c3RhdHVzID0gMDsNCgkJYnJlYWs7
DQoJZGVmYXVsdDoNCiNpZmRlZiBDT05GSUdfUE0NCgkJaWYgKCFnc3BjYV9k
ZXYtPmZyb3plbikNCiNlbmRpZg0KCQkJUERFQlVHKERfRVJSfERfUEFDSywg
InVyYiBzdGF0dXM6ICVkIiwgdXJiLT5zdGF0dXMpOw0KCQlyZXR1cm47CQkv
KiBkaXNjb25uZWN0aW9uID8gKi8NCgl9DQoNCgkvKiBjaGVjayB0aGUgYXZh
aWxhYmlsaXR5IG9mIHRoZSBmcmFtZSBidWZmZXIgKi8NCglmcmFtZSA9IGdz
cGNhX2dldF9pX2ZyYW1lKGdzcGNhX2Rldik7DQoJaWYgKCFmcmFtZSkgew0K
CQlnc3BjYV9kZXYtPmxhc3RfcGFja2V0X3R5cGUgPSBESVNDQVJEX1BBQ0tF
VDsNCgl9IGVsc2Ugew0KCQlQREVCVUcoRF9QQUNLLCAicGFja2V0IGw6JWQi
LCB1cmItPmFjdHVhbF9sZW5ndGgpOw0KCQlnc3BjYV9kZXYtPnNkX2Rlc2Mt
PnBrdF9zY2FuKGdzcGNhX2RldiwNCgkJCQkJZnJhbWUsDQoJCQkJCXVyYi0+
dHJhbnNmZXJfYnVmZmVyLA0KCQkJCQl1cmItPmFjdHVhbF9sZW5ndGgpOw0K
CX0NCg0KCS8qIHJlc3VibWl0IHRoZSBVUkIgKi8NCglpZiAoZ3NwY2FfZGV2
LT5jYW0uYnVsa19udXJicyAhPSAwKSB7DQoJCXN0ID0gdXNiX3N1Ym1pdF91
cmIodXJiLCBHRlBfQVRPTUlDKTsNCgkJaWYgKHN0IDwgMCkNCgkJCVBERUJV
RyhEX0VSUnxEX1BBQ0ssICJ1c2Jfc3VibWl0X3VyYigpIHJldCAlZCIsIHN0
KTsNCgl9DQp9DQoNCi8qDQogKiBhZGQgZGF0YSB0byB0aGUgY3VycmVudCBm
cmFtZQ0KICoNCiAqIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGJ5IHRoZSBz
dWJkcml2ZXJzIGF0IGludGVycnVwdCBsZXZlbC4NCiAqDQogKiBUbyBidWls
ZCBhIGZyYW1lLCB0aGVzZSBvbmVzIG11c3QgYWRkDQogKgktIG9uZSBGSVJT
VF9QQUNLRVQNCiAqCS0gMCBvciBtYW55IElOVEVSX1BBQ0tFVHMNCiAqCS0g
b25lIExBU1RfUEFDS0VUDQogKiBESVNDQVJEX1BBQ0tFVCBpbnZhbGlkYXRl
cyB0aGUgd2hvbGUgZnJhbWUuDQogKiBPbiBMQVNUX1BBQ0tFVCwgYSBuZXcg
ZnJhbWUgaXMgcmV0dXJuZWQuDQogKi8NCnN0cnVjdCBnc3BjYV9mcmFtZSAq
Z3NwY2FfZnJhbWVfYWRkKHN0cnVjdCBnc3BjYV9kZXYgKmdzcGNhX2RldiwN
CgkJCQkgICAgZW51bSBnc3BjYV9wYWNrZXRfdHlwZSBwYWNrZXRfdHlwZSwN
CgkJCQkgICAgc3RydWN0IGdzcGNhX2ZyYW1lICpmcmFtZSwNCgkJCQkgICAg
Y29uc3QgX191OCAqZGF0YSwNCgkJCQkgICAgaW50IGxlbikNCnsNCglpbnQg
aSwgajsNCg0KCVBERUJVRyhEX1BBQ0ssICJhZGQgdDolZCBsOiVkIiwJcGFj
a2V0X3R5cGUsIGxlbik7DQoNCgkvKiB3aGVuIHN0YXJ0IG9mIGEgbmV3IGZy
YW1lLCBpZiB0aGUgY3VycmVudCBmcmFtZSBidWZmZXINCgkgKiBpcyBub3Qg
cXVldWVkLCBkaXNjYXJkIHRoZSB3aG9sZSBmcmFtZSAqLw0KCWlmIChwYWNr
ZXRfdHlwZSA9PSBGSVJTVF9QQUNLRVQpIHsNCgkJaWYgKChmcmFtZS0+djRs
Ml9idWYuZmxhZ3MgJiBCVUZfQUxMX0ZMQUdTKQ0KCQkJCQkJIT0gVjRMMl9C
VUZfRkxBR19RVUVVRUQpIHsNCgkJCWdzcGNhX2Rldi0+bGFzdF9wYWNrZXRf
dHlwZSA9IERJU0NBUkRfUEFDS0VUOw0KCQkJcmV0dXJuIGZyYW1lOw0KCQl9
DQoJCWZyYW1lLT5kYXRhX2VuZCA9IGZyYW1lLT5kYXRhOw0KCQlqaWZmaWVz
X3RvX3RpbWV2YWwoZ2V0X2ppZmZpZXNfNjQoKSwNCgkJCQkgICAmZnJhbWUt
PnY0bDJfYnVmLnRpbWVzdGFtcCk7DQoJCWZyYW1lLT52NGwyX2J1Zi5zZXF1
ZW5jZSA9ICsrZ3NwY2FfZGV2LT5zZXF1ZW5jZTsNCgl9IGVsc2UgaWYgKGdz
cGNhX2Rldi0+bGFzdF9wYWNrZXRfdHlwZSA9PSBESVNDQVJEX1BBQ0tFVCkg
ew0KCQlpZiAocGFja2V0X3R5cGUgPT0gTEFTVF9QQUNLRVQpDQoJCQlnc3Bj
YV9kZXYtPmxhc3RfcGFja2V0X3R5cGUgPSBwYWNrZXRfdHlwZTsNCgkJcmV0
dXJuIGZyYW1lOw0KCX0NCg0KCS8qIGFwcGVuZCB0aGUgcGFja2V0IHRvIHRo
ZSBmcmFtZSBidWZmZXIgKi8NCglpZiAobGVuID4gMCkgew0KCQlpZiAoZnJh
bWUtPmRhdGFfZW5kIC0gZnJhbWUtPmRhdGEgKyBsZW4NCgkJCQkJCSA+IGZy
YW1lLT52NGwyX2J1Zi5sZW5ndGgpIHsNCgkJCVBERUJVRyhEX0VSUnxEX1BB
Q0ssICJmcmFtZSBvdmVyZmxvdyAlemQgPiAlZCIsDQoJCQkJZnJhbWUtPmRh
dGFfZW5kIC0gZnJhbWUtPmRhdGEgKyBsZW4sDQoJCQkJZnJhbWUtPnY0bDJf
YnVmLmxlbmd0aCk7DQoJCQlwYWNrZXRfdHlwZSA9IERJU0NBUkRfUEFDS0VU
Ow0KCQl9IGVsc2Ugew0KCQkJbWVtY3B5KGZyYW1lLT5kYXRhX2VuZCwgZGF0
YSwgbGVuKTsNCgkJCWZyYW1lLT5kYXRhX2VuZCArPSBsZW47DQoJCX0NCgl9
DQoJZ3NwY2FfZGV2LT5sYXN0X3BhY2tldF90eXBlID0gcGFja2V0X3R5cGU7
DQoNCgkvKiBpZiBsYXN0IHBhY2tldCwgd2FrZSB1cCB0aGUgYXBwbGljYXRp
b24gYW5kIGFkdmFuY2UgaW4gdGhlIHF1ZXVlICovDQoJaWYgKHBhY2tldF90
eXBlID09IExBU1RfUEFDS0VUKSB7DQoJCWZyYW1lLT52NGwyX2J1Zi5ieXRl
c3VzZWQgPSBmcmFtZS0+ZGF0YV9lbmQgLSBmcmFtZS0+ZGF0YTsNCgkJZnJh
bWUtPnY0bDJfYnVmLmZsYWdzICY9IH5WNEwyX0JVRl9GTEFHX1FVRVVFRDsN
CgkJZnJhbWUtPnY0bDJfYnVmLmZsYWdzIHw9IFY0TDJfQlVGX0ZMQUdfRE9O
RTsNCgkJd2FrZV91cF9pbnRlcnJ1cHRpYmxlKCZnc3BjYV9kZXYtPndxKTsJ
LyogZXZlbnQgPSBuZXcgZnJhbWUgKi8NCgkJaSA9IChnc3BjYV9kZXYtPmZy
X2kgKyAxKSAlIGdzcGNhX2Rldi0+bmZyYW1lczsNCgkJZ3NwY2FfZGV2LT5m
cl9pID0gaTsNCgkJUERFQlVHKERfRlJBTSwgImZyYW1lIGNvbXBsZXRlIGxl
bjolZCBxOiVkIGk6JWQgbzolZCIsDQoJCQlmcmFtZS0+djRsMl9idWYuYnl0
ZXN1c2VkLA0KCQkJZ3NwY2FfZGV2LT5mcl9xLA0KCQkJaSwNCgkJCWdzcGNh
X2Rldi0+ZnJfbyk7DQoJCWogPSBnc3BjYV9kZXYtPmZyX3F1ZXVlW2ldOw0K
CQlmcmFtZSA9ICZnc3BjYV9kZXYtPmZyYW1lW2pdOw0KCX0NCglyZXR1cm4g
ZnJhbWU7DQp9DQpFWFBPUlRfU1lNQk9MKGdzcGNhX2ZyYW1lX2FkZCk7DQoN
CnN0YXRpYyBpbnQgZ3NwY2FfaXNfY29tcHJlc3NlZChfX3UzMiBmb3JtYXQp
DQp7DQoJc3dpdGNoIChmb3JtYXQpIHsNCgljYXNlIFY0TDJfUElYX0ZNVF9N
SlBFRzoNCgljYXNlIFY0TDJfUElYX0ZNVF9KUEVHOg0KCWNhc2UgVjRMMl9Q
SVhfRk1UX1NQQ0E1NjE6DQoJY2FzZSBWNEwyX1BJWF9GTVRfUEFDMjA3Og0K
CWNhc2UgVjRMMl9QSVhfRk1UX01SOTczMTBBOg0KCQlyZXR1cm4gMTsNCgl9
DQoJcmV0dXJuIDA7DQp9DQoNCnN0YXRpYyB2b2lkICpydm1hbGxvYyh1bnNp
Z25lZCBsb25nIHNpemUpDQp7DQoJdm9pZCAqbWVtOw0KCXVuc2lnbmVkIGxv
bmcgYWRyOw0KDQoJbWVtID0gdm1hbGxvY18zMihzaXplKTsNCglpZiAobWVt
ICE9IE5VTEwpIHsNCgkJYWRyID0gKHVuc2lnbmVkIGxvbmcpIG1lbTsNCgkJ
d2hpbGUgKChsb25nKSBzaXplID4gMCkgew0KCQkJU2V0UGFnZVJlc2VydmVk
KHZtYWxsb2NfdG9fcGFnZSgodm9pZCAqKSBhZHIpKTsNCgkJCWFkciArPSBQ
QUdFX1NJWkU7DQoJCQlzaXplIC09IFBBR0VfU0laRTsNCgkJfQ0KCX0NCgly
ZXR1cm4gbWVtOw0KfQ0KDQpzdGF0aWMgdm9pZCBydmZyZWUodm9pZCAqbWVt
LCBsb25nIHNpemUpDQp7DQoJdW5zaWduZWQgbG9uZyBhZHI7DQoNCglhZHIg
PSAodW5zaWduZWQgbG9uZykgbWVtOw0KCXdoaWxlIChzaXplID4gMCkgew0K
CQlDbGVhclBhZ2VSZXNlcnZlZCh2bWFsbG9jX3RvX3BhZ2UoKHZvaWQgKikg
YWRyKSk7DQoJCWFkciArPSBQQUdFX1NJWkU7DQoJCXNpemUgLT0gUEFHRV9T
SVpFOw0KCX0NCgl2ZnJlZShtZW0pOw0KfQ0KDQpzdGF0aWMgaW50IGZyYW1l
X2FsbG9jKHN0cnVjdCBnc3BjYV9kZXYgKmdzcGNhX2RldiwNCgkJCXVuc2ln
bmVkIGludCBjb3VudCkNCnsNCglzdHJ1Y3QgZ3NwY2FfZnJhbWUgKmZyYW1l
Ow0KCXVuc2lnbmVkIGludCBmcnN6Ow0KCWludCBpOw0KDQoJaSA9IGdzcGNh
X2Rldi0+Y3Vycl9tb2RlOw0KCWZyc3ogPSBnc3BjYV9kZXYtPmNhbS5jYW1f
bW9kZVtpXS5zaXplaW1hZ2U7DQoJUERFQlVHKERfU1RSRUFNLCAiZnJhbWUg
YWxsb2MgZnJzejogJWQiLCBmcnN6KTsNCglmcnN6ID0gUEFHRV9BTElHTihm
cnN6KTsNCglnc3BjYV9kZXYtPmZyc3ogPSBmcnN6Ow0KCWlmIChjb3VudCA+
IEdTUENBX01BWF9GUkFNRVMpDQoJCWNvdW50ID0gR1NQQ0FfTUFYX0ZSQU1F
UzsNCglnc3BjYV9kZXYtPmZyYnVmID0gcnZtYWxsb2MoZnJzeiAqIGNvdW50
KTsNCglpZiAoIWdzcGNhX2Rldi0+ZnJidWYpIHsNCgkJZXJyKCJmcmFtZSBh
bGxvYyBmYWlsZWQiKTsNCgkJcmV0dXJuIC1FTk9NRU07DQoJfQ0KCWdzcGNh
X2Rldi0+bmZyYW1lcyA9IGNvdW50Ow0KCWZvciAoaSA9IDA7IGkgPCBjb3Vu
dDsgaSsrKSB7DQoJCWZyYW1lID0gJmdzcGNhX2Rldi0+ZnJhbWVbaV07DQoJ
CWZyYW1lLT52NGwyX2J1Zi5pbmRleCA9IGk7DQoJCWZyYW1lLT52NGwyX2J1
Zi50eXBlID0gVjRMMl9CVUZfVFlQRV9WSURFT19DQVBUVVJFOw0KCQlmcmFt
ZS0+djRsMl9idWYuZmxhZ3MgPSAwOw0KCQlmcmFtZS0+djRsMl9idWYuZmll
bGQgPSBWNEwyX0ZJRUxEX05PTkU7DQoJCWZyYW1lLT52NGwyX2J1Zi5sZW5n
dGggPSBmcnN6Ow0KCQlmcmFtZS0+djRsMl9idWYubWVtb3J5ID0gZ3NwY2Ff
ZGV2LT5tZW1vcnk7DQoJCWZyYW1lLT52NGwyX2J1Zi5zZXF1ZW5jZSA9IDA7
DQoJCWZyYW1lLT5kYXRhID0gZnJhbWUtPmRhdGFfZW5kID0NCgkJCQkJZ3Nw
Y2FfZGV2LT5mcmJ1ZiArIGkgKiBmcnN6Ow0KCQlmcmFtZS0+djRsMl9idWYu
bS5vZmZzZXQgPSBpICogZnJzejsNCgl9DQoJZ3NwY2FfZGV2LT5mcl9pID0g
Z3NwY2FfZGV2LT5mcl9vID0gZ3NwY2FfZGV2LT5mcl9xID0gMDsNCglnc3Bj
YV9kZXYtPmxhc3RfcGFja2V0X3R5cGUgPSBESVNDQVJEX1BBQ0tFVDsNCgln
c3BjYV9kZXYtPnNlcXVlbmNlID0gMDsNCglyZXR1cm4gMDsNCn0NCg0Kc3Rh
dGljIHZvaWQgZnJhbWVfZnJlZShzdHJ1Y3QgZ3NwY2FfZGV2ICpnc3BjYV9k
ZXYpDQp7DQoJaW50IGk7DQoNCglQREVCVUcoRF9TVFJFQU0sICJmcmFtZSBm
cmVlIik7DQoJaWYgKGdzcGNhX2Rldi0+ZnJidWYgIT0gTlVMTCkgew0KCQly
dmZyZWUoZ3NwY2FfZGV2LT5mcmJ1ZiwNCgkJCWdzcGNhX2Rldi0+bmZyYW1l
cyAqIGdzcGNhX2Rldi0+ZnJzeik7DQoJCWdzcGNhX2Rldi0+ZnJidWYgPSBO
VUxMOw0KCQlmb3IgKGkgPSAwOyBpIDwgZ3NwY2FfZGV2LT5uZnJhbWVzOyBp
KyspDQoJCQlnc3BjYV9kZXYtPmZyYW1lW2ldLmRhdGEgPSBOVUxMOw0KCX0N
Cglnc3BjYV9kZXYtPm5mcmFtZXMgPSAwOw0KfQ0KDQpzdGF0aWMgdm9pZCBk
ZXN0cm95X3VyYnMoc3RydWN0IGdzcGNhX2RldiAqZ3NwY2FfZGV2KQ0Kew0K
CXN0cnVjdCB1cmIgKnVyYjsNCgl1bnNpZ25lZCBpbnQgaTsNCg0KCVBERUJV
RyhEX1NUUkVBTSwgImtpbGwgdHJhbnNmZXIiKTsNCglmb3IgKGkgPSAwOyBp
IDwgTUFYX05VUkJTOyBpKyspIHsNCgkJdXJiID0gZ3NwY2FfZGV2LT51cmJb
aV07DQoJCWlmICh1cmIgPT0gTlVMTCkNCgkJCWJyZWFrOw0KDQoJCWdzcGNh
X2Rldi0+dXJiW2ldID0gTlVMTDsNCgkJaWYgKCFnc3BjYV9kZXYtPnByZXNl
bnQpDQoJCQl1c2Jfa2lsbF91cmIodXJiKTsNCgkJaWYgKHVyYi0+dHJhbnNm
ZXJfYnVmZmVyICE9IE5VTEwpDQoJCQl1c2JfYnVmZmVyX2ZyZWUoZ3NwY2Ff
ZGV2LT5kZXYsDQoJCQkJCXVyYi0+dHJhbnNmZXJfYnVmZmVyX2xlbmd0aCwN
CgkJCQkJdXJiLT50cmFuc2Zlcl9idWZmZXIsDQoJCQkJCXVyYi0+dHJhbnNm
ZXJfZG1hKTsNCgkJdXNiX2ZyZWVfdXJiKHVyYik7DQoJfQ0KfQ0KDQovKg0K
ICogbG9vayBmb3IgYW4gaW5wdXQgdHJhbnNmZXIgZW5kcG9pbnQgaW4gYW4g
YWx0ZXJuYXRlIHNldHRpbmcNCiAqLw0Kc3RhdGljIHN0cnVjdCB1c2JfaG9z
dF9lbmRwb2ludCAqYWx0X3hmZXIoc3RydWN0IHVzYl9ob3N0X2ludGVyZmFj
ZSAqYWx0LA0KCQkJCQkgIF9fdTggeGZlcikNCnsNCglzdHJ1Y3QgdXNiX2hv
c3RfZW5kcG9pbnQgKmVwOw0KCWludCBpLCBhdHRyOw0KDQoJZm9yIChpID0g
MDsgaSA8IGFsdC0+ZGVzYy5iTnVtRW5kcG9pbnRzOyBpKyspIHsNCgkJZXAg
PSAmYWx0LT5lbmRwb2ludFtpXTsNCgkJYXR0ciA9IGVwLT5kZXNjLmJtQXR0
cmlidXRlcyAmIFVTQl9FTkRQT0lOVF9YRkVSVFlQRV9NQVNLOw0KCQlpZiAo
YXR0ciA9PSB4ZmVyKQ0KCQkJcmV0dXJuIGVwOw0KCX0NCglyZXR1cm4gTlVM
TDsNCn0NCg0KLyoNCiAqIGxvb2sgZm9yIGFuIGlucHV0IChpc29jIG9yIGJ1
bGspIGVuZHBvaW50DQogKg0KICogVGhlIGVuZHBvaW50IGlzIGRlZmluZWQg
YnkgdGhlIHN1YmRyaXZlci4NCiAqIFVzZSBvbmx5IHRoZSBmaXJzdCBpc29j
IChzb21lIFpvcmFuIC0gMHgwNTcyOjB4MDAwMSAtIGhhdmUgdHdvIHN1Y2gg
ZXApLg0KICogVGhpcyByb3V0aW5lIG1heSBiZSBjYWxsZWQgbWFueSB0aW1l
cyB3aGVuIHRoZSBiYW5kd2lkdGggaXMgdG9vIHNtYWxsDQogKiAodGhlIGJh
bmR3aWR0aCBpcyBjaGVja2VkIG9uIHVyYiBzdWJtaXQpLg0KICovDQpzdGF0
aWMgc3RydWN0IHVzYl9ob3N0X2VuZHBvaW50ICpnZXRfZXAoc3RydWN0IGdz
cGNhX2RldiAqZ3NwY2FfZGV2KQ0Kew0KCXN0cnVjdCB1c2JfaW50ZXJmYWNl
ICppbnRmOw0KCXN0cnVjdCB1c2JfaG9zdF9lbmRwb2ludCAqZXA7DQoJaW50
IGksIHJldDsNCg0KCWludGYgPSB1c2JfaWZudW1fdG9faWYoZ3NwY2FfZGV2
LT5kZXYsIGdzcGNhX2Rldi0+aWZhY2UpOw0KCWVwID0gTlVMTDsNCglpID0g
Z3NwY2FfZGV2LT5hbHQ7CQkJLyogcHJldmlvdXMgYWx0IHNldHRpbmcgKi8N
Cg0KCS8qIHRyeSBpc29jICovDQoJd2hpbGUgKC0taSA+IDApIHsJCQkvKiBh
bHQgMCBpcyB1bnVzYWJsZSAqLw0KCQllcCA9IGFsdF94ZmVyKCZpbnRmLT5h
bHRzZXR0aW5nW2ldLA0KCQkJCVVTQl9FTkRQT0lOVF9YRkVSX0lTT0MpOw0K
CQlpZiAoZXApDQoJCQlicmVhazsNCgl9DQoNCgkvKiBpZiBubyBpc29jLCB0
cnkgYnVsayAqLw0KCWlmIChlcCA9PSBOVUxMKSB7DQoJCWVwID0gYWx0X3hm
ZXIoJmludGYtPmFsdHNldHRpbmdbMF0sDQoJCQkJVVNCX0VORFBPSU5UX1hG
RVJfQlVMSyk7DQoJCWlmIChlcCA9PSBOVUxMKSB7DQoJCQllcnIoIm5vIHRy
YW5zZmVyIGVuZHBvaW50IGZvdW5kIik7DQoJCQlyZXR1cm4gTlVMTDsNCgkJ
fQ0KCX0NCglQREVCVUcoRF9TVFJFQU0sICJ1c2UgYWx0ICVkIGVwIDB4JTAy
eCIsDQoJCQlpLCBlcC0+ZGVzYy5iRW5kcG9pbnRBZGRyZXNzKTsNCglpZiAo
aSA+IDApIHsNCgkJcmV0ID0gdXNiX3NldF9pbnRlcmZhY2UoZ3NwY2FfZGV2
LT5kZXYsIGdzcGNhX2Rldi0+aWZhY2UsIGkpOw0KCQlpZiAocmV0IDwgMCkg
ew0KCQkJZXJyKCJzZXQgaW50ZXJmYWNlIGVyciAlZCIsIHJldCk7DQoJCQly
ZXR1cm4gTlVMTDsNCgkJfQ0KCX0NCglnc3BjYV9kZXYtPmFsdCA9IGk7CQkv
KiBtZW1vcml6ZSB0aGUgY3VycmVudCBhbHQgc2V0dGluZyAqLw0KCXJldHVy
biBlcDsNCn0NCg0KLyoNCiAqIGNyZWF0ZSB0aGUgVVJCcyBmb3IgaW1hZ2Ug
dHJhbnNmZXINCiAqLw0Kc3RhdGljIGludCBjcmVhdGVfdXJicyhzdHJ1Y3Qg
Z3NwY2FfZGV2ICpnc3BjYV9kZXYsDQoJCQlzdHJ1Y3QgdXNiX2hvc3RfZW5k
cG9pbnQgKmVwKQ0Kew0KCXN0cnVjdCB1cmIgKnVyYjsNCglpbnQgbiwgbnVy
YnMsIGksIHBzaXplLCBucGt0LCBic2l6ZTsNCg0KCS8qIGNhbGN1bGF0ZSB0
aGUgcGFja2V0IHNpemUgYW5kIHRoZSBudW1iZXIgb2YgcGFja2V0cyAqLw0K
CXBzaXplID0gbGUxNl90b19jcHUoZXAtPmRlc2Mud01heFBhY2tldFNpemUp
Ow0KDQoJaWYgKGdzcGNhX2Rldi0+YWx0ICE9IDApIHsJCS8qIGlzb2MgKi8N
Cg0KCQkvKiBTZWUgcGFyYWdyYXBoIDUuOSAvIHRhYmxlIDUtMTEgb2YgdGhl
IHVzYiAyLjAgc3BlYy4gKi8NCgkJcHNpemUgPSAocHNpemUgJiAweDA3ZmYp
ICogKDEgKyAoKHBzaXplID4+IDExKSAmIDMpKTsNCgkJbnBrdCA9IElTT19N
QVhfU0laRSAvIHBzaXplOw0KCQlpZiAobnBrdCA+IElTT19NQVhfUEtUKQ0K
CQkJbnBrdCA9IElTT19NQVhfUEtUOw0KCQlic2l6ZSA9IHBzaXplICogbnBr
dDsNCgkJUERFQlVHKERfU1RSRUFNLA0KCQkJImlzb2MgJWQgcGt0cyBzaXpl
ICVkID0gYnNpemU6JWQiLA0KCQkJbnBrdCwgcHNpemUsIGJzaXplKTsNCgkJ
bnVyYnMgPSBERUZfTlVSQlM7DQoJfSBlbHNlIHsJCQkJLyogYnVsayAqLw0K
CQlucGt0ID0gMDsNCgkJYnNpemUgPSBnc3BjYV9kZXYtPmNhbS5idWxrX3Np
emU7DQoJCWlmIChic2l6ZSA9PSAwKQ0KCQkJYnNpemUgPSBwc2l6ZTsNCgkJ
UERFQlVHKERfU1RSRUFNLCAiYnVsayBic2l6ZTolZCIsIGJzaXplKTsNCgkJ
aWYgKGdzcGNhX2Rldi0+Y2FtLmJ1bGtfbnVyYnMgIT0gMCkNCgkJCW51cmJz
ID0gZ3NwY2FfZGV2LT5jYW0uYnVsa19udXJiczsNCgkJZWxzZQ0KCQkJbnVy
YnMgPSAxOw0KCX0NCg0KCWdzcGNhX2Rldi0+bnVyYnMgPSBudXJiczsNCglm
b3IgKG4gPSAwOyBuIDwgbnVyYnM7IG4rKykgew0KCQl1cmIgPSB1c2JfYWxs
b2NfdXJiKG5wa3QsIEdGUF9LRVJORUwpOw0KCQlpZiAoIXVyYikgew0KCQkJ
ZXJyKCJ1c2JfYWxsb2NfdXJiIGZhaWxlZCIpOw0KCQkJZGVzdHJveV91cmJz
KGdzcGNhX2Rldik7DQoJCQlyZXR1cm4gLUVOT01FTTsNCgkJfQ0KCQl1cmIt
PnRyYW5zZmVyX2J1ZmZlciA9IHVzYl9idWZmZXJfYWxsb2MoZ3NwY2FfZGV2
LT5kZXYsDQoJCQkJCQlic2l6ZSwNCgkJCQkJCUdGUF9LRVJORUwsDQoJCQkJ
CQkmdXJiLT50cmFuc2Zlcl9kbWEpOw0KDQoJCWlmICh1cmItPnRyYW5zZmVy
X2J1ZmZlciA9PSBOVUxMKSB7DQoJCQl1c2JfZnJlZV91cmIodXJiKTsNCgkJ
CWVycigidXNiX2J1ZmZlcl91cmIgZmFpbGVkIik7DQoJCQlkZXN0cm95X3Vy
YnMoZ3NwY2FfZGV2KTsNCgkJCXJldHVybiAtRU5PTUVNOw0KCQl9DQoJCWdz
cGNhX2Rldi0+dXJiW25dID0gdXJiOw0KCQl1cmItPmRldiA9IGdzcGNhX2Rl
di0+ZGV2Ow0KCQl1cmItPmNvbnRleHQgPSBnc3BjYV9kZXY7DQoJCXVyYi0+
dHJhbnNmZXJfYnVmZmVyX2xlbmd0aCA9IGJzaXplOw0KCQlpZiAobnBrdCAh
PSAwKSB7CQkvKiBJU09DICovDQoJCQl1cmItPnBpcGUgPSB1c2JfcmN2aXNv
Y3BpcGUoZ3NwY2FfZGV2LT5kZXYsDQoJCQkJCQkgICAgZXAtPmRlc2MuYkVu
ZHBvaW50QWRkcmVzcyk7DQoJCQl1cmItPnRyYW5zZmVyX2ZsYWdzID0gVVJC
X0lTT19BU0FQDQoJCQkJCXwgVVJCX05PX1RSQU5TRkVSX0RNQV9NQVA7DQoJ
CQl1cmItPmludGVydmFsID0gZXAtPmRlc2MuYkludGVydmFsOw0KCQkJdXJi
LT5jb21wbGV0ZSA9IGlzb2NfaXJxOw0KCQkJdXJiLT5udW1iZXJfb2ZfcGFj
a2V0cyA9IG5wa3Q7DQoJCQlmb3IgKGkgPSAwOyBpIDwgbnBrdDsgaSsrKSB7
DQoJCQkJdXJiLT5pc29fZnJhbWVfZGVzY1tpXS5sZW5ndGggPSBwc2l6ZTsN
CgkJCQl1cmItPmlzb19mcmFtZV9kZXNjW2ldLm9mZnNldCA9IHBzaXplICog
aTsNCgkJCX0NCgkJfSBlbHNlIHsJCS8qIGJ1bGsgKi8NCgkJCXVyYi0+cGlw
ZSA9IHVzYl9yY3ZidWxrcGlwZShnc3BjYV9kZXYtPmRldiwNCgkJCQkJCWVw
LT5kZXNjLmJFbmRwb2ludEFkZHJlc3MpLA0KCQkJdXJiLT50cmFuc2Zlcl9m
bGFncyA9IFVSQl9OT19UUkFOU0ZFUl9ETUFfTUFQOw0KCQkJdXJiLT5jb21w
bGV0ZSA9IGJ1bGtfaXJxOw0KCQl9DQoJfQ0KCXJldHVybiAwOw0KfQ0KDQov
Kg0KICogc3RhcnQgdGhlIFVTQiB0cmFuc2Zlcg0KICovDQpzdGF0aWMgaW50
IGdzcGNhX2luaXRfdHJhbnNmZXIoc3RydWN0IGdzcGNhX2RldiAqZ3NwY2Ff
ZGV2KQ0Kew0KCXN0cnVjdCB1c2JfaG9zdF9lbmRwb2ludCAqZXA7DQoJaW50
IG4sIHJldDsNCg0KCWlmIChtdXRleF9sb2NrX2ludGVycnVwdGlibGUoJmdz
cGNhX2Rldi0+dXNiX2xvY2spKQ0KCQlyZXR1cm4gLUVSRVNUQVJUU1lTOw0K
DQoJLyogc2V0IHRoZSBoaWdoZXIgYWx0ZXJuYXRlIHNldHRpbmcgYW5kDQoJ
ICogbG9vcCB1bnRpbCB1cmIgc3VibWl0IHN1Y2NlZWRzICovDQoJZ3NwY2Ff
ZGV2LT5hbHQgPSBnc3BjYV9kZXYtPm5iYWx0Ow0KCWZvciAoOzspIHsNCgkJ
UERFQlVHKERfU1RSRUFNLCAiaW5pdCB0cmFuc2ZlciBhbHQgJWQiLCBnc3Bj
YV9kZXYtPmFsdCk7DQoJCWVwID0gZ2V0X2VwKGdzcGNhX2Rldik7DQoJCWlm
IChlcCA9PSBOVUxMKSB7DQoJCQlyZXQgPSAtRUlPOw0KCQkJZ290byBvdXQ7
DQoJCX0NCgkJcmV0ID0gY3JlYXRlX3VyYnMoZ3NwY2FfZGV2LCBlcCk7DQoJ
CWlmIChyZXQgPCAwKQ0KCQkJZ290byBvdXQ7DQoNCgkJLyogY2xlYXIgdGhl
IGJ1bGsgZW5kcG9pbnQgKi8NCgkJaWYgKGdzcGNhX2Rldi0+YWx0ID09IDAp
CS8qIGlmIGJ1bGsgdHJhbnNmZXIgKi8NCgkJCXVzYl9jbGVhcl9oYWx0KGdz
cGNhX2Rldi0+ZGV2LA0KCQkJCQlnc3BjYV9kZXYtPnVyYlswXS0+cGlwZSk7
DQoNCgkJLyogc3RhcnQgdGhlIGNhbSAqLw0KCQlyZXQgPSBnc3BjYV9kZXYt
PnNkX2Rlc2MtPnN0YXJ0KGdzcGNhX2Rldik7DQoJCWlmIChyZXQgPCAwKSB7
DQoJCQlkZXN0cm95X3VyYnMoZ3NwY2FfZGV2KTsNCgkJCWdvdG8gb3V0Ow0K
CQl9DQoJCWdzcGNhX2Rldi0+c3RyZWFtaW5nID0gMTsNCg0KCQkvKiBzb21l
IGJ1bGsgdHJhbnNmZXJzIGFyZSBzdGFydGVkIGJ5IHRoZSBzdWJkcml2ZXIg
Ki8NCgkJaWYgKGdzcGNhX2Rldi0+YWx0ID09IDAgJiYgZ3NwY2FfZGV2LT5j
YW0uYnVsa19udXJicyA9PSAwKQ0KCQkJYnJlYWs7DQoNCgkJLyogc3VibWl0
IHRoZSBVUkJzICovDQoJCWZvciAobiA9IDA7IG4gPCBnc3BjYV9kZXYtPm51
cmJzOyBuKyspIHsNCgkJCXJldCA9IHVzYl9zdWJtaXRfdXJiKGdzcGNhX2Rl
di0+dXJiW25dLCBHRlBfS0VSTkVMKTsNCgkJCWlmIChyZXQgPCAwKSB7DQoJ
CQkJUERFQlVHKERfRVJSfERfU1RSRUFNLA0KCQkJCQkidXNiX3N1Ym1pdF91
cmIgWyVkXSBlcnIgJWQiLCBuLCByZXQpOw0KCQkJCWdzcGNhX2Rldi0+c3Ry
ZWFtaW5nID0gMDsNCgkJCQlkZXN0cm95X3VyYnMoZ3NwY2FfZGV2KTsNCgkJ
CQlpZiAocmV0ID09IC1FTk9TUEMpIHsNCgkJCQkJbXNsZWVwKDIwKTsJLyog
d2FpdCBmb3Iga2lsbA0KCQkJCQkJCSAqIGNvbXBsZXRlICovDQoJCQkJCWJy
ZWFrOwkvKiB0cnkgdGhlIHByZXZpb3VzIGFsdCAqLw0KCQkJCX0NCgkJCQln
b3RvIG91dDsNCgkJCX0NCgkJfQ0KCQlpZiAocmV0ID49IDApDQoJCQlicmVh
azsNCgl9DQpvdXQ6DQoJbXV0ZXhfdW5sb2NrKCZnc3BjYV9kZXYtPnVzYl9s
b2NrKTsNCglyZXR1cm4gcmV0Ow0KfQ0KDQpzdGF0aWMgaW50IGdzcGNhX3Nl
dF9hbHQwKHN0cnVjdCBnc3BjYV9kZXYgKmdzcGNhX2RldikNCnsNCglpbnQg
cmV0Ow0KDQoJcmV0ID0gdXNiX3NldF9pbnRlcmZhY2UoZ3NwY2FfZGV2LT5k
ZXYsIGdzcGNhX2Rldi0+aWZhY2UsIDApOw0KCWlmIChyZXQgPCAwKQ0KCQlQ
REVCVUcoRF9FUlJ8RF9TVFJFQU0sICJzZXQgYWx0IDAgZXJyICVkIiwgcmV0
KTsNCglyZXR1cm4gcmV0Ow0KfQ0KDQovKiBOb3RlOiBib3RoIHRoZSBxdWV1
ZSBhbmQgdGhlIHVzYiBsb2NrcyBzaG91bGQgYmUgaGVsZCB3aGVuIGNhbGxp
bmcgdGhpcyAqLw0Kc3RhdGljIHZvaWQgZ3NwY2Ffc3RyZWFtX29mZihzdHJ1
Y3QgZ3NwY2FfZGV2ICpnc3BjYV9kZXYpDQp7DQoJZ3NwY2FfZGV2LT5zdHJl
YW1pbmcgPSAwOw0KCWlmIChnc3BjYV9kZXYtPnByZXNlbnQNCgkgICAgJiYg
Z3NwY2FfZGV2LT5zZF9kZXNjLT5zdG9wTikNCgkJZ3NwY2FfZGV2LT5zZF9k
ZXNjLT5zdG9wTihnc3BjYV9kZXYpOw0KCWRlc3Ryb3lfdXJicyhnc3BjYV9k
ZXYpOw0KCWlmIChnc3BjYV9kZXYtPnByZXNlbnQpDQoJCWdzcGNhX3NldF9h
bHQwKGdzcGNhX2Rldik7DQoJaWYgKGdzcGNhX2Rldi0+c2RfZGVzYy0+c3Rv
cDApDQoJCWdzcGNhX2Rldi0+c2RfZGVzYy0+c3RvcDAoZ3NwY2FfZGV2KTsN
CglQREVCVUcoRF9TVFJFQU0sICJzdHJlYW0gb2ZmIE9LIik7DQp9DQoNCnN0
YXRpYyB2b2lkIGdzcGNhX3NldF9kZWZhdWx0X21vZGUoc3RydWN0IGdzcGNh
X2RldiAqZ3NwY2FfZGV2KQ0Kew0KCWludCBpOw0KDQoJaSA9IGdzcGNhX2Rl
di0+Y2FtLm5tb2RlcyAtIDE7CS8qIHRha2UgdGhlIGhpZ2hlc3QgbW9kZSAq
Lw0KCWdzcGNhX2Rldi0+Y3Vycl9tb2RlID0gaTsNCglnc3BjYV9kZXYtPndp
ZHRoID0gZ3NwY2FfZGV2LT5jYW0uY2FtX21vZGVbaV0ud2lkdGg7DQoJZ3Nw
Y2FfZGV2LT5oZWlnaHQgPSBnc3BjYV9kZXYtPmNhbS5jYW1fbW9kZVtpXS5o
ZWlnaHQ7DQoJZ3NwY2FfZGV2LT5waXhmbXQgPSBnc3BjYV9kZXYtPmNhbS5j
YW1fbW9kZVtpXS5waXhlbGZvcm1hdDsNCn0NCg0Kc3RhdGljIGludCB3eGhf
dG9fbW9kZShzdHJ1Y3QgZ3NwY2FfZGV2ICpnc3BjYV9kZXYsDQoJCQlpbnQg
d2lkdGgsIGludCBoZWlnaHQpDQp7DQoJaW50IGk7DQoNCglmb3IgKGkgPSBn
c3BjYV9kZXYtPmNhbS5ubW9kZXM7IC0taSA+IDA7ICkgew0KCQlpZiAod2lk
dGggPj0gZ3NwY2FfZGV2LT5jYW0uY2FtX21vZGVbaV0ud2lkdGgNCgkJICAg
ICYmIGhlaWdodCA+PSBnc3BjYV9kZXYtPmNhbS5jYW1fbW9kZVtpXS5oZWln
aHQpDQoJCQlicmVhazsNCgl9DQoJcmV0dXJuIGk7DQp9DQoNCi8qDQogKiBz
ZWFyY2ggYSBtb2RlIHdpdGggdGhlIHJpZ2h0IHBpeGVsIGZvcm1hdA0KICov
DQpzdGF0aWMgaW50IGdzcGNhX2dldF9tb2RlKHN0cnVjdCBnc3BjYV9kZXYg
KmdzcGNhX2RldiwNCgkJCWludCBtb2RlLA0KCQkJaW50IHBpeGZtdCkNCnsN
CglpbnQgbW9kZVUsIG1vZGVEOw0KDQoJbW9kZVUgPSBtb2RlRCA9IG1vZGU7
DQoJd2hpbGUgKChtb2RlVSA8IGdzcGNhX2Rldi0+Y2FtLm5tb2RlcykgfHwg
bW9kZUQgPj0gMCkgew0KCQlpZiAoLS1tb2RlRCA+PSAwKSB7DQoJCQlpZiAo
Z3NwY2FfZGV2LT5jYW0uY2FtX21vZGVbbW9kZURdLnBpeGVsZm9ybWF0DQoJ
CQkJCQkJCT09IHBpeGZtdCkNCgkJCQlyZXR1cm4gbW9kZUQ7DQoJCX0NCgkJ
aWYgKCsrbW9kZVUgPCBnc3BjYV9kZXYtPmNhbS5ubW9kZXMpIHsNCgkJCWlm
IChnc3BjYV9kZXYtPmNhbS5jYW1fbW9kZVttb2RlVV0ucGl4ZWxmb3JtYXQN
CgkJCQkJCQkJPT0gcGl4Zm10KQ0KCQkJCXJldHVybiBtb2RlVTsNCgkJfQ0K
CX0NCglyZXR1cm4gLUVJTlZBTDsNCn0NCg0Kc3RhdGljIGludCB2aWRpb2Nf
ZW51bV9mbXRfdmlkX2NhcChzdHJ1Y3QgZmlsZSAqZmlsZSwgdm9pZCAgKnBy
aXYsDQoJCQkJc3RydWN0IHY0bDJfZm10ZGVzYyAqZm10ZGVzYykNCnsNCglz
dHJ1Y3QgZ3NwY2FfZGV2ICpnc3BjYV9kZXYgPSBwcml2Ow0KCWludCBpLCBq
LCBpbmRleDsNCglfX3UzMiBmbXRfdGJbOF07DQoNCgkvKiBnaXZlIGFuIGlu
ZGV4IHRvIGVhY2ggZm9ybWF0ICovDQoJaW5kZXggPSAwOw0KCWogPSAwOw0K
CWZvciAoaSA9IGdzcGNhX2Rldi0+Y2FtLm5tb2RlczsgLS1pID49IDA7ICkg
ew0KCQlmbXRfdGJbaW5kZXhdID0gZ3NwY2FfZGV2LT5jYW0uY2FtX21vZGVb
aV0ucGl4ZWxmb3JtYXQ7DQoJCWogPSAwOw0KCQlmb3IgKDs7KSB7DQoJCQlp
ZiAoZm10X3RiW2pdID09IGZtdF90YltpbmRleF0pDQoJCQkJYnJlYWs7DQoJ
CQlqKys7DQoJCX0NCgkJaWYgKGogPT0gaW5kZXgpIHsNCgkJCWlmIChmbXRk
ZXNjLT5pbmRleCA9PSBpbmRleCkNCgkJCQlicmVhazsJCS8qIG5ldyBmb3Jt
YXQgKi8NCgkJCWluZGV4Kys7DQoJCQlpZiAoaW5kZXggPj0gQVJSQVlfU0la
RShmbXRfdGIpKQ0KCQkJCXJldHVybiAtRUlOVkFMOw0KCQl9DQoJfQ0KCWlm
IChpIDwgMCkNCgkJcmV0dXJuIC1FSU5WQUw7CQkvKiBubyBtb3JlIGZvcm1h
dCAqLw0KDQoJZm10ZGVzYy0+cGl4ZWxmb3JtYXQgPSBmbXRfdGJbaW5kZXhd
Ow0KCWlmIChnc3BjYV9pc19jb21wcmVzc2VkKGZtdF90YltpbmRleF0pKQ0K
CQlmbXRkZXNjLT5mbGFncyA9IFY0TDJfRk1UX0ZMQUdfQ09NUFJFU1NFRDsN
CglmbXRkZXNjLT50eXBlID0gVjRMMl9CVUZfVFlQRV9WSURFT19DQVBUVVJF
Ow0KCWZtdGRlc2MtPmRlc2NyaXB0aW9uWzBdID0gZm10ZGVzYy0+cGl4ZWxm
b3JtYXQgJiAweGZmOw0KCWZtdGRlc2MtPmRlc2NyaXB0aW9uWzFdID0gKGZt
dGRlc2MtPnBpeGVsZm9ybWF0ID4+IDgpICYgMHhmZjsNCglmbXRkZXNjLT5k
ZXNjcmlwdGlvblsyXSA9IChmbXRkZXNjLT5waXhlbGZvcm1hdCA+PiAxNikg
JiAweGZmOw0KCWZtdGRlc2MtPmRlc2NyaXB0aW9uWzNdID0gZm10ZGVzYy0+
cGl4ZWxmb3JtYXQgPj4gMjQ7DQoJZm10ZGVzYy0+ZGVzY3JpcHRpb25bNF0g
PSAnXDAnOw0KCXJldHVybiAwOw0KfQ0KDQpzdGF0aWMgaW50IHZpZGlvY19n
X2ZtdF92aWRfY2FwKHN0cnVjdCBmaWxlICpmaWxlLCB2b2lkICpwcml2LA0K
CQkJICAgIHN0cnVjdCB2NGwyX2Zvcm1hdCAqZm10KQ0Kew0KCXN0cnVjdCBn
c3BjYV9kZXYgKmdzcGNhX2RldiA9IHByaXY7DQoJaW50IG1vZGU7DQoNCglt
b2RlID0gZ3NwY2FfZGV2LT5jdXJyX21vZGU7DQoJbWVtY3B5KCZmbXQtPmZt
dC5waXgsICZnc3BjYV9kZXYtPmNhbS5jYW1fbW9kZVttb2RlXSwNCgkJc2l6
ZW9mIGZtdC0+Zm10LnBpeCk7DQoJcmV0dXJuIDA7DQp9DQoNCnN0YXRpYyBp
bnQgdHJ5X2ZtdF92aWRfY2FwKHN0cnVjdCBnc3BjYV9kZXYgKmdzcGNhX2Rl
diwNCgkJCXN0cnVjdCB2NGwyX2Zvcm1hdCAqZm10KQ0Kew0KCWludCB3LCBo
LCBtb2RlLCBtb2RlMjsNCg0KCXcgPSBmbXQtPmZtdC5waXgud2lkdGg7DQoJ
aCA9IGZtdC0+Zm10LnBpeC5oZWlnaHQ7DQoNCiNpZmRlZiBHU1BDQV9ERUJV
Rw0KCWlmIChnc3BjYV9kZWJ1ZyAmIERfQ09ORikNCgkJUERFQlVHX01PREUo
InRyeSBmbXQgY2FwIiwgZm10LT5mbXQucGl4LnBpeGVsZm9ybWF0LCB3LCBo
KTsNCiNlbmRpZg0KCS8qIHNlYXJjaCB0aGUgY2xvc2VzdCBtb2RlIGZvciB3
aWR0aCBhbmQgaGVpZ2h0ICovDQoJbW9kZSA9IHd4aF90b19tb2RlKGdzcGNh
X2RldiwgdywgaCk7DQoNCgkvKiBPSyBpZiByaWdodCBwYWxldHRlICovDQoJ
aWYgKGdzcGNhX2Rldi0+Y2FtLmNhbV9tb2RlW21vZGVdLnBpeGVsZm9ybWF0
DQoJCQkJCQkhPSBmbXQtPmZtdC5waXgucGl4ZWxmb3JtYXQpIHsNCg0KCQkv
KiBlbHNlLCBzZWFyY2ggdGhlIGNsb3Nlc3QgbW9kZSB3aXRoIHRoZSBzYW1l
IHBpeGVsIGZvcm1hdCAqLw0KCQltb2RlMiA9IGdzcGNhX2dldF9tb2RlKGdz
cGNhX2RldiwgbW9kZSwNCgkJCQkJZm10LT5mbXQucGl4LnBpeGVsZm9ybWF0
KTsNCgkJaWYgKG1vZGUyID49IDApDQoJCQltb2RlID0gbW9kZTI7DQovKgkJ
ZWxzZQ0KCQkJOwkJICogbm8gY2hhbmNlLCByZXR1cm4gdGhpcyBtb2RlICov
DQoJfQ0KCW1lbWNweSgmZm10LT5mbXQucGl4LCAmZ3NwY2FfZGV2LT5jYW0u
Y2FtX21vZGVbbW9kZV0sDQoJCXNpemVvZiBmbXQtPmZtdC5waXgpOw0KCXJl
dHVybiBtb2RlOwkJCS8qIHVzZWQgd2hlbiBzX2ZtdCAqLw0KfQ0KDQpzdGF0
aWMgaW50IHZpZGlvY190cnlfZm10X3ZpZF9jYXAoc3RydWN0IGZpbGUgKmZp
bGUsDQoJCQkgICAgICB2b2lkICpwcml2LA0KCQkJICAgICAgc3RydWN0IHY0
bDJfZm9ybWF0ICpmbXQpDQp7DQoJc3RydWN0IGdzcGNhX2RldiAqZ3NwY2Ff
ZGV2ID0gcHJpdjsNCglpbnQgcmV0Ow0KDQoJcmV0ID0gdHJ5X2ZtdF92aWRf
Y2FwKGdzcGNhX2RldiwgZm10KTsNCglpZiAocmV0IDwgMCkNCgkJcmV0dXJu
IHJldDsNCglyZXR1cm4gMDsNCn0NCg0Kc3RhdGljIGludCB2aWRpb2Nfc19m
bXRfdmlkX2NhcChzdHJ1Y3QgZmlsZSAqZmlsZSwgdm9pZCAqcHJpdiwNCgkJ
CSAgICBzdHJ1Y3QgdjRsMl9mb3JtYXQgKmZtdCkNCnsNCglzdHJ1Y3QgZ3Nw
Y2FfZGV2ICpnc3BjYV9kZXYgPSBwcml2Ow0KCWludCByZXQ7DQoNCglpZiAo
bXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZnc3BjYV9kZXYtPnF1ZXVlX2xv
Y2spKQ0KCQlyZXR1cm4gLUVSRVNUQVJUU1lTOw0KDQoJcmV0ID0gdHJ5X2Zt
dF92aWRfY2FwKGdzcGNhX2RldiwgZm10KTsNCglpZiAocmV0IDwgMCkNCgkJ
Z290byBvdXQ7DQoNCglpZiAoZ3NwY2FfZGV2LT5uZnJhbWVzICE9IDANCgkg
ICAgJiYgZm10LT5mbXQucGl4LnNpemVpbWFnZSA+IGdzcGNhX2Rldi0+ZnJz
eikgew0KCQlyZXQgPSAtRUlOVkFMOw0KCQlnb3RvIG91dDsNCgl9DQoNCglp
ZiAocmV0ID09IGdzcGNhX2Rldi0+Y3Vycl9tb2RlKSB7DQoJCXJldCA9IDA7
DQoJCWdvdG8gb3V0OwkJCS8qIHNhbWUgbW9kZSAqLw0KCX0NCg0KCWlmIChn
c3BjYV9kZXYtPnN0cmVhbWluZykgew0KCQlyZXQgPSAtRUJVU1k7DQoJCWdv
dG8gb3V0Ow0KCX0NCglnc3BjYV9kZXYtPndpZHRoID0gZm10LT5mbXQucGl4
LndpZHRoOw0KCWdzcGNhX2Rldi0+aGVpZ2h0ID0gZm10LT5mbXQucGl4Lmhl
aWdodDsNCglnc3BjYV9kZXYtPnBpeGZtdCA9IGZtdC0+Zm10LnBpeC5waXhl
bGZvcm1hdDsNCglnc3BjYV9kZXYtPmN1cnJfbW9kZSA9IHJldDsNCg0KCXJl
dCA9IDA7DQpvdXQ6DQoJbXV0ZXhfdW5sb2NrKCZnc3BjYV9kZXYtPnF1ZXVl
X2xvY2spOw0KCXJldHVybiByZXQ7DQp9DQoNCnN0YXRpYyB2b2lkIGdzcGNh
X3JlbGVhc2Uoc3RydWN0IHZpZGVvX2RldmljZSAqdmZkKQ0Kew0KCXN0cnVj
dCBnc3BjYV9kZXYgKmdzcGNhX2RldiA9IGNvbnRhaW5lcl9vZih2ZmQsIHN0
cnVjdCBnc3BjYV9kZXYsIHZkZXYpOw0KDQoJUERFQlVHKERfU1RSRUFNLCAi
ZGV2aWNlIHJlbGVhc2VkIik7DQoNCglrZnJlZShnc3BjYV9kZXYtPnVzYl9i
dWYpOw0KCWtmcmVlKGdzcGNhX2Rldik7DQp9DQoNCnN0YXRpYyBpbnQgZGV2
X29wZW4oc3RydWN0IGZpbGUgKmZpbGUpDQp7DQoJc3RydWN0IGdzcGNhX2Rl
diAqZ3NwY2FfZGV2Ow0KCWludCByZXQ7DQoNCglQREVCVUcoRF9TVFJFQU0s
ICIlcyBvcGVuIiwgY3VycmVudC0+Y29tbSk7DQoJZ3NwY2FfZGV2ID0gKHN0
cnVjdCBnc3BjYV9kZXYgKikgdmlkZW9fZGV2ZGF0YShmaWxlKTsNCglpZiAo
bXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZnc3BjYV9kZXYtPnF1ZXVlX2xv
Y2spKQ0KCQlyZXR1cm4gLUVSRVNUQVJUU1lTOw0KCWlmICghZ3NwY2FfZGV2
LT5wcmVzZW50KSB7DQoJCXJldCA9IC1FTk9ERVY7DQoJCWdvdG8gb3V0Ow0K
CX0NCg0KCWlmIChnc3BjYV9kZXYtPnVzZXJzID4gNCkgewkvKiAoYXJiaXRy
YXJ5IHZhbHVlKSAqLw0KCQlyZXQgPSAtRUJVU1k7DQoJCWdvdG8gb3V0Ow0K
CX0NCg0KCS8qIHByb3RlY3QgdGhlIHN1YmRyaXZlciBhZ2FpbnN0IHJtbW9k
ICovDQoJaWYgKCF0cnlfbW9kdWxlX2dldChnc3BjYV9kZXYtPm1vZHVsZSkp
IHsNCgkJcmV0ID0gLUVOT0RFVjsNCgkJZ290byBvdXQ7DQoJfQ0KDQoJZ3Nw
Y2FfZGV2LT51c2VycysrOw0KDQoJZmlsZS0+cHJpdmF0ZV9kYXRhID0gZ3Nw
Y2FfZGV2Ow0KI2lmZGVmIEdTUENBX0RFQlVHDQoJLyogYWN0aXZhdGUgdGhl
IHY0bDIgZGVidWcgKi8NCglpZiAoZ3NwY2FfZGVidWcgJiBEX1Y0TDIpDQoJ
CWdzcGNhX2Rldi0+dmRldi5kZWJ1ZyB8PSBWNEwyX0RFQlVHX0lPQ1RMDQoJ
CQkJCXwgVjRMMl9ERUJVR19JT0NUTF9BUkc7DQoJZWxzZQ0KCQlnc3BjYV9k
ZXYtPnZkZXYuZGVidWcgJj0gfihWNEwyX0RFQlVHX0lPQ1RMDQoJCQkJCXwg
VjRMMl9ERUJVR19JT0NUTF9BUkcpOw0KI2VuZGlmDQoJcmV0ID0gMDsNCm91
dDoNCgltdXRleF91bmxvY2soJmdzcGNhX2Rldi0+cXVldWVfbG9jayk7DQoJ
aWYgKHJldCAhPSAwKQ0KCQlQREVCVUcoRF9FUlJ8RF9TVFJFQU0sICJvcGVu
IGZhaWxlZCBlcnIgJWQiLCByZXQpOw0KCWVsc2UNCgkJUERFQlVHKERfU1RS
RUFNLCAib3BlbiBkb25lIik7DQoJcmV0dXJuIHJldDsNCn0NCg0Kc3RhdGlj
IGludCBkZXZfY2xvc2Uoc3RydWN0IGZpbGUgKmZpbGUpDQp7DQoJc3RydWN0
IGdzcGNhX2RldiAqZ3NwY2FfZGV2ID0gZmlsZS0+cHJpdmF0ZV9kYXRhOw0K
DQoJUERFQlVHKERfU1RSRUFNLCAiJXMgY2xvc2UiLCBjdXJyZW50LT5jb21t
KTsNCglpZiAobXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZnc3BjYV9kZXYt
PnF1ZXVlX2xvY2spKQ0KCQlyZXR1cm4gLUVSRVNUQVJUU1lTOw0KCWdzcGNh
X2Rldi0+dXNlcnMtLTsNCg0KCS8qIGlmIHRoZSBmaWxlIGRpZCB0aGUgY2Fw
dHVyZSwgZnJlZSB0aGUgc3RyZWFtaW5nIHJlc291cmNlcyAqLw0KCWlmIChn
c3BjYV9kZXYtPmNhcHRfZmlsZSA9PSBmaWxlKSB7DQoJCWlmIChnc3BjYV9k
ZXYtPnN0cmVhbWluZykgew0KCQkJbXV0ZXhfbG9jaygmZ3NwY2FfZGV2LT51
c2JfbG9jayk7DQoJCQlnc3BjYV9zdHJlYW1fb2ZmKGdzcGNhX2Rldik7DQoJ
CQltdXRleF91bmxvY2soJmdzcGNhX2Rldi0+dXNiX2xvY2spOw0KCQl9DQoJ
CWZyYW1lX2ZyZWUoZ3NwY2FfZGV2KTsNCgkJZ3NwY2FfZGV2LT5jYXB0X2Zp
bGUgPSBOVUxMOw0KCQlnc3BjYV9kZXYtPm1lbW9yeSA9IEdTUENBX01FTU9S
WV9OTzsNCgl9DQoJZmlsZS0+cHJpdmF0ZV9kYXRhID0gTlVMTDsNCgltb2R1
bGVfcHV0KGdzcGNhX2Rldi0+bW9kdWxlKTsNCgltdXRleF91bmxvY2soJmdz
cGNhX2Rldi0+cXVldWVfbG9jayk7DQoNCglQREVCVUcoRF9TVFJFQU0sICJj
bG9zZSBkb25lIik7DQoNCglyZXR1cm4gMDsNCn0NCg0Kc3RhdGljIGludCB2
aWRpb2NfcXVlcnljYXAoc3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgICpwcml2
LA0KCQkJICAgc3RydWN0IHY0bDJfY2FwYWJpbGl0eSAqY2FwKQ0Kew0KCXN0
cnVjdCBnc3BjYV9kZXYgKmdzcGNhX2RldiA9IHByaXY7DQoNCgltZW1zZXQo
Y2FwLCAwLCBzaXplb2YgKmNhcCk7DQoJc3RybmNweShjYXAtPmRyaXZlciwg
Z3NwY2FfZGV2LT5zZF9kZXNjLT5uYW1lLCBzaXplb2YgY2FwLT5kcml2ZXIp
Ow0KCWlmIChnc3BjYV9kZXYtPmRldi0+cHJvZHVjdCAhPSBOVUxMKSB7DQoJ
CXN0cm5jcHkoY2FwLT5jYXJkLCBnc3BjYV9kZXYtPmRldi0+cHJvZHVjdCwN
CgkJCXNpemVvZiBjYXAtPmNhcmQpOw0KCX0gZWxzZSB7DQoJCXNucHJpbnRm
KGNhcC0+Y2FyZCwgc2l6ZW9mIGNhcC0+Y2FyZCwNCgkJCSJVU0IgQ2FtZXJh
ICglMDR4OiUwNHgpIiwNCgkJCWxlMTZfdG9fY3B1KGdzcGNhX2Rldi0+ZGV2
LT5kZXNjcmlwdG9yLmlkVmVuZG9yKSwNCgkJCWxlMTZfdG9fY3B1KGdzcGNh
X2Rldi0+ZGV2LT5kZXNjcmlwdG9yLmlkUHJvZHVjdCkpOw0KCX0NCgl1c2Jf
bWFrZV9wYXRoKGdzcGNhX2Rldi0+ZGV2LCBjYXAtPmJ1c19pbmZvLCBzaXpl
b2YoY2FwLT5idXNfaW5mbykpOw0KCWNhcC0+dmVyc2lvbiA9IERSSVZFUl9W
RVJTSU9OX05VTUJFUjsNCgljYXAtPmNhcGFiaWxpdGllcyA9IFY0TDJfQ0FQ
X1ZJREVPX0NBUFRVUkUNCgkJCSAgfCBWNEwyX0NBUF9TVFJFQU1JTkcNCgkJ
CSAgfCBWNEwyX0NBUF9SRUFEV1JJVEU7DQoJcmV0dXJuIDA7DQp9DQoNCnN0
YXRpYyBpbnQgdmlkaW9jX3F1ZXJ5Y3RybChzdHJ1Y3QgZmlsZSAqZmlsZSwg
dm9pZCAqcHJpdiwNCgkJCSAgIHN0cnVjdCB2NGwyX3F1ZXJ5Y3RybCAqcV9j
dHJsKQ0Kew0KCXN0cnVjdCBnc3BjYV9kZXYgKmdzcGNhX2RldiA9IHByaXY7
DQoJaW50IGksIGl4Ow0KCXUzMiBpZDsNCg0KCWl4ID0gLTE7DQoJaWQgPSBx
X2N0cmwtPmlkOw0KCWlmIChpZCAmIFY0TDJfQ1RSTF9GTEFHX05FWFRfQ1RS
TCkgew0KCQlpZCAmPSBWNEwyX0NUUkxfSURfTUFTSzsNCgkJaWQrKzsNCgkJ
Zm9yIChpID0gMDsgaSA8IGdzcGNhX2Rldi0+c2RfZGVzYy0+bmN0cmxzOyBp
KyspIHsNCgkJCWlmIChnc3BjYV9kZXYtPnNkX2Rlc2MtPmN0cmxzW2ldLnFj
dHJsLmlkIDwgaWQpDQoJCQkJY29udGludWU7DQoJCQlpZiAoaXggPCAwKSB7
DQoJCQkJaXggPSBpOw0KCQkJCWNvbnRpbnVlOw0KCQkJfQ0KCQkJaWYgKGdz
cGNhX2Rldi0+c2RfZGVzYy0+Y3RybHNbaV0ucWN0cmwuaWQNCgkJCQkgICAg
PiBnc3BjYV9kZXYtPnNkX2Rlc2MtPmN0cmxzW2l4XS5xY3RybC5pZCkNCgkJ
CQljb250aW51ZTsNCgkJCWl4ID0gaTsNCgkJfQ0KCX0NCglmb3IgKGkgPSAw
OyBpIDwgZ3NwY2FfZGV2LT5zZF9kZXNjLT5uY3RybHM7IGkrKykgew0KCQlp
ZiAoaWQgPT0gZ3NwY2FfZGV2LT5zZF9kZXNjLT5jdHJsc1tpXS5xY3RybC5p
ZCkgew0KCQkJaXggPSBpOw0KCQkJYnJlYWs7DQoJCX0NCgl9DQoJaWYgKGl4
IDwgMCkNCgkJcmV0dXJuIC1FSU5WQUw7DQoJbWVtY3B5KHFfY3RybCwgJmdz
cGNhX2Rldi0+c2RfZGVzYy0+Y3RybHNbaXhdLnFjdHJsLA0KCQlzaXplb2Yg
KnFfY3RybCk7DQoJaWYgKGdzcGNhX2Rldi0+Y3RybF9kaXMgJiAoMSA8PCBp
eCkpDQoJCXFfY3RybC0+ZmxhZ3MgfD0gVjRMMl9DVFJMX0ZMQUdfRElTQUJM
RUQ7DQoJcmV0dXJuIDA7DQp9DQoNCnN0YXRpYyBpbnQgdmlkaW9jX3NfY3Ry
bChzdHJ1Y3QgZmlsZSAqZmlsZSwgdm9pZCAqcHJpdiwNCgkJCSBzdHJ1Y3Qg
djRsMl9jb250cm9sICpjdHJsKQ0Kew0KCXN0cnVjdCBnc3BjYV9kZXYgKmdz
cGNhX2RldiA9IHByaXY7DQoJY29uc3Qgc3RydWN0IGN0cmwgKmN0cmxzOw0K
CWludCBpLCByZXQ7DQoNCglmb3IgKGkgPSAwLCBjdHJscyA9IGdzcGNhX2Rl
di0+c2RfZGVzYy0+Y3RybHM7DQoJICAgICBpIDwgZ3NwY2FfZGV2LT5zZF9k
ZXNjLT5uY3RybHM7DQoJICAgICBpKyssIGN0cmxzKyspIHsNCgkJaWYgKGN0
cmwtPmlkICE9IGN0cmxzLT5xY3RybC5pZCkNCgkJCWNvbnRpbnVlOw0KCQlp
ZiAoZ3NwY2FfZGV2LT5jdHJsX2RpcyAmICgxIDw8IGkpKQ0KCQkJcmV0dXJu
IC1FSU5WQUw7DQoJCWlmIChjdHJsLT52YWx1ZSA8IGN0cmxzLT5xY3RybC5t
aW5pbXVtDQoJCSAgICB8fCBjdHJsLT52YWx1ZSA+IGN0cmxzLT5xY3RybC5t
YXhpbXVtKQ0KCQkJcmV0dXJuIC1FUkFOR0U7DQoJCVBERUJVRyhEX0NPTkYs
ICJzZXQgY3RybCBbJTA4eF0gPSAlZCIsIGN0cmwtPmlkLCBjdHJsLT52YWx1
ZSk7DQoJCWlmIChtdXRleF9sb2NrX2ludGVycnVwdGlibGUoJmdzcGNhX2Rl
di0+dXNiX2xvY2spKQ0KCQkJcmV0dXJuIC1FUkVTVEFSVFNZUzsNCgkJcmV0
ID0gY3RybHMtPnNldChnc3BjYV9kZXYsIGN0cmwtPnZhbHVlKTsNCgkJbXV0
ZXhfdW5sb2NrKCZnc3BjYV9kZXYtPnVzYl9sb2NrKTsNCgkJcmV0dXJuIHJl
dDsNCgl9DQoJcmV0dXJuIC1FSU5WQUw7DQp9DQoNCnN0YXRpYyBpbnQgdmlk
aW9jX2dfY3RybChzdHJ1Y3QgZmlsZSAqZmlsZSwgdm9pZCAqcHJpdiwNCgkJ
CSBzdHJ1Y3QgdjRsMl9jb250cm9sICpjdHJsKQ0Kew0KCXN0cnVjdCBnc3Bj
YV9kZXYgKmdzcGNhX2RldiA9IHByaXY7DQoNCgljb25zdCBzdHJ1Y3QgY3Ry
bCAqY3RybHM7DQoJaW50IGksIHJldDsNCg0KCWZvciAoaSA9IDAsIGN0cmxz
ID0gZ3NwY2FfZGV2LT5zZF9kZXNjLT5jdHJsczsNCgkgICAgIGkgPCBnc3Bj
YV9kZXYtPnNkX2Rlc2MtPm5jdHJsczsNCgkgICAgIGkrKywgY3RybHMrKykg
ew0KCQlpZiAoY3RybC0+aWQgIT0gY3RybHMtPnFjdHJsLmlkKQ0KCQkJY29u
dGludWU7DQoJCWlmIChnc3BjYV9kZXYtPmN0cmxfZGlzICYgKDEgPDwgaSkp
DQoJCQlyZXR1cm4gLUVJTlZBTDsNCgkJaWYgKG11dGV4X2xvY2tfaW50ZXJy
dXB0aWJsZSgmZ3NwY2FfZGV2LT51c2JfbG9jaykpDQoJCQlyZXR1cm4gLUVS
RVNUQVJUU1lTOw0KCQlyZXQgPSBjdHJscy0+Z2V0KGdzcGNhX2RldiwgJmN0
cmwtPnZhbHVlKTsNCgkJbXV0ZXhfdW5sb2NrKCZnc3BjYV9kZXYtPnVzYl9s
b2NrKTsNCgkJcmV0dXJuIHJldDsNCgl9DQoJcmV0dXJuIC1FSU5WQUw7DQp9
DQoNCi8qZml4bWU6IGhhdmUgYW4gYXVkaW8gZmxhZyBpbiBnc3BjYV9kZXY/
Ki8NCnN0YXRpYyBpbnQgdmlkaW9jX3NfYXVkaW8oc3RydWN0IGZpbGUgKmZp
bGUsIHZvaWQgKnByaXYsDQoJCQkgc3RydWN0IHY0bDJfYXVkaW8gKmF1ZGlv
KQ0Kew0KCWlmIChhdWRpby0+aW5kZXggIT0gMCkNCgkJcmV0dXJuIC1FSU5W
QUw7DQoJcmV0dXJuIDA7DQp9DQoNCnN0YXRpYyBpbnQgdmlkaW9jX2dfYXVk
aW8oc3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgKnByaXYsDQoJCQkgc3RydWN0
IHY0bDJfYXVkaW8gKmF1ZGlvKQ0Kew0KCW1lbXNldChhdWRpbywgMCwgc2l6
ZW9mICphdWRpbyk7DQoJc3RyY3B5KGF1ZGlvLT5uYW1lLCAiTWljcm9waG9u
ZSIpOw0KCXJldHVybiAwOw0KfQ0KDQpzdGF0aWMgaW50IHZpZGlvY19lbnVt
YXVkaW8oc3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgKnByaXYsDQoJCQkgc3Ry
dWN0IHY0bDJfYXVkaW8gKmF1ZGlvKQ0Kew0KCWlmIChhdWRpby0+aW5kZXgg
IT0gMCkNCgkJcmV0dXJuIC1FSU5WQUw7DQoNCglzdHJjcHkoYXVkaW8tPm5h
bWUsICJNaWNyb3Bob25lIik7DQoJYXVkaW8tPmNhcGFiaWxpdHkgPSAwOw0K
CWF1ZGlvLT5tb2RlID0gMDsNCglyZXR1cm4gMDsNCn0NCg0Kc3RhdGljIGlu
dCB2aWRpb2NfcXVlcnltZW51KHN0cnVjdCBmaWxlICpmaWxlLCB2b2lkICpw
cml2LA0KCQkJICAgIHN0cnVjdCB2NGwyX3F1ZXJ5bWVudSAqcW1lbnUpDQp7
DQoJc3RydWN0IGdzcGNhX2RldiAqZ3NwY2FfZGV2ID0gcHJpdjsNCg0KCWlm
ICghZ3NwY2FfZGV2LT5zZF9kZXNjLT5xdWVyeW1lbnUpDQoJCXJldHVybiAt
RUlOVkFMOw0KCXJldHVybiBnc3BjYV9kZXYtPnNkX2Rlc2MtPnF1ZXJ5bWVu
dShnc3BjYV9kZXYsIHFtZW51KTsNCn0NCg0Kc3RhdGljIGludCB2aWRpb2Nf
ZW51bV9pbnB1dChzdHJ1Y3QgZmlsZSAqZmlsZSwgdm9pZCAqcHJpdiwNCgkJ
CQlzdHJ1Y3QgdjRsMl9pbnB1dCAqaW5wdXQpDQp7DQoJc3RydWN0IGdzcGNh
X2RldiAqZ3NwY2FfZGV2ID0gcHJpdjsNCg0KCWlmIChpbnB1dC0+aW5kZXgg
IT0gMCkNCgkJcmV0dXJuIC1FSU5WQUw7DQoJbWVtc2V0KGlucHV0LCAwLCBz
aXplb2YgKmlucHV0KTsNCglpbnB1dC0+dHlwZSA9IFY0TDJfSU5QVVRfVFlQ
RV9DQU1FUkE7DQoJc3RybmNweShpbnB1dC0+bmFtZSwgZ3NwY2FfZGV2LT5z
ZF9kZXNjLT5uYW1lLA0KCQlzaXplb2YgaW5wdXQtPm5hbWUpOw0KCXJldHVy
biAwOw0KfQ0KDQpzdGF0aWMgaW50IHZpZGlvY19nX2lucHV0KHN0cnVjdCBm
aWxlICpmaWxlLCB2b2lkICpwcml2LCB1bnNpZ25lZCBpbnQgKmkpDQp7DQoJ
KmkgPSAwOw0KCXJldHVybiAwOw0KfQ0KDQpzdGF0aWMgaW50IHZpZGlvY19z
X2lucHV0KHN0cnVjdCBmaWxlICpmaWxlLCB2b2lkICpwcml2LCB1bnNpZ25l
ZCBpbnQgaSkNCnsNCglpZiAoaSA+IDApDQoJCXJldHVybiAtRUlOVkFMOw0K
CXJldHVybiAoMCk7DQp9DQoNCnN0YXRpYyBpbnQgdmlkaW9jX3JlcWJ1ZnMo
c3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgKnByaXYsDQoJCQkgIHN0cnVjdCB2
NGwyX3JlcXVlc3RidWZmZXJzICpyYikNCnsNCglzdHJ1Y3QgZ3NwY2FfZGV2
ICpnc3BjYV9kZXYgPSBwcml2Ow0KCWludCBpLCByZXQgPSAwOw0KDQoJc3dp
dGNoIChyYi0+bWVtb3J5KSB7DQoJY2FzZSBHU1BDQV9NRU1PUllfUkVBRDoJ
CQkvKiAoaW50ZXJuYWwgY2FsbCkgKi8NCgljYXNlIFY0TDJfTUVNT1JZX01N
QVA6DQoJY2FzZSBWNEwyX01FTU9SWV9VU0VSUFRSOg0KCQlicmVhazsNCglk
ZWZhdWx0Og0KCQlyZXR1cm4gLUVJTlZBTDsNCgl9DQoJaWYgKG11dGV4X2xv
Y2tfaW50ZXJydXB0aWJsZSgmZ3NwY2FfZGV2LT5xdWV1ZV9sb2NrKSkNCgkJ
cmV0dXJuIC1FUkVTVEFSVFNZUzsNCg0KCWlmIChnc3BjYV9kZXYtPm1lbW9y
eSAhPSBHU1BDQV9NRU1PUllfTk8NCgkgICAgJiYgZ3NwY2FfZGV2LT5tZW1v
cnkgIT0gcmItPm1lbW9yeSkgew0KCQlyZXQgPSAtRUJVU1k7DQoJCWdvdG8g
b3V0Ow0KCX0NCg0KCS8qIG9ubHkgb25lIGZpbGUgbWF5IGRvIHRoZSBjYXB0
dXJlICovDQoJaWYgKGdzcGNhX2Rldi0+Y2FwdF9maWxlICE9IE5VTEwNCgkg
ICAgJiYgZ3NwY2FfZGV2LT5jYXB0X2ZpbGUgIT0gZmlsZSkgew0KCQlyZXQg
PSAtRUJVU1k7DQoJCWdvdG8gb3V0Ow0KCX0NCg0KCS8qIGlmIGFsbG9jYXRl
ZCwgdGhlIGJ1ZmZlcnMgbXVzdCBub3QgYmUgbWFwcGVkICovDQoJZm9yIChp
ID0gMDsgaSA8IGdzcGNhX2Rldi0+bmZyYW1lczsgaSsrKSB7DQoJCWlmIChn
c3BjYV9kZXYtPmZyYW1lW2ldLnZtYV91c2VfY291bnQpIHsNCgkJCXJldCA9
IC1FQlVTWTsNCgkJCWdvdG8gb3V0Ow0KCQl9DQoJfQ0KDQoJLyogc3RvcCBz
dHJlYW1pbmcgKi8NCglpZiAoZ3NwY2FfZGV2LT5zdHJlYW1pbmcpIHsNCgkJ
bXV0ZXhfbG9jaygmZ3NwY2FfZGV2LT51c2JfbG9jayk7DQoJCWdzcGNhX3N0
cmVhbV9vZmYoZ3NwY2FfZGV2KTsNCgkJbXV0ZXhfdW5sb2NrKCZnc3BjYV9k
ZXYtPnVzYl9sb2NrKTsNCgl9DQoNCgkvKiBmcmVlIHRoZSBwcmV2aW91cyBh
bGxvY2F0ZWQgYnVmZmVycywgaWYgYW55ICovDQoJaWYgKGdzcGNhX2Rldi0+
bmZyYW1lcyAhPSAwKSB7DQoJCWZyYW1lX2ZyZWUoZ3NwY2FfZGV2KTsNCgkJ
Z3NwY2FfZGV2LT5jYXB0X2ZpbGUgPSBOVUxMOw0KCX0NCglpZiAocmItPmNv
dW50ID09IDApCQkJLyogdW5yZXF1ZXN0ICovDQoJCWdvdG8gb3V0Ow0KCWdz
cGNhX2Rldi0+bWVtb3J5ID0gcmItPm1lbW9yeTsNCglyZXQgPSBmcmFtZV9h
bGxvYyhnc3BjYV9kZXYsIHJiLT5jb3VudCk7DQoJaWYgKHJldCA9PSAwKSB7
DQoJCXJiLT5jb3VudCA9IGdzcGNhX2Rldi0+bmZyYW1lczsNCgkJZ3NwY2Ff
ZGV2LT5jYXB0X2ZpbGUgPSBmaWxlOw0KCX0NCm91dDoNCgltdXRleF91bmxv
Y2soJmdzcGNhX2Rldi0+cXVldWVfbG9jayk7DQoJUERFQlVHKERfU1RSRUFN
LCAicmVxYnVmcyBzdDolZCBjOiVkIiwgcmV0LCByYi0+Y291bnQpOw0KCXJl
dHVybiByZXQ7DQp9DQoNCnN0YXRpYyBpbnQgdmlkaW9jX3F1ZXJ5YnVmKHN0
cnVjdCBmaWxlICpmaWxlLCB2b2lkICpwcml2LA0KCQkJICAgc3RydWN0IHY0
bDJfYnVmZmVyICp2NGwyX2J1ZikNCnsNCglzdHJ1Y3QgZ3NwY2FfZGV2ICpn
c3BjYV9kZXYgPSBwcml2Ow0KCXN0cnVjdCBnc3BjYV9mcmFtZSAqZnJhbWU7
DQoNCglpZiAodjRsMl9idWYtPmluZGV4IDwgMA0KCSAgICB8fCB2NGwyX2J1
Zi0+aW5kZXggPj0gZ3NwY2FfZGV2LT5uZnJhbWVzKQ0KCQlyZXR1cm4gLUVJ
TlZBTDsNCg0KCWZyYW1lID0gJmdzcGNhX2Rldi0+ZnJhbWVbdjRsMl9idWYt
PmluZGV4XTsNCgltZW1jcHkodjRsMl9idWYsICZmcmFtZS0+djRsMl9idWYs
IHNpemVvZiAqdjRsMl9idWYpOw0KCXJldHVybiAwOw0KfQ0KDQpzdGF0aWMg
aW50IHZpZGlvY19zdHJlYW1vbihzdHJ1Y3QgZmlsZSAqZmlsZSwgdm9pZCAq
cHJpdiwNCgkJCSAgIGVudW0gdjRsMl9idWZfdHlwZSBidWZfdHlwZSkNCnsN
CglzdHJ1Y3QgZ3NwY2FfZGV2ICpnc3BjYV9kZXYgPSBwcml2Ow0KCWludCBy
ZXQ7DQoNCglpZiAoYnVmX3R5cGUgIT0gVjRMMl9CVUZfVFlQRV9WSURFT19D
QVBUVVJFKQ0KCQlyZXR1cm4gLUVJTlZBTDsNCglpZiAobXV0ZXhfbG9ja19p
bnRlcnJ1cHRpYmxlKCZnc3BjYV9kZXYtPnF1ZXVlX2xvY2spKQ0KCQlyZXR1
cm4gLUVSRVNUQVJUU1lTOw0KCWlmICghZ3NwY2FfZGV2LT5wcmVzZW50KSB7
DQoJCXJldCA9IC1FTk9ERVY7DQoJCWdvdG8gb3V0Ow0KCX0NCglpZiAoZ3Nw
Y2FfZGV2LT5uZnJhbWVzID09IDANCgkgICAgfHwgIShnc3BjYV9kZXYtPmZy
YW1lWzBdLnY0bDJfYnVmLmZsYWdzICYgVjRMMl9CVUZfRkxBR19RVUVVRUQp
KSB7DQoJCXJldCA9IC1FSU5WQUw7DQoJCWdvdG8gb3V0Ow0KCX0NCglpZiAo
IWdzcGNhX2Rldi0+c3RyZWFtaW5nKSB7DQoJCXJldCA9IGdzcGNhX2luaXRf
dHJhbnNmZXIoZ3NwY2FfZGV2KTsNCgkJaWYgKHJldCA8IDApDQoJCQlnb3Rv
IG91dDsNCgl9DQojaWZkZWYgR1NQQ0FfREVCVUcNCglpZiAoZ3NwY2FfZGVi
dWcgJiBEX1NUUkVBTSkgew0KCQlQREVCVUdfTU9ERSgic3RyZWFtIG9uIE9L
IiwNCgkJCWdzcGNhX2Rldi0+cGl4Zm10LA0KCQkJZ3NwY2FfZGV2LT53aWR0
aCwNCgkJCWdzcGNhX2Rldi0+aGVpZ2h0KTsNCgl9DQojZW5kaWYNCglyZXQg
PSAwOw0Kb3V0Og0KCW11dGV4X3VubG9jaygmZ3NwY2FfZGV2LT5xdWV1ZV9s
b2NrKTsNCglyZXR1cm4gcmV0Ow0KfQ0KDQpzdGF0aWMgaW50IHZpZGlvY19z
dHJlYW1vZmYoc3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgKnByaXYsDQoJCQkJ
ZW51bSB2NGwyX2J1Zl90eXBlIGJ1Zl90eXBlKQ0Kew0KCXN0cnVjdCBnc3Bj
YV9kZXYgKmdzcGNhX2RldiA9IHByaXY7DQoJaW50IGksIHJldDsNCg0KCWlm
IChidWZfdHlwZSAhPSBWNEwyX0JVRl9UWVBFX1ZJREVPX0NBUFRVUkUpDQoJ
CXJldHVybiAtRUlOVkFMOw0KCWlmICghZ3NwY2FfZGV2LT5zdHJlYW1pbmcp
DQoJCXJldHVybiAwOw0KCWlmIChtdXRleF9sb2NrX2ludGVycnVwdGlibGUo
JmdzcGNhX2Rldi0+cXVldWVfbG9jaykpDQoJCXJldHVybiAtRVJFU1RBUlRT
WVM7DQoNCgkvKiBzdG9wIHN0cmVhbWluZyAqLw0KCWlmIChtdXRleF9sb2Nr
X2ludGVycnVwdGlibGUoJmdzcGNhX2Rldi0+dXNiX2xvY2spKSB7DQoJCXJl
dCA9IC1FUkVTVEFSVFNZUzsNCgkJZ290byBvdXQ7DQoJfQ0KCWdzcGNhX3N0
cmVhbV9vZmYoZ3NwY2FfZGV2KTsNCgltdXRleF91bmxvY2soJmdzcGNhX2Rl
di0+dXNiX2xvY2spOw0KDQoJLyogZW1wdHkgdGhlIGFwcGxpY2F0aW9uIHF1
ZXVlcyAqLw0KCWZvciAoaSA9IDA7IGkgPCBnc3BjYV9kZXYtPm5mcmFtZXM7
IGkrKykNCgkJZ3NwY2FfZGV2LT5mcmFtZVtpXS52NGwyX2J1Zi5mbGFncyAm
PSB+QlVGX0FMTF9GTEFHUzsNCglnc3BjYV9kZXYtPmZyX2kgPSBnc3BjYV9k
ZXYtPmZyX28gPSBnc3BjYV9kZXYtPmZyX3EgPSAwOw0KCWdzcGNhX2Rldi0+
bGFzdF9wYWNrZXRfdHlwZSA9IERJU0NBUkRfUEFDS0VUOw0KCWdzcGNhX2Rl
di0+c2VxdWVuY2UgPSAwOw0KCXJldCA9IDA7DQpvdXQ6DQoJbXV0ZXhfdW5s
b2NrKCZnc3BjYV9kZXYtPnF1ZXVlX2xvY2spOw0KCXJldHVybiByZXQ7DQp9
DQoNCnN0YXRpYyBpbnQgdmlkaW9jX2dfanBlZ2NvbXAoc3RydWN0IGZpbGUg
KmZpbGUsIHZvaWQgKnByaXYsDQoJCQlzdHJ1Y3QgdjRsMl9qcGVnY29tcHJl
c3Npb24gKmpwZWdjb21wKQ0Kew0KCXN0cnVjdCBnc3BjYV9kZXYgKmdzcGNh
X2RldiA9IHByaXY7DQoJaW50IHJldDsNCg0KCWlmICghZ3NwY2FfZGV2LT5z
ZF9kZXNjLT5nZXRfamNvbXApDQoJCXJldHVybiAtRUlOVkFMOw0KCWlmICht
dXRleF9sb2NrX2ludGVycnVwdGlibGUoJmdzcGNhX2Rldi0+dXNiX2xvY2sp
KQ0KCQlyZXR1cm4gLUVSRVNUQVJUU1lTOw0KCXJldCA9IGdzcGNhX2Rldi0+
c2RfZGVzYy0+Z2V0X2pjb21wKGdzcGNhX2RldiwganBlZ2NvbXApOw0KCW11
dGV4X3VubG9jaygmZ3NwY2FfZGV2LT51c2JfbG9jayk7DQoJcmV0dXJuIHJl
dDsNCn0NCg0Kc3RhdGljIGludCB2aWRpb2Nfc19qcGVnY29tcChzdHJ1Y3Qg
ZmlsZSAqZmlsZSwgdm9pZCAqcHJpdiwNCgkJCXN0cnVjdCB2NGwyX2pwZWdj
b21wcmVzc2lvbiAqanBlZ2NvbXApDQp7DQoJc3RydWN0IGdzcGNhX2RldiAq
Z3NwY2FfZGV2ID0gcHJpdjsNCglpbnQgcmV0Ow0KDQoJaWYgKCFnc3BjYV9k
ZXYtPnNkX2Rlc2MtPnNldF9qY29tcCkNCgkJcmV0dXJuIC1FSU5WQUw7DQoJ
aWYgKG11dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgmZ3NwY2FfZGV2LT51c2Jf
bG9jaykpDQoJCXJldHVybiAtRVJFU1RBUlRTWVM7DQoJcmV0ID0gZ3NwY2Ff
ZGV2LT5zZF9kZXNjLT5zZXRfamNvbXAoZ3NwY2FfZGV2LCBqcGVnY29tcCk7
DQoJbXV0ZXhfdW5sb2NrKCZnc3BjYV9kZXYtPnVzYl9sb2NrKTsNCglyZXR1
cm4gcmV0Ow0KfQ0KDQpzdGF0aWMgaW50IHZpZGlvY19nX3Bhcm0oc3RydWN0
IGZpbGUgKmZpbHAsIHZvaWQgKnByaXYsDQoJCQlzdHJ1Y3QgdjRsMl9zdHJl
YW1wYXJtICpwYXJtKQ0Kew0KCXN0cnVjdCBnc3BjYV9kZXYgKmdzcGNhX2Rl
diA9IHByaXY7DQoNCgltZW1zZXQocGFybSwgMCwgc2l6ZW9mICpwYXJtKTsN
CglwYXJtLT50eXBlID0gVjRMMl9CVUZfVFlQRV9WSURFT19DQVBUVVJFOw0K
CXBhcm0tPnBhcm0uY2FwdHVyZS5yZWFkYnVmZmVycyA9IGdzcGNhX2Rldi0+
bmJ1ZnJlYWQ7DQoNCglpZiAoZ3NwY2FfZGV2LT5zZF9kZXNjLT5nZXRfc3Ry
ZWFtcGFybSkgew0KCQlpbnQgcmV0Ow0KDQoJCWlmIChtdXRleF9sb2NrX2lu
dGVycnVwdGlibGUoJmdzcGNhX2Rldi0+dXNiX2xvY2spKQ0KCQkJcmV0dXJu
IC1FUkVTVEFSVFNZUzsNCgkJcmV0ID0gZ3NwY2FfZGV2LT5zZF9kZXNjLT5n
ZXRfc3RyZWFtcGFybShnc3BjYV9kZXYsIHBhcm0pOw0KCQltdXRleF91bmxv
Y2soJmdzcGNhX2Rldi0+dXNiX2xvY2spOw0KCQlyZXR1cm4gcmV0Ow0KCX0N
Cg0KCXJldHVybiAwOw0KfQ0KDQpzdGF0aWMgaW50IHZpZGlvY19zX3Bhcm0o
c3RydWN0IGZpbGUgKmZpbHAsIHZvaWQgKnByaXYsDQoJCQlzdHJ1Y3QgdjRs
Ml9zdHJlYW1wYXJtICpwYXJtKQ0Kew0KCXN0cnVjdCBnc3BjYV9kZXYgKmdz
cGNhX2RldiA9IHByaXY7DQoJaW50IG47DQoNCgluID0gcGFybS0+cGFybS5j
YXB0dXJlLnJlYWRidWZmZXJzOw0KCWlmIChuID09IDAgfHwgbiA+IEdTUENB
X01BWF9GUkFNRVMpDQoJCXBhcm0tPnBhcm0uY2FwdHVyZS5yZWFkYnVmZmVy
cyA9IGdzcGNhX2Rldi0+bmJ1ZnJlYWQ7DQoJZWxzZQ0KCQlnc3BjYV9kZXYt
Pm5idWZyZWFkID0gbjsNCg0KCWlmIChnc3BjYV9kZXYtPnNkX2Rlc2MtPnNl
dF9zdHJlYW1wYXJtKSB7DQoJCWludCByZXQ7DQoNCgkJaWYgKG11dGV4X2xv
Y2tfaW50ZXJydXB0aWJsZSgmZ3NwY2FfZGV2LT51c2JfbG9jaykpDQoJCQly
ZXR1cm4gLUVSRVNUQVJUU1lTOw0KCQlyZXQgPSBnc3BjYV9kZXYtPnNkX2Rl
c2MtPnNldF9zdHJlYW1wYXJtKGdzcGNhX2RldiwgcGFybSk7DQoJCW11dGV4
X3VubG9jaygmZ3NwY2FfZGV2LT51c2JfbG9jayk7DQoJCXJldHVybiByZXQ7
DQoJfQ0KDQoJcmV0dXJuIDA7DQp9DQoNCnN0YXRpYyBpbnQgdmlkaW9jX3Nf
c3RkKHN0cnVjdCBmaWxlICpmaWxwLCB2b2lkICpwcml2LA0KCQkJdjRsMl9z
dGRfaWQgKnBhcm0pDQp7DQoJcmV0dXJuIDA7DQp9DQoNCiNpZmRlZiBDT05G
SUdfVklERU9fVjRMMV9DT01QQVQNCnN0YXRpYyBpbnQgdmlkaW9jZ21idWYo
c3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgKnByaXYsDQoJCQlzdHJ1Y3Qgdmlk
ZW9fbWJ1ZiAqbWJ1ZikNCnsNCglzdHJ1Y3QgZ3NwY2FfZGV2ICpnc3BjYV9k
ZXYgPSBmaWxlLT5wcml2YXRlX2RhdGE7DQoJaW50IGk7DQoNCglQREVCVUco
RF9TVFJFQU0sICJjZ21idWYiKTsNCglpZiAoZ3NwY2FfZGV2LT5uZnJhbWVz
ID09IDApIHsNCgkJaW50IHJldDsNCg0KCQl7DQoJCQlzdHJ1Y3QgdjRsMl9m
b3JtYXQgZm10Ow0KDQoJCQltZW1zZXQoJmZtdCwgMCwgc2l6ZW9mIGZtdCk7
DQoJCQlmbXQudHlwZSA9IFY0TDJfQlVGX1RZUEVfVklERU9fQ0FQVFVSRTsN
CgkJCWkgPSBnc3BjYV9kZXYtPmNhbS5ubW9kZXMgLSAxOwkvKiBoaWdoZXN0
IG1vZGUgKi8NCgkJCWZtdC5mbXQucGl4LndpZHRoID0gZ3NwY2FfZGV2LT5j
YW0uY2FtX21vZGVbaV0ud2lkdGg7DQoJCQlmbXQuZm10LnBpeC5oZWlnaHQg
PSBnc3BjYV9kZXYtPmNhbS5jYW1fbW9kZVtpXS5oZWlnaHQ7DQoJCQlmbXQu
Zm10LnBpeC5waXhlbGZvcm1hdCA9IFY0TDJfUElYX0ZNVF9CR1IyNDsNCgkJ
CXJldCA9IHZpZGlvY19zX2ZtdF92aWRfY2FwKGZpbGUsIHByaXYsICZmbXQp
Ow0KCQkJaWYgKHJldCAhPSAwKQ0KCQkJCXJldHVybiByZXQ7DQoJCX0NCgkJ
ew0KCQkJc3RydWN0IHY0bDJfcmVxdWVzdGJ1ZmZlcnMgcmI7DQoNCgkJCW1l
bXNldCgmcmIsIDAsIHNpemVvZiByYik7DQoJCQlyYi5jb3VudCA9IDQ7DQoJ
CQlyYi50eXBlID0gVjRMMl9CVUZfVFlQRV9WSURFT19DQVBUVVJFOw0KCQkJ
cmIubWVtb3J5ID0gVjRMMl9NRU1PUllfTU1BUDsNCgkJCXJldCA9IHZpZGlv
Y19yZXFidWZzKGZpbGUsIHByaXYsICZyYik7DQoJCQlpZiAocmV0ICE9IDAp
DQoJCQkJcmV0dXJuIHJldDsNCgkJfQ0KCX0NCgltYnVmLT5mcmFtZXMgPSBn
c3BjYV9kZXYtPm5mcmFtZXM7DQoJbWJ1Zi0+c2l6ZSA9IGdzcGNhX2Rldi0+
ZnJzeiAqIGdzcGNhX2Rldi0+bmZyYW1lczsNCglmb3IgKGkgPSAwOyBpIDwg
bWJ1Zi0+ZnJhbWVzOyBpKyspDQoJCW1idWYtPm9mZnNldHNbaV0gPSBnc3Bj
YV9kZXYtPmZyYW1lW2ldLnY0bDJfYnVmLm0ub2Zmc2V0Ow0KCXJldHVybiAw
Ow0KfQ0KI2VuZGlmDQoNCnN0YXRpYyBpbnQgZGV2X21tYXAoc3RydWN0IGZp
bGUgKmZpbGUsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKQ0Kew0KCXN0
cnVjdCBnc3BjYV9kZXYgKmdzcGNhX2RldiA9IGZpbGUtPnByaXZhdGVfZGF0
YTsNCglzdHJ1Y3QgZ3NwY2FfZnJhbWUgKmZyYW1lOw0KCXN0cnVjdCBwYWdl
ICpwYWdlOw0KCXVuc2lnbmVkIGxvbmcgYWRkciwgc3RhcnQsIHNpemU7DQoJ
aW50IGksIHJldDsNCg0KCXN0YXJ0ID0gdm1hLT52bV9zdGFydDsNCglzaXpl
ID0gdm1hLT52bV9lbmQgLSB2bWEtPnZtX3N0YXJ0Ow0KCVBERUJVRyhEX1NU
UkVBTSwgIm1tYXAgc3RhcnQ6JTA4eCBzaXplOiVkIiwgKGludCkgc3RhcnQs
IChpbnQpIHNpemUpOw0KDQoJaWYgKG11dGV4X2xvY2tfaW50ZXJydXB0aWJs
ZSgmZ3NwY2FfZGV2LT5xdWV1ZV9sb2NrKSkNCgkJcmV0dXJuIC1FUkVTVEFS
VFNZUzsNCglpZiAoIWdzcGNhX2Rldi0+cHJlc2VudCkgew0KCQlyZXQgPSAt
RU5PREVWOw0KCQlnb3RvIG91dDsNCgl9DQoJaWYgKGdzcGNhX2Rldi0+Y2Fw
dF9maWxlICE9IGZpbGUpIHsNCgkJcmV0ID0gLUVJTlZBTDsNCgkJZ290byBv
dXQ7DQoJfQ0KDQoJZnJhbWUgPSBOVUxMOw0KCWZvciAoaSA9IDA7IGkgPCBn
c3BjYV9kZXYtPm5mcmFtZXM7ICsraSkgew0KCQlpZiAoZ3NwY2FfZGV2LT5m
cmFtZVtpXS52NGwyX2J1Zi5tZW1vcnkgIT0gVjRMMl9NRU1PUllfTU1BUCkg
ew0KCQkJUERFQlVHKERfU1RSRUFNLCAibW1hcCBiYWQgbWVtb3J5IHR5cGUi
KTsNCgkJCWJyZWFrOw0KCQl9DQoJCWlmICgoZ3NwY2FfZGV2LT5mcmFtZVtp
XS52NGwyX2J1Zi5tLm9mZnNldCA+PiBQQUdFX1NISUZUKQ0KCQkJCQkJPT0g
dm1hLT52bV9wZ29mZikgew0KCQkJZnJhbWUgPSAmZ3NwY2FfZGV2LT5mcmFt
ZVtpXTsNCgkJCWJyZWFrOw0KCQl9DQoJfQ0KCWlmIChmcmFtZSA9PSBOVUxM
KSB7DQoJCVBERUJVRyhEX1NUUkVBTSwgIm1tYXAgbm8gZnJhbWUgYnVmZmVy
IGZvdW5kIik7DQoJCXJldCA9IC1FSU5WQUw7DQoJCWdvdG8gb3V0Ow0KCX0N
CiNpZmRlZiBDT05GSUdfVklERU9fVjRMMV9DT01QQVQNCgkvKiB2NGwxIG1h
cHMgYWxsIHRoZSBidWZmZXJzICovDQoJaWYgKGkgIT0gMA0KCSAgICB8fCBz
aXplICE9IGZyYW1lLT52NGwyX2J1Zi5sZW5ndGggKiBnc3BjYV9kZXYtPm5m
cmFtZXMpDQojZW5kaWYNCgkgICAgaWYgKHNpemUgIT0gZnJhbWUtPnY0bDJf
YnVmLmxlbmd0aCkgew0KCQlQREVCVUcoRF9TVFJFQU0sICJtbWFwIGJhZCBz
aXplIik7DQoJCXJldCA9IC1FSU5WQUw7DQoJCWdvdG8gb3V0Ow0KCX0NCg0K
CS8qDQoJICogLSBWTV9JTyBtYXJrcyB0aGUgYXJlYSBhcyBiZWluZyBhIG1t
YXBlZCByZWdpb24gZm9yIEkvTyB0byBhDQoJICogICBkZXZpY2UuIEl0IGFs
c28gcHJldmVudHMgdGhlIHJlZ2lvbiBmcm9tIGJlaW5nIGNvcmUgZHVtcGVk
Lg0KCSAqLw0KCXZtYS0+dm1fZmxhZ3MgfD0gVk1fSU87DQoNCglhZGRyID0g
KHVuc2lnbmVkIGxvbmcpIGZyYW1lLT5kYXRhOw0KCXdoaWxlIChzaXplID4g
MCkgew0KCQlwYWdlID0gdm1hbGxvY190b19wYWdlKCh2b2lkICopIGFkZHIp
Ow0KCQlyZXQgPSB2bV9pbnNlcnRfcGFnZSh2bWEsIHN0YXJ0LCBwYWdlKTsN
CgkJaWYgKHJldCA8IDApDQoJCQlnb3RvIG91dDsNCgkJc3RhcnQgKz0gUEFH
RV9TSVpFOw0KCQlhZGRyICs9IFBBR0VfU0laRTsNCgkJc2l6ZSAtPSBQQUdF
X1NJWkU7DQoJfQ0KDQoJdm1hLT52bV9vcHMgPSAmZ3NwY2Ffdm1fb3BzOw0K
CXZtYS0+dm1fcHJpdmF0ZV9kYXRhID0gZnJhbWU7DQoJZ3NwY2Ffdm1fb3Bl
bih2bWEpOw0KCXJldCA9IDA7DQpvdXQ6DQoJbXV0ZXhfdW5sb2NrKCZnc3Bj
YV9kZXYtPnF1ZXVlX2xvY2spOw0KCXJldHVybiByZXQ7DQp9DQoNCi8qDQog
KiB3YWl0IGZvciBhIHZpZGVvIGZyYW1lDQogKg0KICogSWYgYSBmcmFtZSBp
cyByZWFkeSwgaXRzIGluZGV4IGlzIHJldHVybmVkLg0KICovDQpzdGF0aWMg
aW50IGZyYW1lX3dhaXQoc3RydWN0IGdzcGNhX2RldiAqZ3NwY2FfZGV2LA0K
CQkJaW50IG5vbmJsb2NrX2luZykNCnsNCglzdHJ1Y3QgZ3NwY2FfZnJhbWUg
KmZyYW1lOw0KCWludCBpLCBqLCByZXQ7DQoNCgkvKiBjaGVjayBpZiBhIGZy
YW1lIGlzIHJlYWR5ICovDQoJaSA9IGdzcGNhX2Rldi0+ZnJfbzsNCglqID0g
Z3NwY2FfZGV2LT5mcl9xdWV1ZVtpXTsNCglmcmFtZSA9ICZnc3BjYV9kZXYt
PmZyYW1lW2pdOw0KDQoJaWYgKCEoZnJhbWUtPnY0bDJfYnVmLmZsYWdzICYg
VjRMMl9CVUZfRkxBR19ET05FKSkgew0KCQlpZiAobm9uYmxvY2tfaW5nKQ0K
CQkJcmV0dXJuIC1FQUdBSU47DQoNCgkJLyogd2FpdCB0aWxsIGEgZnJhbWUg
aXMgcmVhZHkgKi8NCgkJcmV0ID0gd2FpdF9ldmVudF9pbnRlcnJ1cHRpYmxl
X3RpbWVvdXQoZ3NwY2FfZGV2LT53cSwNCgkJCShmcmFtZS0+djRsMl9idWYu
ZmxhZ3MgJiBWNEwyX0JVRl9GTEFHX0RPTkUpIHx8DQoJCQkhZ3NwY2FfZGV2
LT5zdHJlYW1pbmcgfHwgIWdzcGNhX2Rldi0+cHJlc2VudCwNCgkJCW1zZWNz
X3RvX2ppZmZpZXMoMzAwMCkpOw0KCQlpZiAocmV0IDwgMCkNCgkJCXJldHVy
biByZXQ7DQoJCWlmIChyZXQgPT0gMCB8fCAhZ3NwY2FfZGV2LT5zdHJlYW1p
bmcgfHwgIWdzcGNhX2Rldi0+cHJlc2VudCkNCgkJCXJldHVybiAtRUlPOw0K
CX0NCg0KCWdzcGNhX2Rldi0+ZnJfbyA9IChpICsgMSkgJSBnc3BjYV9kZXYt
Pm5mcmFtZXM7DQoJUERFQlVHKERfRlJBTSwgImZyYW1lIHdhaXQgcTolZCBp
OiVkIG86JWQiLA0KCQlnc3BjYV9kZXYtPmZyX3EsDQoJCWdzcGNhX2Rldi0+
ZnJfaSwNCgkJZ3NwY2FfZGV2LT5mcl9vKTsNCg0KCWlmIChnc3BjYV9kZXYt
PnNkX2Rlc2MtPmRxX2NhbGxiYWNrKSB7DQoJCW11dGV4X2xvY2soJmdzcGNh
X2Rldi0+dXNiX2xvY2spOw0KCQlnc3BjYV9kZXYtPnNkX2Rlc2MtPmRxX2Nh
bGxiYWNrKGdzcGNhX2Rldik7DQoJCW11dGV4X3VubG9jaygmZ3NwY2FfZGV2
LT51c2JfbG9jayk7DQoJfQ0KCXJldHVybiBqOw0KfQ0KDQovKg0KICogZGVx
dWV1ZSBhIHZpZGVvIGJ1ZmZlcg0KICoNCiAqIElmIG5vbmJsb2NrX2luZyBp
cyBmYWxzZSwgYmxvY2sgdW50aWwgYSBidWZmZXIgaXMgYXZhaWxhYmxlLg0K
ICovDQpzdGF0aWMgaW50IHZpZGlvY19kcWJ1ZihzdHJ1Y3QgZmlsZSAqZmls
ZSwgdm9pZCAqcHJpdiwNCgkJCXN0cnVjdCB2NGwyX2J1ZmZlciAqdjRsMl9i
dWYpDQp7DQoJc3RydWN0IGdzcGNhX2RldiAqZ3NwY2FfZGV2ID0gcHJpdjsN
CglzdHJ1Y3QgZ3NwY2FfZnJhbWUgKmZyYW1lOw0KCWludCBpLCByZXQ7DQoN
CglQREVCVUcoRF9GUkFNLCAiZHFidWYiKTsNCglpZiAodjRsMl9idWYtPm1l
bW9yeSAhPSBnc3BjYV9kZXYtPm1lbW9yeSkNCgkJcmV0dXJuIC1FSU5WQUw7
DQoNCgkvKiBpZiBub3Qgc3RyZWFtaW5nLCBiZSBzdXJlIHRoZSBhcHBsaWNh
dGlvbiB3aWxsIG5vdCBsb29wIGZvcmV2ZXIgKi8NCglpZiAoIShmaWxlLT5m
X2ZsYWdzICYgT19OT05CTE9DSykNCgkgICAgJiYgIWdzcGNhX2Rldi0+c3Ry
ZWFtaW5nICYmIGdzcGNhX2Rldi0+dXNlcnMgPT0gMSkNCgkJcmV0dXJuIC1F
SU5WQUw7DQoNCgkvKiBvbmx5IHRoZSBjYXB0dXJpbmcgZmlsZSBtYXkgZGVx
dWV1ZSAqLw0KCWlmIChnc3BjYV9kZXYtPmNhcHRfZmlsZSAhPSBmaWxlKQ0K
CQlyZXR1cm4gLUVJTlZBTDsNCg0KCS8qIG9ubHkgb25lIGRlcXVldWUgLyBy
ZWFkIGF0IGEgdGltZSAqLw0KCWlmIChtdXRleF9sb2NrX2ludGVycnVwdGli
bGUoJmdzcGNhX2Rldi0+cmVhZF9sb2NrKSkNCgkJcmV0dXJuIC1FUkVTVEFS
VFNZUzsNCg0KCXJldCA9IGZyYW1lX3dhaXQoZ3NwY2FfZGV2LCBmaWxlLT5m
X2ZsYWdzICYgT19OT05CTE9DSyk7DQoJaWYgKHJldCA8IDApDQoJCWdvdG8g
b3V0Ow0KCWkgPSByZXQ7CQkJCS8qIGZyYW1lIGluZGV4ICovDQoJZnJhbWUg
PSAmZ3NwY2FfZGV2LT5mcmFtZVtpXTsNCglpZiAoZ3NwY2FfZGV2LT5tZW1v
cnkgPT0gVjRMMl9NRU1PUllfVVNFUlBUUikgew0KCQlpZiAoY29weV90b191
c2VyKChfX3U4IF9fdXNlciAqKSBmcmFtZS0+djRsMl9idWYubS51c2VycHRy
LA0KCQkJCSBmcmFtZS0+ZGF0YSwNCgkJCQkgZnJhbWUtPnY0bDJfYnVmLmJ5
dGVzdXNlZCkpIHsNCgkJCVBERUJVRyhEX0VSUnxEX1NUUkVBTSwNCgkJCQki
ZHFidWYgY3AgdG8gdXNlciBmYWlsZWQiKTsNCgkJCXJldCA9IC1FRkFVTFQ7
DQoJCQlnb3RvIG91dDsNCgkJfQ0KCX0NCglmcmFtZS0+djRsMl9idWYuZmxh
Z3MgJj0gflY0TDJfQlVGX0ZMQUdfRE9ORTsNCgltZW1jcHkodjRsMl9idWYs
ICZmcmFtZS0+djRsMl9idWYsIHNpemVvZiAqdjRsMl9idWYpOw0KCVBERUJV
RyhEX0ZSQU0sICJkcWJ1ZiAlZCIsIGkpOw0KCXJldCA9IDA7DQpvdXQ6DQoJ
bXV0ZXhfdW5sb2NrKCZnc3BjYV9kZXYtPnJlYWRfbG9jayk7DQoJcmV0dXJu
IHJldDsNCn0NCg0KLyoNCiAqIHF1ZXVlIGEgdmlkZW8gYnVmZmVyDQogKg0K
ICogQXR0ZW1wdGluZyB0byBxdWV1ZSBhIGJ1ZmZlciB0aGF0IGhhcyBhbHJl
YWR5IGJlZW4NCiAqIHF1ZXVlZCB3aWxsIHJldHVybiAtRUlOVkFMLg0KICov
DQpzdGF0aWMgaW50IHZpZGlvY19xYnVmKHN0cnVjdCBmaWxlICpmaWxlLCB2
b2lkICpwcml2LA0KCQkJc3RydWN0IHY0bDJfYnVmZmVyICp2NGwyX2J1ZikN
CnsNCglzdHJ1Y3QgZ3NwY2FfZGV2ICpnc3BjYV9kZXYgPSBwcml2Ow0KCXN0
cnVjdCBnc3BjYV9mcmFtZSAqZnJhbWU7DQoJaW50IGksIGluZGV4LCByZXQ7
DQoNCglQREVCVUcoRF9GUkFNLCAicWJ1ZiAlZCIsIHY0bDJfYnVmLT5pbmRl
eCk7DQoNCglpZiAobXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZnc3BjYV9k
ZXYtPnF1ZXVlX2xvY2spKQ0KCQlyZXR1cm4gLUVSRVNUQVJUU1lTOw0KDQoJ
aW5kZXggPSB2NGwyX2J1Zi0+aW5kZXg7DQoJaWYgKCh1bnNpZ25lZCkgaW5k
ZXggPj0gZ3NwY2FfZGV2LT5uZnJhbWVzKSB7DQoJCVBERUJVRyhEX0ZSQU0s
DQoJCQkicWJ1ZiBpZHggJWQgPj0gJWQiLCBpbmRleCwgZ3NwY2FfZGV2LT5u
ZnJhbWVzKTsNCgkJcmV0ID0gLUVJTlZBTDsNCgkJZ290byBvdXQ7DQoJfQ0K
CWlmICh2NGwyX2J1Zi0+bWVtb3J5ICE9IGdzcGNhX2Rldi0+bWVtb3J5KSB7
DQoJCVBERUJVRyhEX0ZSQU0sICJxYnVmIGJhZCBtZW1vcnkgdHlwZSIpOw0K
CQlyZXQgPSAtRUlOVkFMOw0KCQlnb3RvIG91dDsNCgl9DQoNCglmcmFtZSA9
ICZnc3BjYV9kZXYtPmZyYW1lW2luZGV4XTsNCglpZiAoZnJhbWUtPnY0bDJf
YnVmLmZsYWdzICYgQlVGX0FMTF9GTEFHUykgew0KCQlQREVCVUcoRF9GUkFN
LCAicWJ1ZiBiYWQgc3RhdGUiKTsNCgkJcmV0ID0gLUVJTlZBTDsNCgkJZ290
byBvdXQ7DQoJfQ0KDQoJZnJhbWUtPnY0bDJfYnVmLmZsYWdzIHw9IFY0TDJf
QlVGX0ZMQUdfUVVFVUVEOw0KDQoJaWYgKGZyYW1lLT52NGwyX2J1Zi5tZW1v
cnkgPT0gVjRMMl9NRU1PUllfVVNFUlBUUikgew0KCQlmcmFtZS0+djRsMl9i
dWYubS51c2VycHRyID0gdjRsMl9idWYtPm0udXNlcnB0cjsNCgkJZnJhbWUt
PnY0bDJfYnVmLmxlbmd0aCA9IHY0bDJfYnVmLT5sZW5ndGg7DQoJfQ0KDQoJ
LyogcHV0IHRoZSBidWZmZXIgaW4gdGhlICdxdWV1ZWQnIHF1ZXVlICovDQoJ
aSA9IGdzcGNhX2Rldi0+ZnJfcTsNCglnc3BjYV9kZXYtPmZyX3F1ZXVlW2ld
ID0gaW5kZXg7DQoJZ3NwY2FfZGV2LT5mcl9xID0gKGkgKyAxKSAlIGdzcGNh
X2Rldi0+bmZyYW1lczsNCglQREVCVUcoRF9GUkFNLCAicWJ1ZiBxOiVkIGk6
JWQgbzolZCIsDQoJCWdzcGNhX2Rldi0+ZnJfcSwNCgkJZ3NwY2FfZGV2LT5m
cl9pLA0KCQlnc3BjYV9kZXYtPmZyX28pOw0KDQoJdjRsMl9idWYtPmZsYWdz
IHw9IFY0TDJfQlVGX0ZMQUdfUVVFVUVEOw0KCXY0bDJfYnVmLT5mbGFncyAm
PSB+VjRMMl9CVUZfRkxBR19ET05FOw0KCXJldCA9IDA7DQpvdXQ6DQoJbXV0
ZXhfdW5sb2NrKCZnc3BjYV9kZXYtPnF1ZXVlX2xvY2spOw0KCXJldHVybiBy
ZXQ7DQp9DQoNCi8qDQogKiBhbGxvY2F0ZSB0aGUgcmVzb3VyY2VzIGZvciBy
ZWFkKCkNCiAqLw0Kc3RhdGljIGludCByZWFkX2FsbG9jKHN0cnVjdCBnc3Bj
YV9kZXYgKmdzcGNhX2RldiwNCgkJCXN0cnVjdCBmaWxlICpmaWxlKQ0Kew0K
CXN0cnVjdCB2NGwyX2J1ZmZlciB2NGwyX2J1ZjsNCglpbnQgaSwgcmV0Ow0K
DQoJUERFQlVHKERfU1RSRUFNLCAicmVhZCBhbGxvYyIpOw0KCWlmIChnc3Bj
YV9kZXYtPm5mcmFtZXMgPT0gMCkgew0KCQlzdHJ1Y3QgdjRsMl9yZXF1ZXN0
YnVmZmVycyByYjsNCg0KCQltZW1zZXQoJnJiLCAwLCBzaXplb2YgcmIpOw0K
CQlyYi5jb3VudCA9IGdzcGNhX2Rldi0+bmJ1ZnJlYWQ7DQoJCXJiLnR5cGUg
PSBWNEwyX0JVRl9UWVBFX1ZJREVPX0NBUFRVUkU7DQoJCXJiLm1lbW9yeSA9
IEdTUENBX01FTU9SWV9SRUFEOw0KCQlyZXQgPSB2aWRpb2NfcmVxYnVmcyhm
aWxlLCBnc3BjYV9kZXYsICZyYik7DQoJCWlmIChyZXQgIT0gMCkgew0KCQkJ
UERFQlVHKERfU1RSRUFNLCAicmVhZCByZXFidWYgZXJyICVkIiwgcmV0KTsN
CgkJCXJldHVybiByZXQ7DQoJCX0NCgkJbWVtc2V0KCZ2NGwyX2J1ZiwgMCwg
c2l6ZW9mIHY0bDJfYnVmKTsNCgkJdjRsMl9idWYudHlwZSA9IFY0TDJfQlVG
X1RZUEVfVklERU9fQ0FQVFVSRTsNCgkJdjRsMl9idWYubWVtb3J5ID0gR1NQ
Q0FfTUVNT1JZX1JFQUQ7DQoJCWZvciAoaSA9IDA7IGkgPCBnc3BjYV9kZXYt
Pm5idWZyZWFkOyBpKyspIHsNCgkJCXY0bDJfYnVmLmluZGV4ID0gaTsNCgkJ
CXJldCA9IHZpZGlvY19xYnVmKGZpbGUsIGdzcGNhX2RldiwgJnY0bDJfYnVm
KTsNCgkJCWlmIChyZXQgIT0gMCkgew0KCQkJCVBERUJVRyhEX1NUUkVBTSwg
InJlYWQgcWJ1ZiBlcnI6ICVkIiwgcmV0KTsNCgkJCQlyZXR1cm4gcmV0Ow0K
CQkJfQ0KCQl9DQoJCWdzcGNhX2Rldi0+bWVtb3J5ID0gR1NQQ0FfTUVNT1JZ
X1JFQUQ7DQoJfQ0KDQoJLyogc3RhcnQgc3RyZWFtaW5nICovDQoJcmV0ID0g
dmlkaW9jX3N0cmVhbW9uKGZpbGUsIGdzcGNhX2RldiwgVjRMMl9CVUZfVFlQ
RV9WSURFT19DQVBUVVJFKTsNCglpZiAocmV0ICE9IDApDQoJCVBERUJVRyhE
X1NUUkVBTSwgInJlYWQgc3RyZWFtb24gZXJyICVkIiwgcmV0KTsNCglyZXR1
cm4gcmV0Ow0KfQ0KDQpzdGF0aWMgdW5zaWduZWQgaW50IGRldl9wb2xsKHN0
cnVjdCBmaWxlICpmaWxlLCBwb2xsX3RhYmxlICp3YWl0KQ0Kew0KCXN0cnVj
dCBnc3BjYV9kZXYgKmdzcGNhX2RldiA9IGZpbGUtPnByaXZhdGVfZGF0YTsN
CglpbnQgaSwgcmV0Ow0KDQoJUERFQlVHKERfRlJBTSwgInBvbGwiKTsNCg0K
CXBvbGxfd2FpdChmaWxlLCAmZ3NwY2FfZGV2LT53cSwgd2FpdCk7DQoJaWYg
KCFnc3BjYV9kZXYtPnByZXNlbnQpDQoJCXJldHVybiBQT0xMRVJSOw0KDQoJ
LyogaWYgcmVxYnVmcyBpcyBub3QgZG9uZSwgdGhlIHVzZXIgd291bGQgdXNl
IHJlYWQoKSAqLw0KCWlmIChnc3BjYV9kZXYtPm5mcmFtZXMgPT0gMCkgew0K
CQlpZiAoZ3NwY2FfZGV2LT5tZW1vcnkgIT0gR1NQQ0FfTUVNT1JZX05PKQ0K
CQkJcmV0dXJuIFBPTExFUlI7CQkvKiBub3QgdGhlIDFzdCB0aW1lICovDQoJ
CXJldCA9IHJlYWRfYWxsb2MoZ3NwY2FfZGV2LCBmaWxlKTsNCgkJaWYgKHJl
dCAhPSAwKQ0KCQkJcmV0dXJuIFBPTExFUlI7DQoJfQ0KDQoJaWYgKG11dGV4
X2xvY2tfaW50ZXJydXB0aWJsZSgmZ3NwY2FfZGV2LT5xdWV1ZV9sb2NrKSAh
PSAwKQ0KCQlyZXR1cm4gUE9MTEVSUjsNCglpZiAoIWdzcGNhX2Rldi0+cHJl
c2VudCkgew0KCQlyZXQgPSBQT0xMRVJSOw0KCQlnb3RvIG91dDsNCgl9DQoN
CgkvKiBjaGVjayB0aGUgbmV4dCBpbmNvbWluZyBidWZmZXIgKi8NCglpID0g
Z3NwY2FfZGV2LT5mcl9vOw0KCWkgPSBnc3BjYV9kZXYtPmZyX3F1ZXVlW2ld
Ow0KCWlmIChnc3BjYV9kZXYtPmZyYW1lW2ldLnY0bDJfYnVmLmZsYWdzICYg
VjRMMl9CVUZfRkxBR19ET05FKQ0KCQlyZXQgPSBQT0xMSU4gfCBQT0xMUkRO
T1JNOwkvKiBzb21ldGhpbmcgdG8gcmVhZCAqLw0KCWVsc2UNCgkJcmV0ID0g
MDsNCm91dDoNCgltdXRleF91bmxvY2soJmdzcGNhX2Rldi0+cXVldWVfbG9j
ayk7DQoJcmV0dXJuIHJldDsNCn0NCg0Kc3RhdGljIHNzaXplX3QgZGV2X3Jl
YWQoc3RydWN0IGZpbGUgKmZpbGUsIGNoYXIgX191c2VyICpkYXRhLA0KCQkg
ICAgc2l6ZV90IGNvdW50LCBsb2ZmX3QgKnBwb3MpDQp7DQoJc3RydWN0IGdz
cGNhX2RldiAqZ3NwY2FfZGV2ID0gZmlsZS0+cHJpdmF0ZV9kYXRhOw0KCXN0
cnVjdCBnc3BjYV9mcmFtZSAqZnJhbWU7DQoJc3RydWN0IHY0bDJfYnVmZmVy
IHY0bDJfYnVmOw0KCXN0cnVjdCB0aW1ldmFsIHRpbWVzdGFtcDsNCglpbnQg
biwgcmV0LCByZXQyOw0KDQoJUERFQlVHKERfRlJBTSwgInJlYWQgKCV6ZCki
LCBjb3VudCk7DQoJaWYgKCFnc3BjYV9kZXYtPnByZXNlbnQpDQoJCXJldHVy
biAtRU5PREVWOw0KCXN3aXRjaCAoZ3NwY2FfZGV2LT5tZW1vcnkpIHsNCglj
YXNlIEdTUENBX01FTU9SWV9OTzoJCQkvKiBmaXJzdCB0aW1lICovDQoJCXJl
dCA9IHJlYWRfYWxsb2MoZ3NwY2FfZGV2LCBmaWxlKTsNCgkJaWYgKHJldCAh
PSAwKQ0KCQkJcmV0dXJuIHJldDsNCgkJYnJlYWs7DQoJY2FzZSBHU1BDQV9N
RU1PUllfUkVBRDoNCgkJaWYgKGdzcGNhX2Rldi0+Y2FwdF9maWxlID09IGZp
bGUpDQoJCQlicmVhazsNCgkJLyogZmFsbCB0aHJ1ICovDQoJZGVmYXVsdDoN
CgkJcmV0dXJuIC1FSU5WQUw7DQoJfQ0KDQoJLyogZ2V0IGEgZnJhbWUgKi8N
CglqaWZmaWVzX3RvX3RpbWV2YWwoZ2V0X2ppZmZpZXNfNjQoKSwgJnRpbWVz
dGFtcCk7DQoJdGltZXN0YW1wLnR2X3NlYy0tOw0KCW4gPSAyOw0KCWZvciAo
OzspIHsNCgkJbWVtc2V0KCZ2NGwyX2J1ZiwgMCwgc2l6ZW9mIHY0bDJfYnVm
KTsNCgkJdjRsMl9idWYudHlwZSA9IFY0TDJfQlVGX1RZUEVfVklERU9fQ0FQ
VFVSRTsNCgkJdjRsMl9idWYubWVtb3J5ID0gR1NQQ0FfTUVNT1JZX1JFQUQ7
DQoJCXJldCA9IHZpZGlvY19kcWJ1ZihmaWxlLCBnc3BjYV9kZXYsICZ2NGwy
X2J1Zik7DQoJCWlmIChyZXQgIT0gMCkgew0KCQkJUERFQlVHKERfU1RSRUFN
LCAicmVhZCBkcWJ1ZiBlcnIgJWQiLCByZXQpOw0KCQkJcmV0dXJuIHJldDsN
CgkJfQ0KDQoJCS8qIGlmIHRoZSBwcm9jZXNzIHNsZXB0IGZvciBtb3JlIHRo
YW4gMSBzZWNvbmQsDQoJCSAqIGdldCBhIG5ld2VyIGZyYW1lICovDQoJCWZy
YW1lID0gJmdzcGNhX2Rldi0+ZnJhbWVbdjRsMl9idWYuaW5kZXhdOw0KCQlp
ZiAoLS1uIDwgMCkNCgkJCWJyZWFrOwkJCS8qIGF2b2lkIGluZmluaXRlIGxv
b3AgKi8NCgkJaWYgKGZyYW1lLT52NGwyX2J1Zi50aW1lc3RhbXAudHZfc2Vj
ID49IHRpbWVzdGFtcC50dl9zZWMpDQoJCQlicmVhazsNCgkJcmV0ID0gdmlk
aW9jX3FidWYoZmlsZSwgZ3NwY2FfZGV2LCAmdjRsMl9idWYpOw0KCQlpZiAo
cmV0ICE9IDApIHsNCgkJCVBERUJVRyhEX1NUUkVBTSwgInJlYWQgcWJ1ZiBl
cnIgJWQiLCByZXQpOw0KCQkJcmV0dXJuIHJldDsNCgkJfQ0KCX0NCg0KCS8q
IGNvcHkgdGhlIGZyYW1lICovDQoJaWYgKGNvdW50ID4gZnJhbWUtPnY0bDJf
YnVmLmJ5dGVzdXNlZCkNCgkJY291bnQgPSBmcmFtZS0+djRsMl9idWYuYnl0
ZXN1c2VkOw0KCXJldCA9IGNvcHlfdG9fdXNlcihkYXRhLCBmcmFtZS0+ZGF0
YSwgY291bnQpOw0KCWlmIChyZXQgIT0gMCkgew0KCQlQREVCVUcoRF9FUlJ8
RF9TVFJFQU0sDQoJCQkicmVhZCBjcCB0byB1c2VyIGxhY2sgJWQgLyAlemQi
LCByZXQsIGNvdW50KTsNCgkJcmV0ID0gLUVGQVVMVDsNCgkJZ290byBvdXQ7
DQoJfQ0KCXJldCA9IGNvdW50Ow0Kb3V0Og0KCS8qIGluIGVhY2ggY2FzZSwg
cmVxdWV1ZSB0aGUgYnVmZmVyICovDQoJcmV0MiA9IHZpZGlvY19xYnVmKGZp
bGUsIGdzcGNhX2RldiwgJnY0bDJfYnVmKTsNCglpZiAocmV0MiAhPSAwKQ0K
CQlyZXR1cm4gcmV0MjsNCglyZXR1cm4gcmV0Ow0KfQ0KDQpzdGF0aWMgc3Ry
dWN0IHY0bDJfZmlsZV9vcGVyYXRpb25zIGRldl9mb3BzID0gew0KCS5vd25l
ciA9IFRISVNfTU9EVUxFLA0KCS5vcGVuID0gZGV2X29wZW4sDQoJLnJlbGVh
c2UgPSBkZXZfY2xvc2UsDQoJLnJlYWQgPSBkZXZfcmVhZCwNCgkubW1hcCA9
IGRldl9tbWFwLA0KCS51bmxvY2tlZF9pb2N0bCA9IHZpZGVvX2lvY3RsMiwN
CgkucG9sbAk9IGRldl9wb2xsLA0KfTsNCg0Kc3RhdGljIGNvbnN0IHN0cnVj
dCB2NGwyX2lvY3RsX29wcyBkZXZfaW9jdGxfb3BzID0gew0KCS52aWRpb2Nf
cXVlcnljYXAJPSB2aWRpb2NfcXVlcnljYXAsDQoJLnZpZGlvY19kcWJ1ZgkJ
PSB2aWRpb2NfZHFidWYsDQoJLnZpZGlvY19xYnVmCQk9IHZpZGlvY19xYnVm
LA0KCS52aWRpb2NfZW51bV9mbXRfdmlkX2NhcCA9IHZpZGlvY19lbnVtX2Zt
dF92aWRfY2FwLA0KCS52aWRpb2NfdHJ5X2ZtdF92aWRfY2FwCT0gdmlkaW9j
X3RyeV9mbXRfdmlkX2NhcCwNCgkudmlkaW9jX2dfZm10X3ZpZF9jYXAJPSB2
aWRpb2NfZ19mbXRfdmlkX2NhcCwNCgkudmlkaW9jX3NfZm10X3ZpZF9jYXAJ
PSB2aWRpb2Nfc19mbXRfdmlkX2NhcCwNCgkudmlkaW9jX3N0cmVhbW9uCT0g
dmlkaW9jX3N0cmVhbW9uLA0KCS52aWRpb2NfcXVlcnljdHJsCT0gdmlkaW9j
X3F1ZXJ5Y3RybCwNCgkudmlkaW9jX2dfY3RybAkJPSB2aWRpb2NfZ19jdHJs
LA0KCS52aWRpb2Nfc19jdHJsCQk9IHZpZGlvY19zX2N0cmwsDQoJLnZpZGlv
Y19nX2F1ZGlvCQk9IHZpZGlvY19nX2F1ZGlvLA0KCS52aWRpb2Nfc19hdWRp
bwkJPSB2aWRpb2Nfc19hdWRpbywNCgkudmlkaW9jX2VudW1hdWRpbwk9IHZp
ZGlvY19lbnVtYXVkaW8sDQoJLnZpZGlvY19xdWVyeW1lbnUJPSB2aWRpb2Nf
cXVlcnltZW51LA0KCS52aWRpb2NfZW51bV9pbnB1dAk9IHZpZGlvY19lbnVt
X2lucHV0LA0KCS52aWRpb2NfZ19pbnB1dAkJPSB2aWRpb2NfZ19pbnB1dCwN
CgkudmlkaW9jX3NfaW5wdXQJCT0gdmlkaW9jX3NfaW5wdXQsDQoJLnZpZGlv
Y19yZXFidWZzCQk9IHZpZGlvY19yZXFidWZzLA0KCS52aWRpb2NfcXVlcnli
dWYJPSB2aWRpb2NfcXVlcnlidWYsDQoJLnZpZGlvY19zdHJlYW1vZmYJPSB2
aWRpb2Nfc3RyZWFtb2ZmLA0KCS52aWRpb2NfZ19qcGVnY29tcAk9IHZpZGlv
Y19nX2pwZWdjb21wLA0KCS52aWRpb2Nfc19qcGVnY29tcAk9IHZpZGlvY19z
X2pwZWdjb21wLA0KCS52aWRpb2NfZ19wYXJtCQk9IHZpZGlvY19nX3Bhcm0s
DQoJLnZpZGlvY19zX3Bhcm0JCT0gdmlkaW9jX3NfcGFybSwNCgkudmlkaW9j
X3Nfc3RkCQk9IHZpZGlvY19zX3N0ZCwNCiNpZmRlZiBDT05GSUdfVklERU9f
VjRMMV9DT01QQVQNCgkudmlkaW9jZ21idWYgICAgICAgICAgPSB2aWRpb2Nn
bWJ1ZiwNCiNlbmRpZg0KfTsNCg0Kc3RhdGljIHN0cnVjdCB2aWRlb19kZXZp
Y2UgZ3NwY2FfdGVtcGxhdGUgPSB7DQoJLm5hbWUgPSAiZ3NwY2EgbWFpbiBk
cml2ZXIiLA0KCS5mb3BzID0gJmRldl9mb3BzLA0KCS5pb2N0bF9vcHMgPSAm
ZGV2X2lvY3RsX29wcywNCgkucmVsZWFzZSA9IGdzcGNhX3JlbGVhc2UsDQoJ
Lm1pbm9yID0gLTEsDQp9Ow0KDQovKg0KICogcHJvYmUgYW5kIGNyZWF0ZSBh
IG5ldyBnc3BjYSBkZXZpY2UNCiAqDQogKiBUaGlzIGZ1bmN0aW9uIG11c3Qg
YmUgY2FsbGVkIGJ5IHRoZSBzdWItZHJpdmVyIHdoZW4gaXQgaXMNCiAqIGNh
bGxlZCBmb3IgcHJvYmluZyBhIG5ldyBkZXZpY2UuDQogKi8NCmludCBnc3Bj
YV9kZXZfcHJvYmUoc3RydWN0IHVzYl9pbnRlcmZhY2UgKmludGYsDQoJCWNv
bnN0IHN0cnVjdCB1c2JfZGV2aWNlX2lkICppZCwNCgkJY29uc3Qgc3RydWN0
IHNkX2Rlc2MgKnNkX2Rlc2MsDQoJCWludCBkZXZfc2l6ZSwNCgkJc3RydWN0
IG1vZHVsZSAqbW9kdWxlKQ0Kew0KCXN0cnVjdCB1c2JfaW50ZXJmYWNlX2Rl
c2NyaXB0b3IgKmludGVyZmFjZTsNCglzdHJ1Y3QgZ3NwY2FfZGV2ICpnc3Bj
YV9kZXY7DQoJc3RydWN0IHVzYl9kZXZpY2UgKmRldiA9IGludGVyZmFjZV90
b191c2JkZXYoaW50Zik7DQoJaW50IHJldDsNCg0KCVBERUJVRyhEX1BST0JF
LCAicHJvYmluZyAlMDR4OiUwNHgiLCBpZC0+aWRWZW5kb3IsIGlkLT5pZFBy
b2R1Y3QpOw0KDQoJLyogd2UgZG9uJ3QgaGFuZGxlIG11bHRpLWNvbmZpZyBj
YW1lcmFzICovDQoJaWYgKGRldi0+ZGVzY3JpcHRvci5iTnVtQ29uZmlndXJh
dGlvbnMgIT0gMSkNCgkJcmV0dXJuIC1FTk9ERVY7DQoJaW50ZXJmYWNlID0g
JmludGYtPmN1cl9hbHRzZXR0aW5nLT5kZXNjOw0KCWlmIChpbnRlcmZhY2Ut
PmJJbnRlcmZhY2VOdW1iZXIgPiAwKQ0KCQlyZXR1cm4gLUVOT0RFVjsNCg0K
CS8qIGNyZWF0ZSB0aGUgZGV2aWNlICovDQoJaWYgKGRldl9zaXplIDwgc2l6
ZW9mICpnc3BjYV9kZXYpDQoJCWRldl9zaXplID0gc2l6ZW9mICpnc3BjYV9k
ZXY7DQoJZ3NwY2FfZGV2ID0ga3phbGxvYyhkZXZfc2l6ZSwgR0ZQX0tFUk5F
TCk7DQoJaWYgKCFnc3BjYV9kZXYpIHsNCgkJZXJyKCJjb3VsZG4ndCBremFs
bG9jIGdzcGNhIHN0cnVjdCIpOw0KCQlyZXR1cm4gLUVOT01FTTsNCgl9DQoJ
Z3NwY2FfZGV2LT51c2JfYnVmID0ga21hbGxvYyhVU0JfQlVGX1NaLCBHRlBf
S0VSTkVMKTsNCglpZiAoIWdzcGNhX2Rldi0+dXNiX2J1Zikgew0KCQllcnIo
Im91dCBvZiBtZW1vcnkiKTsNCgkJcmV0ID0gLUVOT01FTTsNCgkJZ290byBv
dXQ7DQoJfQ0KCWdzcGNhX2Rldi0+ZGV2ID0gZGV2Ow0KCWdzcGNhX2Rldi0+
aWZhY2UgPSBpbnRlcmZhY2UtPmJJbnRlcmZhY2VOdW1iZXI7DQoJZ3NwY2Ff
ZGV2LT5uYmFsdCA9IGludGYtPm51bV9hbHRzZXR0aW5nOw0KCWdzcGNhX2Rl
di0+c2RfZGVzYyA9IHNkX2Rlc2M7DQoJZ3NwY2FfZGV2LT5uYnVmcmVhZCA9
IDI7DQoJZ3NwY2FfZGV2LT5lbXB0eV9wYWNrZXQgPSAtMTsJLyogZG9uJ3Qg
Y2hlY2sgdGhlIGVtcHR5IHBhY2tldHMgKi8NCg0KCS8qIGNvbmZpZ3VyZSB0
aGUgc3ViZHJpdmVyIGFuZCBpbml0aWFsaXplIHRoZSBVU0IgZGV2aWNlICov
DQoJcmV0ID0gc2RfZGVzYy0+Y29uZmlnKGdzcGNhX2RldiwgaWQpOw0KCWlm
IChyZXQgPCAwKQ0KCQlnb3RvIG91dDsNCglyZXQgPSBzZF9kZXNjLT5pbml0
KGdzcGNhX2Rldik7DQoJaWYgKHJldCA8IDApDQoJCWdvdG8gb3V0Ow0KCXJl
dCA9IGdzcGNhX3NldF9hbHQwKGdzcGNhX2Rldik7DQoJaWYgKHJldCA8IDAp
DQoJCWdvdG8gb3V0Ow0KCWdzcGNhX3NldF9kZWZhdWx0X21vZGUoZ3NwY2Ff
ZGV2KTsNCg0KCW11dGV4X2luaXQoJmdzcGNhX2Rldi0+dXNiX2xvY2spOw0K
CW11dGV4X2luaXQoJmdzcGNhX2Rldi0+cmVhZF9sb2NrKTsNCgltdXRleF9p
bml0KCZnc3BjYV9kZXYtPnF1ZXVlX2xvY2spOw0KCWluaXRfd2FpdHF1ZXVl
X2hlYWQoJmdzcGNhX2Rldi0+d3EpOw0KDQoJLyogaW5pdCB2aWRlbyBzdHVm
ZiAqLw0KCW1lbWNweSgmZ3NwY2FfZGV2LT52ZGV2LCAmZ3NwY2FfdGVtcGxh
dGUsIHNpemVvZiBnc3BjYV90ZW1wbGF0ZSk7DQoJZ3NwY2FfZGV2LT52ZGV2
LnBhcmVudCA9ICZkZXYtPmRldjsNCglnc3BjYV9kZXYtPm1vZHVsZSA9IG1v
ZHVsZTsNCglnc3BjYV9kZXYtPnByZXNlbnQgPSAxOw0KCXJldCA9IHZpZGVv
X3JlZ2lzdGVyX2RldmljZSgmZ3NwY2FfZGV2LT52ZGV2LA0KCQkJCSAgVkZM
X1RZUEVfR1JBQkJFUiwNCgkJCQkgIC0xKTsNCglpZiAocmV0IDwgMCkgew0K
CQllcnIoInZpZGVvX3JlZ2lzdGVyX2RldmljZSBlcnIgJWQiLCByZXQpOw0K
CQlnb3RvIG91dDsNCgl9DQoNCgl1c2Jfc2V0X2ludGZkYXRhKGludGYsIGdz
cGNhX2Rldik7DQoJUERFQlVHKERfUFJPQkUsICJwcm9iZSBvayIpOw0KCXJl
dHVybiAwOw0Kb3V0Og0KCWtmcmVlKGdzcGNhX2Rldi0+dXNiX2J1Zik7DQoJ
a2ZyZWUoZ3NwY2FfZGV2KTsNCglyZXR1cm4gcmV0Ow0KfQ0KRVhQT1JUX1NZ
TUJPTChnc3BjYV9kZXZfcHJvYmUpOw0KDQovKg0KICogVVNCIGRpc2Nvbm5l
Y3Rpb24NCiAqDQogKiBUaGlzIGZ1bmN0aW9uIG11c3QgYmUgY2FsbGVkIGJ5
IHRoZSBzdWItZHJpdmVyDQogKiB3aGVuIHRoZSBkZXZpY2UgZGlzY29ubmVj
dHMsIGFmdGVyIHRoZSBzcGVjaWZpYyByZXNvdXJjZXMgYXJlIGZyZWVkLg0K
ICovDQp2b2lkIGdzcGNhX2Rpc2Nvbm5lY3Qoc3RydWN0IHVzYl9pbnRlcmZh
Y2UgKmludGYpDQp7DQoJc3RydWN0IGdzcGNhX2RldiAqZ3NwY2FfZGV2ID0g
dXNiX2dldF9pbnRmZGF0YShpbnRmKTsNCg0KCWdzcGNhX2Rldi0+cHJlc2Vu
dCA9IDA7DQoNCgl1c2Jfc2V0X2ludGZkYXRhKGludGYsIE5VTEwpOw0KDQoJ
LyogcmVsZWFzZSB0aGUgZGV2aWNlICovDQoJLyogKHRoaXMgd2lsbCBjYWxs
IGdzcGNhX3JlbGVhc2UoKSBpbW1lZGlhdGx5IG9yIG9uIGxhc3QgY2xvc2Up
ICovDQoJdmlkZW9fdW5yZWdpc3Rlcl9kZXZpY2UoJmdzcGNhX2Rldi0+dmRl
dik7DQoNCglQREVCVUcoRF9QUk9CRSwgImRpc2Nvbm5lY3QgY29tcGxldGUi
KTsNCn0NCkVYUE9SVF9TWU1CT0woZ3NwY2FfZGlzY29ubmVjdCk7DQoNCiNp
ZmRlZiBDT05GSUdfUE0NCmludCBnc3BjYV9zdXNwZW5kKHN0cnVjdCB1c2Jf
aW50ZXJmYWNlICppbnRmLCBwbV9tZXNzYWdlX3QgbWVzc2FnZSkNCnsNCglz
dHJ1Y3QgZ3NwY2FfZGV2ICpnc3BjYV9kZXYgPSB1c2JfZ2V0X2ludGZkYXRh
KGludGYpOw0KDQoJaWYgKCFnc3BjYV9kZXYtPnN0cmVhbWluZykNCgkJcmV0
dXJuIDA7DQoJZ3NwY2FfZGV2LT5mcm96ZW4gPSAxOwkJLyogYXZvaWQgdXJi
IGVycm9yIG1lc3NhZ2VzICovDQoJaWYgKGdzcGNhX2Rldi0+c2RfZGVzYy0+
c3RvcE4pDQoJCWdzcGNhX2Rldi0+c2RfZGVzYy0+c3RvcE4oZ3NwY2FfZGV2
KTsNCglkZXN0cm95X3VyYnMoZ3NwY2FfZGV2KTsNCglnc3BjYV9zZXRfYWx0
MChnc3BjYV9kZXYpOw0KCWlmIChnc3BjYV9kZXYtPnNkX2Rlc2MtPnN0b3Aw
KQ0KCQlnc3BjYV9kZXYtPnNkX2Rlc2MtPnN0b3AwKGdzcGNhX2Rldik7DQoJ
cmV0dXJuIDA7DQp9DQpFWFBPUlRfU1lNQk9MKGdzcGNhX3N1c3BlbmQpOw0K
DQppbnQgZ3NwY2FfcmVzdW1lKHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRm
KQ0Kew0KCXN0cnVjdCBnc3BjYV9kZXYgKmdzcGNhX2RldiA9IHVzYl9nZXRf
aW50ZmRhdGEoaW50Zik7DQoNCglnc3BjYV9kZXYtPmZyb3plbiA9IDA7DQoJ
Z3NwY2FfZGV2LT5zZF9kZXNjLT5pbml0KGdzcGNhX2Rldik7DQoJaWYgKGdz
cGNhX2Rldi0+c3RyZWFtaW5nKQ0KCQlyZXR1cm4gZ3NwY2FfaW5pdF90cmFu
c2Zlcihnc3BjYV9kZXYpOw0KCXJldHVybiAwOw0KfQ0KRVhQT1JUX1NZTUJP
TChnc3BjYV9yZXN1bWUpOw0KI2VuZGlmDQovKiAtLSBjYW0gZHJpdmVyIHV0
aWxpdHkgZnVuY3Rpb25zIC0tICovDQoNCi8qIGF1dG8gZ2FpbiBhbmQgZXhw
b3N1cmUgYWxnb3JpdGhtIGJhc2VkIG9uIHRoZSBrbmVlIGFsZ29yaXRobSBk
ZXNjcmliZWQgaGVyZToNCiAgIGh0dHA6Ly95dHNlLnRyaWNvbG91ci5uZXQv
ZG9jcy9Mb3dMaWdodE9wdGltaXphdGlvbi5odG1sDQoNCiAgIFJldHVybnMg
MCBpZiBubyBjaGFuZ2VzIHdlcmUgbWFkZSwgMSBpZiB0aGUgZ2FpbiBhbmQg
b3IgZXhwb3N1cmUgc2V0dGluZ3MNCiAgIHdoZXJlIGNoYW5nZWQuICovDQpp
bnQgZ3NwY2FfYXV0b19nYWluX25fZXhwb3N1cmUoc3RydWN0IGdzcGNhX2Rl
diAqZ3NwY2FfZGV2LCBpbnQgYXZnX2x1bSwNCglpbnQgZGVzaXJlZF9hdmdf
bHVtLCBpbnQgZGVhZHpvbmUsIGludCBnYWluX2tuZWUsIGludCBleHBvc3Vy
ZV9rbmVlKQ0Kew0KCWludCBpLCBzdGVwcywgZ2Fpbiwgb3JpZ19nYWluLCBl
eHBvc3VyZSwgb3JpZ19leHBvc3VyZSwgYXV0b2dhaW47DQoJY29uc3Qgc3Ry
dWN0IGN0cmwgKmdhaW5fY3RybCA9IE5VTEw7DQoJY29uc3Qgc3RydWN0IGN0
cmwgKmV4cG9zdXJlX2N0cmwgPSBOVUxMOw0KCWNvbnN0IHN0cnVjdCBjdHJs
ICphdXRvZ2Fpbl9jdHJsID0gTlVMTDsNCglpbnQgcmV0dmFsID0gMDsNCg0K
CWZvciAoaSA9IDA7IGkgPCBnc3BjYV9kZXYtPnNkX2Rlc2MtPm5jdHJsczsg
aSsrKSB7DQoJCWlmIChnc3BjYV9kZXYtPnNkX2Rlc2MtPmN0cmxzW2ldLnFj
dHJsLmlkID09IFY0TDJfQ0lEX0dBSU4pDQoJCQlnYWluX2N0cmwgPSAmZ3Nw
Y2FfZGV2LT5zZF9kZXNjLT5jdHJsc1tpXTsNCgkJaWYgKGdzcGNhX2Rldi0+
c2RfZGVzYy0+Y3RybHNbaV0ucWN0cmwuaWQgPT0gVjRMMl9DSURfRVhQT1NV
UkUpDQoJCQlleHBvc3VyZV9jdHJsID0gJmdzcGNhX2Rldi0+c2RfZGVzYy0+
Y3RybHNbaV07DQoJCWlmIChnc3BjYV9kZXYtPnNkX2Rlc2MtPmN0cmxzW2ld
LnFjdHJsLmlkID09IFY0TDJfQ0lEX0FVVE9HQUlOKQ0KCQkJYXV0b2dhaW5f
Y3RybCA9ICZnc3BjYV9kZXYtPnNkX2Rlc2MtPmN0cmxzW2ldOw0KCX0NCglp
ZiAoIWdhaW5fY3RybCB8fCAhZXhwb3N1cmVfY3RybCB8fCAhYXV0b2dhaW5f
Y3RybCkgew0KCQlQREVCVUcoRF9FUlIsICJFcnJvcjogZ3NwY2FfYXV0b19n
YWluX25fZXhwb3N1cmUgY2FsbGVkICINCgkJCSJvbiBjYW0gd2l0aG91dCAo
YXV0bylnYWluL2V4cG9zdXJlIik7DQoJCXJldHVybiAwOw0KCX0NCg0KCWlm
IChnYWluX2N0cmwtPmdldChnc3BjYV9kZXYsICZnYWluKSB8fA0KCQkJZXhw
b3N1cmVfY3RybC0+Z2V0KGdzcGNhX2RldiwgJmV4cG9zdXJlKSB8fA0KCQkJ
YXV0b2dhaW5fY3RybC0+Z2V0KGdzcGNhX2RldiwgJmF1dG9nYWluKSB8fCAh
YXV0b2dhaW4pDQoJCXJldHVybiAwOw0KDQoJb3JpZ19nYWluID0gZ2FpbjsN
CglvcmlnX2V4cG9zdXJlID0gZXhwb3N1cmU7DQoNCgkvKiBJZiB3ZSBhcmUg
b2YgYSBtdWx0aXBsZSBvZiBkZWFkem9uZSwgZG8gbXVsdGlwbGUgc3RlcHMg
dG8gcmVhY2ggdGhlDQoJICAgZGVzaXJlZCBsdW1pbmF0aW9uIGZhc3QgKHdp
dGggdGhlIHJpc2Mgb2YgYSBzbGlnaHQgb3ZlcnNob290KSAqLw0KCXN0ZXBz
ID0gYWJzKGRlc2lyZWRfYXZnX2x1bSAtIGF2Z19sdW0pIC8gZGVhZHpvbmU7
DQoNCglQREVCVUcoRF9GUkFNLCAiYXV0b2dhaW46IGx1bTogJWQsIGRlc2ly
ZWQ6ICVkLCBzdGVwczogJWQiLA0KCQlhdmdfbHVtLCBkZXNpcmVkX2F2Z19s
dW0sIHN0ZXBzKTsNCg0KCWZvciAoaSA9IDA7IGkgPCBzdGVwczsgaSsrKSB7
DQoJCWlmIChhdmdfbHVtID4gZGVzaXJlZF9hdmdfbHVtKSB7DQoJCQlpZiAo
Z2FpbiA+IGdhaW5fa25lZSkNCgkJCQlnYWluLS07DQoJCQllbHNlIGlmIChl
eHBvc3VyZSA+IGV4cG9zdXJlX2tuZWUpDQoJCQkJZXhwb3N1cmUtLTsNCgkJ
CWVsc2UgaWYgKGdhaW4gPiBnYWluX2N0cmwtPnFjdHJsLmRlZmF1bHRfdmFs
dWUpDQoJCQkJZ2Fpbi0tOw0KCQkJZWxzZSBpZiAoZXhwb3N1cmUgPiBleHBv
c3VyZV9jdHJsLT5xY3RybC5taW5pbXVtKQ0KCQkJCWV4cG9zdXJlLS07DQoJ
CQllbHNlIGlmIChnYWluID4gZ2Fpbl9jdHJsLT5xY3RybC5taW5pbXVtKQ0K
CQkJCWdhaW4tLTsNCgkJCWVsc2UNCgkJCQlicmVhazsNCgkJfSBlbHNlIHsN
CgkJCWlmIChnYWluIDwgZ2Fpbl9jdHJsLT5xY3RybC5kZWZhdWx0X3ZhbHVl
KQ0KCQkJCWdhaW4rKzsNCgkJCWVsc2UgaWYgKGV4cG9zdXJlIDwgZXhwb3N1
cmVfa25lZSkNCgkJCQlleHBvc3VyZSsrOw0KCQkJZWxzZSBpZiAoZ2FpbiA8
IGdhaW5fa25lZSkNCgkJCQlnYWluKys7DQoJCQllbHNlIGlmIChleHBvc3Vy
ZSA8IGV4cG9zdXJlX2N0cmwtPnFjdHJsLm1heGltdW0pDQoJCQkJZXhwb3N1
cmUrKzsNCgkJCWVsc2UgaWYgKGdhaW4gPCBnYWluX2N0cmwtPnFjdHJsLm1h
eGltdW0pDQoJCQkJZ2FpbisrOw0KCQkJZWxzZQ0KCQkJCWJyZWFrOw0KCQl9
DQoJfQ0KDQoJaWYgKGdhaW4gIT0gb3JpZ19nYWluKSB7DQoJCWdhaW5fY3Ry
bC0+c2V0KGdzcGNhX2RldiwgZ2Fpbik7DQoJCXJldHZhbCA9IDE7DQoJfQ0K
CWlmIChleHBvc3VyZSAhPSBvcmlnX2V4cG9zdXJlKSB7DQoJCWV4cG9zdXJl
X2N0cmwtPnNldChnc3BjYV9kZXYsIGV4cG9zdXJlKTsNCgkJcmV0dmFsID0g
MTsNCgl9DQoNCglyZXR1cm4gcmV0dmFsOw0KfQ0KRVhQT1JUX1NZTUJPTChn
c3BjYV9hdXRvX2dhaW5fbl9leHBvc3VyZSk7DQoNCi8qIC0tIG1vZHVsZSBp
bnNlcnQgLyByZW1vdmUgLS0gKi8NCnN0YXRpYyBpbnQgX19pbml0IGdzcGNh
X2luaXQodm9pZCkNCnsNCglpbmZvKCJtYWluIHYlZC4lZC4lZCByZWdpc3Rl
cmVkIiwNCgkJKERSSVZFUl9WRVJTSU9OX05VTUJFUiA+PiAxNikgJiAweGZm
LA0KCQkoRFJJVkVSX1ZFUlNJT05fTlVNQkVSID4+IDgpICYgMHhmZiwNCgkJ
RFJJVkVSX1ZFUlNJT05fTlVNQkVSICYgMHhmZik7DQoJcmV0dXJuIDA7DQp9
DQpzdGF0aWMgdm9pZCBfX2V4aXQgZ3NwY2FfZXhpdCh2b2lkKQ0Kew0KCWlu
Zm8oIm1haW4gZGVyZWdpc3RlcmVkIik7DQp9DQoNCm1vZHVsZV9pbml0KGdz
cGNhX2luaXQpOw0KbW9kdWxlX2V4aXQoZ3NwY2FfZXhpdCk7DQoNCiNpZmRl
ZiBHU1BDQV9ERUJVRw0KbW9kdWxlX3BhcmFtX25hbWVkKGRlYnVnLCBnc3Bj
YV9kZWJ1ZywgaW50LCAwNjQ0KTsNCk1PRFVMRV9QQVJNX0RFU0MoZGVidWcs
DQoJCSJEZWJ1ZyAoYml0KSAweDAxOmVycm9yIDB4MDI6cHJvYmUgMHgwNDpj
b25maWciDQoJCSIgMHgwODpzdHJlYW0gMHgxMDpmcmFtZSAweDIwOnBhY2tl
dCAweDQwOlVTQmluIDB4ODA6VVNCb3V0Ig0KCQkiIDB4MDEwMDogdjRsMiIp
Ow0KI2VuZGlmDQo=

---863829203-948596715-1233614449=:743--
