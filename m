Return-path: <linux-media-owner@vger.kernel.org>
Received: from service87.mimecast.com ([91.220.42.44]:33991 "EHLO
	service87.mimecast.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S966633Ab3DQPRk (ORCPT
	<rfc822;linux-media@vger.kernel.org>);
	Wed, 17 Apr 2013 11:17:40 -0400
From: Pawel Moll <pawel.moll@arm.com>
To: linux-fbdev@vger.kernel.org, linux-media@vger.kernel.org,
	dri-devel@lists.freedesktop.org,
	devicetree-discuss@lists.ozlabs.org,
	linux-arm-kernel@lists.infradead.org
Cc: Laurent Pinchart <laurent.pinchart@ideasonboard.com>,
	Linus Walleij <linus.walleij@linaro.org>,
	Russell King - ARM Linux <linux@arm.linux.org.uk>,
	Pawel Moll <pawel.moll@arm.com>
Subject: [RFC 03/10] video: display: Add Device Tree bindings
Date: Wed, 17 Apr 2013 16:17:15 +0100
Message-Id: <1366211842-21497-4-git-send-email-pawel.moll@arm.com>
In-Reply-To: <1366211842-21497-1-git-send-email-pawel.moll@arm.com>
References: <1366211842-21497-1-git-send-email-pawel.moll@arm.com>
Content-Type: text/plain; charset=WINDOWS-1252
Content-Transfer-Encoding: quoted-printable
Sender: linux-media-owner@vger.kernel.org
List-ID: <linux-media.vger.kernel.org>

Modelled after the common clock solution, the bindings
are based on the idea of display entity "providers" and
"consumers".

Signed-off-by: Pawel Moll <pawel.moll@arm.com>
---
 .../devicetree/bindings/video/display-bindings.txt |   75 ++++++++++++++++=
+
 drivers/video/display/display-core.c               |   84 ++++++++++++++++=
++++
 include/video/display.h                            |   11 +++
 3 files changed, 170 insertions(+)
 create mode 100644 Documentation/devicetree/bindings/video/display-binding=
s.txt

diff --git a/Documentation/devicetree/bindings/video/display-bindings.txt b=
/Documentation/devicetree/bindings/video/display-bindings.txt
new file mode 100644
index 0000000..6d8b888
--- /dev/null
+++ b/Documentation/devicetree/bindings/video/display-bindings.txt
@@ -0,0 +1,75 @@
+[this is an RFC]
+
+Common Display Framework define a display entity (eg. LCD panel),
+being a sink for video data generated by a video signal generator
+(eg.  LCD controller/driver).
+
+This set of bindings allow to represent connections between them
+in the Device Tree.
+
+Devices nodes representing display sinks are called "display
+providers" and nodes representing display sources are called
+"display consumers".
+
+Notice that in both cases a device represented by a node can
+provide or consume more than one display entity. For example
+a LCD controller can be able to driver more than one LCD
+panel at the same time, while a panel (or a special signal
+multiplexer) may have more than one input (sink) and switch
+between them.
+
+=3D=3D Display provider =3D=3D
+
+Required properties:
+
+* #clock-cells:=09Number of cells in the display specifier. Typically
+=09=090 for nodes providing single display entity and 1
+=09=09for nodes providing multiple displays.
+
+Example:
+=09=09=09dvi-output: dvi-output@0 {
+=09=09=09=09#display-cells =3D <0>;
+=09=09=09};
+
+=3D=3D Display consumer =3D=3D
+
+Required properties:
+
+* display:=09List of phandle and clock specifier pairs, one pair
+=09=09for each display (sink). Note: if the display provider
+=09=09specifies '0' for #display-cells, then only the phandle
+=09=09portion of the pair will appear.
+
+Example:
+
+=09=09=09display-driver {
+=09=09=09=09display =3D <&dvi-output>;
+=09=09=09};
+
+=3D=3D Larger example =3D=3D
+
+=09=09=09clcd@10020000 {
+=09=09=09=09compatible =3D "arm,pl111", "arm,primecell";
+=09=09=09=09reg =3D <0x10020000 0x1000>;
+=09=09=09=09interrupts =3D <0 44 4>;
+=09=09=09=09clocks =3D <&oscclk1>, <&oscclk2>;
+=09=09=09=09clock-names =3D "clcdclk", "apb_pclk";
+=09=09=09=09label =3D "V2P-CA9 CLCD";
+=09=09=09=09display =3D <&v2m_muxfpga 0xf>;
+=09=09=09=09max-hactive =3D <1024>;
+=09=09=09=09max-vactive =3D <768>;
+=09=09=09=09max-bpp =3D <16>;
+=09=09=09};
+
+=09=09=09v2m_muxfpga: muxfpga@0 {
+=09=09=09=09compatible =3D "arm,vexpress-muxfpga";
+=09=09=09=09arm,vexpress-sysreg,func =3D <7 0>;
+=09=09=09=09#display-cells =3D <1>;
+=09=09=09=09display =3D <&v2m_dvimode>;
+=09=09=09};
+
+=09=09=09v2m_dvimode: dvimode@0 {
+=09=09=09=09compatible =3D "arm,vexpress-dvimode";
+=09=09=09=09arm,vexpress-sysreg,func =3D <11 0>;
+=09=09=09=09#display-cells =3D <0>;
+=09=09=09};
diff --git a/drivers/video/display/display-core.c b/drivers/video/display/d=
isplay-core.c
index 4b8e45a..9827a5d 100644
--- a/drivers/video/display/display-core.c
+++ b/drivers/video/display/display-core.c
@@ -15,6 +15,7 @@
 #include <linux/list.h>
 #include <linux/module.h>
 #include <linux/mutex.h>
+#include <linux/slab.h>
=20
 #include <video/display.h>
 #include <video/videomode.h>
@@ -230,6 +231,89 @@ void display_entity_put(struct display_entity *entity)
 }
 EXPORT_SYMBOL_GPL(display_entity_put);
=20
+#if defined(CONFIG_OF)
+struct of_display_entity_provider {
+=09struct list_head list;
+=09struct device_node *node;
+=09struct display_entity *(*get)(struct of_phandle_args *spec, void *data)=
;
+=09void *data;
+};
+
+static LIST_HEAD(of_display_entity_providers);
+static DEFINE_MUTEX(of_display_entity_providers_lock);
+
+int of_display_entity_add_provider(struct device_node *node,
+=09=09struct display_entity *(*get)(struct of_phandle_args *spec,
+=09=09void *data), void *data)
+{
+=09struct of_display_entity_provider *provider =3D
+=09=09=09kzalloc(sizeof(*provider), GFP_KERNEL);
+
+=09if (!provider)
+=09=09return -ENOMEM;
+
+=09provider->node =3D of_node_get(node);
+=09provider->get =3D get;
+=09provider->data =3D data;
+
+=09mutex_lock(&of_display_entity_providers_lock);
+=09list_add(&provider->list, &of_display_entity_providers);
+=09mutex_unlock(&of_display_entity_providers_lock);
+
+=09return 0;
+}
+EXPORT_SYMBOL_GPL(of_display_entity_add_provider);
+
+struct display_entity *of_display_entity_provider_simple_get(
+=09=09struct of_phandle_args *spec, void *data)
+{
+=09return data;
+}
+EXPORT_SYMBOL_GPL(of_display_entity_provider_simple_get);
+
+void of_display_entity_remove_provider(struct device_node *node)
+{
+=09struct of_display_entity_provider *provider, *p;
+
+=09mutex_lock(&of_display_entity_providers_lock);
+=09list_for_each_entry_safe(provider, p, &of_display_entity_providers,
+=09=09=09list) {
+=09=09if (provider->node =3D=3D node) {
+=09=09=09list_del(&provider->list);
+=09=09=09of_node_put(provider->node);
+=09=09=09kfree(node);
+=09=09=09break;
+=09=09}
+=09}
+=09mutex_unlock(&of_display_entity_providers_lock);
+}
+EXPORT_SYMBOL_GPL(of_display_entity_remove_provider);
+
+struct display_entity *of_display_entity_get(struct device_node *node,
+=09=09int index)
+{
+=09struct of_phandle_args spec;
+=09struct of_display_entity_provider *provider;
+=09struct display_entity *entity =3D NULL;
+
+=09if (of_parse_phandle_with_args(node, "display", "#display-cells",
+=09=09=09index, &spec) !=3D 0)
+=09=09return NULL;
+
+=09mutex_lock(&of_display_entity_providers_lock);
+=09list_for_each_entry(provider, &of_display_entity_providers, list) {
+=09=09if (provider->node =3D=3D spec.np) {
+=09=09=09entity =3D provider->get(&spec, provider->data);
+=09=09=09break;
+=09=09}
+=09}
+=09mutex_unlock(&of_display_entity_providers_lock);
+
+=09return entity;
+}
+EXPORT_SYMBOL_GPL(of_display_entity_get);
+#endif
+
 static int display_entity_notifier_match(struct display_entity *entity,
 =09=09=09=09struct display_entity_notifier *notifier)
 {
diff --git a/include/video/display.h b/include/video/display.h
index 64f84d5..7fe8b2f 100644
--- a/include/video/display.h
+++ b/include/video/display.h
@@ -16,6 +16,7 @@
 #include <linux/kref.h>
 #include <linux/list.h>
 #include <linux/module.h>
+#include <linux/of.h>
=20
 /* -----------------------------------------------------------------------=
------
  * Display Entity
@@ -149,4 +150,14 @@ void display_entity_unregister_notifier(struct display=
_entity_notifier *notifier
 #define display_entity_register(display_entity) \
 =09__display_entity_register(display_entity, THIS_MODULE)
=20
+struct display_entity *of_display_entity_get(struct device_node *node,
+=09=09int index);
+
+int of_display_entity_add_provider(struct device_node *node,
+=09=09struct display_entity *(*get)(struct of_phandle_args *spec,
+=09=09void *data), void *data);
+void of_display_entity_remove_provider(struct device_node *node);
+struct display_entity *of_display_entity_provider_simple_get(
+=09=09struct of_phandle_args *spec, void *data);
+
 #endif /* __DISPLAY_H__ */
--=20
1.7.10.4


