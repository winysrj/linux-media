Return-path: <linux-media-owner@vger.kernel.org>
Received: from mga11.intel.com ([192.55.52.93]:28442 "EHLO mga11.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1750862AbeDYC2b (ORCPT <rfc822;linux-media@vger.kernel.org>);
        Tue, 24 Apr 2018 22:28:31 -0400
From: "Yeh, Andy" <andy.yeh@intel.com>
To: jacopo mondi <jacopo@jmondi.org>,
        "tfiga@chromium.org" <tfiga@chromium.org>
CC: "linux-media@vger.kernel.org" <linux-media@vger.kernel.org>,
        "sakari.ailus@linux.intel.com" <sakari.ailus@linux.intel.com>,
        "devicetree@vger.kernel.org" <devicetree@vger.kernel.org>,
        "Chiang, AlanX" <alanx.chiang@intel.com>
Subject: RE: [RESEND PATCH v7 2/2] media: dw9807: Add dw9807 vcm driver
Date: Wed, 25 Apr 2018 02:28:26 +0000
Message-ID: <8E0971CCB6EA9D41AF58191A2D3978B61D572BF8@PGSMSX111.gar.corp.intel.com>
References: <1523375324-27856-1-git-send-email-andy.yeh@intel.com>
 <1523375324-27856-3-git-send-email-andy.yeh@intel.com>
 <20180412085701.GJ20945@w540>
In-Reply-To: <20180412085701.GJ20945@w540>
Content-Language: en-US
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
MIME-Version: 1.0
Sender: linux-media-owner@vger.kernel.org
List-ID: <linux-media.vger.kernel.org>

SGkgSm9jb3BvLCBUb21hc3osDQoNClRoYW5rcyBmb3IgeW91ciBjb21tZW50cy4NClJlc2VuZCBw
YXRjaGVzIHRvIGh0dHBzOi8vcGF0Y2h3b3JrLmxpbnV4dHYub3JnL3BhdGNoLzQ5MDI5Lw0KDQpN
b3N0IG9mIHRoZSBjb21tZW50cyBhcmUgYWRkcmVzc2VkLiBIb3dldmVyIHNvbWUgcmVtYWluIG5v
IGNoYW5nZSBiYXNlZCBvbiB0aGUgZGlzY3Vzc2lvbiB3aXRoIFNha2FyaSBhbmQgVG9tYXN6LiBQ
b3N0ZWQgYXMgYmVsb3cuDQoNCj4JaWYgKE1BWF9SRVRSWSA9PSArK3JldHJ5KSB7DQo+CQlkZXZf
ZXJyKCZjbGllbnQtPmRldiwNCj4JCQkiQ2Fubm90IGRvIHRoZSB3cml0ZSBvcGVyYXRpb24gYmVj
YXVzZSBWQ00gaXMgYnVzeVxuIik7DQoNCkphY29wbzoNCk5pdDogdGhpcyBpcyBvdmVyIDgwIGNv
bHMsIGl0J3MgZmluZSwgYnV0IEkgdGhpbmsgeW91IGNhbiByZWFsbHkNCnNob3J0ZW4gdGhlIGVy
cm9yIG1lc3NhZyB3aXRob3V0IGxvc2luZyBjb250ZXh0Lg0KDQpTYWthcmk6DQpkZXZfd2Fybigp
IG9yIGRldl9pbmZvKCkgbWlnaHQgYmUgbW9yZSBhcHByb3ByaWF0ZSBhY3R1YWxseS4gT3IgZXZl
bg0KZGV2X2RiZygpLiBUaGlzIGlzbid0IGEgZ3JhdmUgcHJvYmxlbTsganVzdCBhIHNpZ24gdGhl
IHVzZXIgc3BhY2UgaXMgdHJ5aW5nDQp0byBtb3ZlIHRoZSBsZW5zIGJlZm9yZSBpdCBoYXMgcmVh
Y2hlZCBpdHMgcHJldmlvdXMgdGFyZ2V0IHBvc2l0aW9uLg0KDQpUb21hc3o6DQpPbiB0aGUgb3Ro
ZXIgaGFuZCwgd2UgcHJpbnQgdGhpcyBvbmx5IGlmIHdlIHJlYWNoIE1BWF9SRVRSWSwgd2hpY2gg
cHJvYmFibHkNCm1lYW5zIHRoYXQgdGhlIGxlbnMgaXMgc3R1Y2sgb3Igc29tZSBvdGhlciB1bmV4
cGVjdGVkIGZhaWx1cmUuDQoNClNha2FyaToNCk1BWF9SRVRSWSBpcyBvbmx5IHRlbiwgc28gSSdk
IGV4cGVjdCB5b3UgY291bGQgaGl0IHRoaXMgaWYgeW91J3JlIHRyaW5nIHRvDQptb3ZlIHRoZSBs
ZW5zIGFnYWluIHZlcnkgcXVpY2tseS4gSXQgdXN1YWxseSB0YWtlcyBzZXZlcmFsIG1zIChidXQg
Y291bGQNCndlbGwgYmUgbW9yZSB0aGFuIDEwIG1zKSB0byByZWFjaCB0aGUgdGFyZ2V0IHBvc2l0
aW9uLiBUaGlzIGRlcGVuZHMgb24gdGhlDQpsZW5zIGFuZCB0aGUgZHJpdmVyLCB0b28sIGFuZCBJ
IGRvbid0IGtub3cgdGhlIHByb3BlcnRpZXMgb2YgdGhpcyBkcml2ZXINCihub3IgdGhlIGxlbnMp
Lg0KDQoNCj4gdXNsZWVwX3JhbmdlKERXOTgwN19DVFJMX0RFTEFZX1VTLCBEVzk4MDdfQ1RSTF9E
RUxBWV9VUyArIDEwKTsNCg0KSmFjb3BvOg0KbW1tLCBJIHdvbmRlciBpZiBhIHNsZWVwIHJhbmdl
IG9mIDEwdXNlY3MgaXMgcmVhbGx5IGEgc3RyaWN0DQpyZXF1aXJlbWVudC4gSGF2ZSBhIGxvb2sg
YXQgRG9jdW1lbnRhdGlvbi90aW1lcnMvdGltZXJzLWhvd3RvLnR4dC4NCldpdGggc3VjaCBhIHNt
YWxsIHJhbmdlIHlvdSdyZSBsaWtlbHkgZmlyZSBzb21lIHVucmVxdWlyZWQgaW50ZXJydXB0Lg0K
DQpJZiBJIGdvdCB0aGlzIHJpZ2h0LCBoZXJlIHlvdSdyZSBqdXN0IHBvbGxpbmcgYSByZWdpc3Rl
ciBldmVyeQ0KMW1zZWMtaXNoICh1c2xlZXBfcmFuZ2UoMTAwMCwgMTAxMCkpLiBJIHRoaW5rIHlv
dSBjYW4gZW5sYXJnZSB0aGUNCnJhbmdlIHNhZmVseSAobWF5YmUgbG93ZXJpbmcgdGhlIG51bWJl
ciBvZiByZXRyaWVzIGlmIHlvdSB3aXNoIHRvKSBhbmQNCmdpdmUgbW9yZSBzcGFjZSB0byBjb2Fs
ZXNjZSB5b3VyIHdha2V1cCB3aXRoIG90aGVycy4NCg0KV2hhdCBpcyBhIGdvb2QgcmFuZ2U/IEdv
b2QgcXVlc3Rpb24uIEhvdyBlZmZlY3RpdmUgaXMgdGhpcyB0byBoYXZlDQp5b3VyIHdha2V1cCBj
b2FsZXNjZWQgd2l0aCBvdGhlcnM/IEkgdGhpbmsgdGhpcyBncmVhdGx5IGRlcGVuZHMgb24gdGhl
DQpzeXN0ZW0geW91J3JlIHJ1bm5pbmcgb24gYW5kIGl0cyBsb2FkIGF0IHRoaXMgc3BlY2lmaWMg
dGltZS4gU28gSQ0Kd291bGQgcmVwbHkgdG8gYm90aCBxdWVzdGlvbnMgd2l0aCAibm90IHN1cmUi
LCBidXQgSSBsZXQgeW91IGNvbnNpZGVyDQppZiB5b3UgY291bGQgZW5sYXJnZSB5b3VyIHJhbmdl
IHRvIHNheSAxMDAwLTE1MDAgdXNlYyBhdCBsZWFzdC4NCg0KU2FrYXJpOg0KSWYgdGhlIHVzZXIg
aXMgdHJ5aW5nIHRvIHRlbGwgd2hlcmUgdG8gbW92ZSB0aGUgbGVucyBuZXh0LCBubyB0aW1lIHNo
b3VsZA0KYmUgd2FzdGVkIG9uIHdhaXRpbmcuIEl0J2QgcGVyaGFwcyByYXRoZXIgbWFrZSBzZW5z
ZSB0byByZXR1cm4gYW4gZXJyb3INCigtRUJVU1kpOiB0aGUgdXNlciBhcHBsaWNhdGlvbiAoYXMg
d2VsbCBhcyB0aGUgYXBwbGljYXRpb24gZGV2ZWxvcGVyKSB3b3VsZA0Ka25vdyBhYm91dCB0aGUg
YXR0ZW1wdCB0byBtb3ZlIHRoZSBsZW5zIHRvbyBmYXN0IGFuZCBjb3VsZCB0YWtlIGFuIGluZm9y
bWVkDQpkZWNpc2lvbiBvbiB3aGF0IHRvIGRvIG5leHQuIFRoaXMgY291bGQgaW5jbHVkZSBjaGFu
Z2luZyB0aGUgdGFyZ2V0DQpwb3NpdGlvbiwgd2FpdGluZyBtb3JlIG9yIGNoYW5naW5nIHRoZSBw
cm9ncmFtIHRvIGFkanVzdCB0aGUgM0EgbG9vcA0KYmVoYXZpb3VyLg0KDQpUb21hc3o6DQpBY3R1
YWxseSwgc2hvdWxkbid0IHdlIHdhaXQgZm9yIHRoZSBsZW5zIHRvIGZpbmlzaCBtb3ZpbmcgYWZ0
ZXIgd2Ugc2V0IHRoZQ0KcG9zaXRpb24/IElmIHdlIGRvbid0IGRvIGl0LCB3ZSByaXNrIHRoZSB1
c2Vyc3BhY2UgcmVxdWVzdGluZyBhIGNhcHR1cmUNCndpdGggdGhlIGxlbnMgc3RpbGwgbW92aW5n
Lg0KDQpJZiAidGltZSB3YXN0ZWQgb24gd2FpdGluZyIgaXMgYSBjb25jZXJuIGhlcmUsIHVzZXJz
cGFjZSBjb3VsZCBhcyB3ZWxsIGp1c3QNCmhhdmUgYSBzZXBhcmF0ZSB0aHJlYWQgZm9yIGNvbnRy
b2xsaW5nIHRoZSBsZW5zIChhcyBzb21ldGhpbmcgdGhhdCBpcw0KZXhwZWN0ZWQgdG8gdGFrZSB0
aW1lIGR1ZSB0byBwaHlzaWNhbCBsaW1pdGF0aW9ucykuDQoNClNha2FyaToNCkZvciB0aGF0IHB1
cnBvc2UgSSdkIGFkZCBhIG5ldyBjb250cm9sLiBUaGUgdXNlciBwcm9jZXNzIHNob3VsZG4ndCB3
YWl0IGluDQp0aGUga2VybmVsIGZvciBqdXN0IHRoZSBzYWtlIG9mIHRoaXMuIEluIG9yZGVyIHRv
IG1lYW5pbmdmdWxseSBjb250cm9sIHRoZQ0KZm9jdXNzaW5nIHByb2Nlc3MsIHRoZSB1c2VyIHNw
YWNlIHdvdWxkIGhhdmUgdG8ga25vdyBzb21lIHByb3BlcnRpZXMgb2YgdGhlDQpsZW5zIGFueXdh
eSwgc28gdGhpcyBpbmZvcm1hdGlvbiB3b3VsZCBwcmltYXJpbHkgYmUgdXNlZnVsIGZvciBjaGVj
a2luZw0KdGhpbmdzIGFyZSB3b3JraW5nIG91dCBhcyBleHBlY3RlZC4NCg0KDQoNClJlZ2FyZHMs
IEFuZHkNCg0KDQotLS0tLU9yaWdpbmFsIE1lc3NhZ2UtLS0tLQ0KRnJvbTogamFjb3BvIG1vbmRp
IFttYWlsdG86amFjb3BvQGptb25kaS5vcmddIA0KU2VudDogVGh1cnNkYXksIEFwcmlsIDEyLCAy
MDE4IDQ6NTcgUE0NClRvOiBZZWgsIEFuZHkgPGFuZHkueWVoQGludGVsLmNvbT4NCkNjOiBsaW51
eC1tZWRpYUB2Z2VyLmtlcm5lbC5vcmc7IHNha2FyaS5haWx1c0BsaW51eC5pbnRlbC5jb207IGRl
dmljZXRyZWVAdmdlci5rZXJuZWwub3JnOyB0ZmlnYUBjaHJvbWl1bS5vcmc7IENoaWFuZywgQWxh
blggPGFsYW54LmNoaWFuZ0BpbnRlbC5jb20+DQpTdWJqZWN0OiBSZTogW1JFU0VORCBQQVRDSCB2
NyAyLzJdIG1lZGlhOiBkdzk4MDc6IEFkZCBkdzk4MDcgdmNtIGRyaXZlcg0KDQpISSBBbmR5LA0K
ICAgdGhhbmtzIGZvciBhZGRyZXNzaW5nIG15IGNvbW1lbnRzIG9uIHY2Lg0KU29tZSBtb3JlIHF1
ZXN0aW9ucyBiZWxvdy4NCg0KT24gVHVlLCBBcHIgMTAsIDIwMTggYXQgMTE6NDg6NDRQTSArMDgw
MCwgQW5keSBZZWggd3JvdGU6DQo+IEZyb206IEFsYW4gQ2hpYW5nIDxhbGFueC5jaGlhbmdAaW50
ZWwuY29tPg0KPg0KPiBEVzk4MDcgaXMgYSAxMCBiaXQgREFDIGZyb20gRG9uZ3dvb24sIGRlc2ln
bmVkIGZvciBsaW5lYXIgY29udHJvbCBvZiANCj4gdm9pY2UgY29pbCBtb3Rvci4NCj4NCj4gVGhp
cyBkcml2ZXIgY3JlYXRlcyBhIFY0TDIgc3ViZGV2aWNlIGFuZCBwcm92aWRlcyBjb250cm9sIHRv
IHNldCB0aGUgDQo+IGRlc2lyZWQgZm9jdXMuDQo+DQo+IFNpZ25lZC1vZmYtYnk6IEFuZHkgWWVo
IDxhbmR5LnllaEBpbnRlbC5jb20+DQo+IC0tLQ0KPiBzaW5jZSB2MToNCj4gLSBjaGFuZ2VkIGF1
dGhvci4NCj4gc2luY2UgdjI6DQo+IC0gYWRkcmVzc2VkIG91dHN0YW5kaW5nIGNvbW1lbnRzLg0K
PiAtIGVuYWJsZWQgc2VxdWVudGlhbCB3cml0ZSB0byB1cGRhdGUgMiByZWdpc3RlcnMgaW4gYSBz
aW5nbGUgdHJhbnNhY3Rpb24uDQo+IHNpbmNlIHYzOg0KPiAtIGFkZHJlc3NlZCBjb21tZW50cyBm
b3IgdjMuDQo+IC0gUmVtb3ZlIHJlZHVuZGFudCBjb2RlcyBhbmQgZGVjbGFyZSBzb21lIHZhcmlh
YmxlcyBhcyBjb25zdGFudCB2YXJpYWJsZS4NCj4gLSBzZXBhcmF0ZSBEVCBiaW5kaW5nIHRvIGFu
b3RoZXIgcGF0Y2ggc2luY2UgdjQ6DQo+IC0gc2VudCBwYXRjaHNldCBpbmNsdWRlZCBEVCBiaW5k
aW5nIHdpdGggY292ZXIgcGFnZSBzaW5jZSB2NjoNCj4gLSBjaGFuZ2UgdGhlIHJldHVybiBjb2Rl
IG9mIGkyY19jaGVjaw0KPiAtIGZpeCBsb25nIGNvbHMgZXhjZWVkIDgwIGNoYXJzDQo+IC0gcmVt
b3ZlICNkZWZpbmUgRFc5ODA3X05BTUUgc2luY2Ugb25seSB1c2VkIG9uY2UNCj4NCj4gIE1BSU5U
QUlORVJTICAgICAgICAgICAgICAgIHwgICA3ICsNCj4gIGRyaXZlcnMvbWVkaWEvaTJjL0tjb25m
aWcgIHwgIDEwICsrDQo+ICBkcml2ZXJzL21lZGlhL2kyYy9NYWtlZmlsZSB8ICAgMSArDQo+ICBk
cml2ZXJzL21lZGlhL2kyYy9kdzk4MDcuYyB8IDMzNSANCj4gKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrDQo+ICA0IGZpbGVzIGNoYW5nZWQsIDM1MyBpbnNlcnRp
b25zKCspDQo+ICBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9tZWRpYS9pMmMvZHc5ODA3LmMN
Cj4NCj4gZGlmZiAtLWdpdCBhL01BSU5UQUlORVJTIGIvTUFJTlRBSU5FUlMgaW5kZXggODQ1ZmMy
NS4uYTMzOWJiNSAxMDA2NDQNCj4gLS0tIGEvTUFJTlRBSU5FUlMNCj4gKysrIGIvTUFJTlRBSU5F
UlMNCj4gQEAgLTQzODUsNiArNDM4NSwxMyBAQCBUOglnaXQgZ2l0Oi8vbGludXh0di5vcmcvbWVk
aWFfdHJlZS5naXQNCj4gIFM6CU1haW50YWluZWQNCj4gIEY6CWRyaXZlcnMvbWVkaWEvaTJjL2R3
OTcxNC5jDQo+DQo+ICtET05HV09PTiBEVzk4MDcgTEVOUyBWT0lDRSBDT0lMIERSSVZFUg0KPiAr
TToJU2FrYXJpIEFpbHVzIDxzYWthcmkuYWlsdXNAbGludXguaW50ZWwuY29tPg0KPiArTDoJbGlu
dXgtbWVkaWFAdmdlci5rZXJuZWwub3JnDQo+ICtUOglnaXQgZ2l0Oi8vbGludXh0di5vcmcvbWVk
aWFfdHJlZS5naXQNCj4gK1M6CU1haW50YWluZWQNCj4gK0Y6CWRyaXZlcnMvbWVkaWEvaTJjL2R3
OTgwNy5jDQo+ICsNCj4gIERPVUJMRVRBTEsgRFJJVkVSDQo+ICBNOgkiSmFtZXMgUi4gVmFuIFph
bmR0IiA8anJ2QHZhbnphbmR0Lm12LmNvbT4NCj4gIEw6CWJsaW51eC1saXN0QHJlZGhhdC5jb20N
Cj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvbWVkaWEvaTJjL0tjb25maWcgYi9kcml2ZXJzL21lZGlh
L2kyYy9LY29uZmlnIA0KPiBpbmRleCBjYjVkN2ZmLi5mZDAxODQyIDEwMDY0NA0KPiAtLS0gYS9k
cml2ZXJzL21lZGlhL2kyYy9LY29uZmlnDQo+ICsrKyBiL2RyaXZlcnMvbWVkaWEvaTJjL0tjb25m
aWcNCj4gQEAgLTMyNSw2ICszMjUsMTYgQEAgY29uZmlnIFZJREVPX0RXOTcxNA0KPiAgCSAgY2Fw
YWJpbGl0eS4gVGhpcyBpcyBkZXNpZ25lZCBmb3IgbGluZWFyIGNvbnRyb2wgb2YNCj4gIAkgIHZv
aWNlIGNvaWwgbW90b3JzLCBjb250cm9sbGVkIHZpYSBJMkMgc2VyaWFsIGludGVyZmFjZS4NCj4N
Cj4gK2NvbmZpZyBWSURFT19EVzk4MDcNCj4gKwl0cmlzdGF0ZSAiRFc5ODA3IGxlbnMgdm9pY2Ug
Y29pbCBzdXBwb3J0Ig0KPiArCWRlcGVuZHMgb24gSTJDICYmIFZJREVPX1Y0TDIgJiYgTUVESUFf
Q09OVFJPTExFUg0KPiArCWRlcGVuZHMgb24gVklERU9fVjRMMl9TVUJERVZfQVBJDQo+ICsJLS0t
aGVscC0tLQ0KDQppaXJjIGNoZWNrcGF0Y2ggd2FybmVkIG1lIG11bHRpcGxlIHRpbWVzIHRvIHBy
ZWZlciAnaGVscCcgb24gJy0tLWhlbHAtLS0nIGZvciBuZXdseSBpbnRyb2R1Y2VkIHN5bWJvbHMu
IENvdWxkIHlvdSBjaGVjayBwbGVhc2UgKG1heWJlIHdpdGggdXNpbmcgdGhlIC0tc3RyaWN0IG9w
dGlvbj8pDQoNCj4gKwkgIFRoaXMgaXMgYSBkcml2ZXIgZm9yIHRoZSBEVzk4MDcgY2FtZXJhIGxl
bnMgdm9pY2UgY29pbC4NCj4gKwkgIERXOTgwNyBpcyBhIDEwIGJpdCBEQUMgd2l0aCAxMDBtQSBv
dXRwdXQgY3VycmVudCBzaW5rDQo+ICsJICBjYXBhYmlsaXR5LiBUaGlzIGlzIGRlc2lnbmVkIGZv
ciBsaW5lYXIgY29udHJvbCBvZg0KPiArCSAgdm9pY2UgY29pbCBtb3RvcnMsIGNvbnRyb2xsZWQg
dmlhIEkyQyBzZXJpYWwgaW50ZXJmYWNlLg0KPiArDQo+ICBjb25maWcgVklERU9fU0FBNzExMA0K
PiAgCXRyaXN0YXRlICJQaGlsaXBzIFNBQTcxMTAgdmlkZW8gZGVjb2RlciINCj4gIAlkZXBlbmRz
IG9uIFZJREVPX1Y0TDIgJiYgSTJDDQo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL21lZGlhL2kyYy9N
YWtlZmlsZSBiL2RyaXZlcnMvbWVkaWEvaTJjL01ha2VmaWxlIA0KPiBpbmRleCA1NDhhOWVmLi4x
YjYyNjM5IDEwMDY0NA0KPiAtLS0gYS9kcml2ZXJzL21lZGlhL2kyYy9NYWtlZmlsZQ0KPiArKysg
Yi9kcml2ZXJzL21lZGlhL2kyYy9NYWtlZmlsZQ0KPiBAQCAtMjMsNiArMjMsNyBAQCBvYmotJChD
T05GSUdfVklERU9fU0FBNzE4NSkgKz0gc2FhNzE4NS5vDQo+ICBvYmotJChDT05GSUdfVklERU9f
U0FBNjc1MkhTKSArPSBzYWE2NzUyaHMubw0KPiAgb2JqLSQoQ09ORklHX1ZJREVPX0FENTgyMCkg
ICs9IGFkNTgyMC5vDQo+ICBvYmotJChDT05GSUdfVklERU9fRFc5NzE0KSAgKz0gZHc5NzE0Lm8N
Cj4gK29iai0kKENPTkZJR19WSURFT19EVzk4MDcpICArPSBkdzk4MDcubw0KPiAgb2JqLSQoQ09O
RklHX1ZJREVPX0FEVjcxNzApICs9IGFkdjcxNzAubw0KPiAgb2JqLSQoQ09ORklHX1ZJREVPX0FE
VjcxNzUpICs9IGFkdjcxNzUubw0KPiAgb2JqLSQoQ09ORklHX1ZJREVPX0FEVjcxODApICs9IGFk
djcxODAubyBkaWZmIC0tZ2l0IA0KPiBhL2RyaXZlcnMvbWVkaWEvaTJjL2R3OTgwNy5jIGIvZHJp
dmVycy9tZWRpYS9pMmMvZHc5ODA3LmMgbmV3IGZpbGUgDQo+IG1vZGUgMTAwNjQ0IGluZGV4IDAw
MDAwMDAuLjA2MmMzMGYNCj4gLS0tIC9kZXYvbnVsbA0KPiArKysgYi9kcml2ZXJzL21lZGlhL2ky
Yy9kdzk4MDcuYw0KPiBAQCAtMCwwICsxLDMzNSBAQA0KPiArLy8gU1BEWC1MaWNlbnNlLUlkZW50
aWZpZXI6IEdQTC0yLjANCj4gKy8vIENvcHlyaWdodCAoQykgMjAxOCBJbnRlbCBDb3Jwb3JhdGlv
bg0KPiArDQo+ICsjaW5jbHVkZSA8bGludXgvYWNwaS5oPg0KPiArI2luY2x1ZGUgPGxpbnV4L2Rl
bGF5Lmg+DQo+ICsjaW5jbHVkZSA8bGludXgvaTJjLmg+DQo+ICsjaW5jbHVkZSA8bGludXgvbW9k
dWxlLmg+DQo+ICsjaW5jbHVkZSA8bGludXgvcG1fcnVudGltZS5oPg0KPiArI2luY2x1ZGUgPG1l
ZGlhL3Y0bDItY3RybHMuaD4NCj4gKyNpbmNsdWRlIDxtZWRpYS92NGwyLWRldmljZS5oPg0KPiAr
DQo+ICsjZGVmaW5lIERXOTgwN19NQVhfRk9DVVNfUE9TCTEwMjMNCj4gKy8qDQo+ICsgKiBUaGlz
IHNldHMgdGhlIG1pbmltdW0gZ3JhbnVsYXJpdHkgZm9yIHRoZSBmb2N1cyBwb3NpdGlvbnMuDQo+
ICsgKiBBIHZhbHVlIG9mIDEgZ2l2ZXMgbWF4aW11bSBhY2N1cmFjeSBmb3IgYSBkZXNpcmVkIGZv
Y3VzIHBvc2l0aW9uLg0KPiArICovDQo+ICsjZGVmaW5lIERXOTgwN19GT0NVU19TVEVQUwkxDQo+
ICsvKg0KPiArICogVGhpcyBhY3RzIGFzIHRoZSBtaW5pbXVtIGdyYW51bGFyaXR5IG9mIGxlbnMg
bW92ZW1lbnQuDQo+ICsgKiBLZWVwIHRoaXMgdmFsdWUgcG93ZXIgb2YgMiwgc28gdGhlIGNvbnRy
b2wgc3RlcHMgY2FuIGJlDQo+ICsgKiB1bmlmb3JtbHkgYWRqdXN0ZWQgZm9yIGdyYWR1YWwgbGVu
cyBtb3ZlbWVudCwgd2l0aCBkZXNpcmVkDQo+ICsgKiBudW1iZXIgb2YgY29udHJvbCBzdGVwcy4N
Cj4gKyAqLw0KPiArI2RlZmluZSBEVzk4MDdfQ1RSTF9TVEVQUwkxNg0KPiArI2RlZmluZSBEVzk4
MDdfQ1RSTF9ERUxBWV9VUwkxMDAwDQo+ICsNCj4gKyNkZWZpbmUgRFc5ODA3X0NUTF9BRERSCQkw
eDAyDQo+ICsvKg0KPiArICogRFc5ODA3IHNlcGFyYXRlcyB0d28gcmVnaXN0ZXJzIHRvIGNvbnRy
b2wgdGhlIFZDTSBwb3NpdGlvbi4NCj4gKyAqIE9uZSBmb3IgTVNCIHZhbHVlLCBhbm90aGVyIGlz
IExTQiB2YWx1ZS4NCj4gKyAqLw0KPiArI2RlZmluZSBEVzk4MDdfTVNCX0FERFIJCTB4MDMNCj4g
KyNkZWZpbmUgRFc5ODA3X0xTQl9BRERSCQkweDA0DQo+ICsjZGVmaW5lIERXOTgwN19TVEFUVVNf
QUREUgkweDA1DQo+ICsjZGVmaW5lIERXOTgwN19NT0RFX0FERFIJMHgwNg0KPiArI2RlZmluZSBE
Vzk4MDdfUkVTT05BTkNFX0FERFIJMHgwNw0KPiArDQo+ICsjZGVmaW5lIE1BWF9SRVRSWQkJMTAN
Cj4gKw0KPiArc3RydWN0IGR3OTgwN19kZXZpY2Ugew0KPiArCXN0cnVjdCB2NGwyX2N0cmxfaGFu
ZGxlciBjdHJsc192Y207DQo+ICsJc3RydWN0IHY0bDJfc3ViZGV2IHNkOw0KPiArCXUxNiBjdXJy
ZW50X3ZhbDsNCj4gK307DQo+ICsNCj4gK3N0YXRpYyBpbmxpbmUgc3RydWN0IGR3OTgwN19kZXZp
Y2UgKnNkX3RvX2R3OTgwN192Y20oDQo+ICsJCQkJCXN0cnVjdCB2NGwyX3N1YmRldiAqc3ViZGV2
KQ0KPiArew0KPiArCXJldHVybiBjb250YWluZXJfb2Yoc3ViZGV2LCBzdHJ1Y3QgZHc5ODA3X2Rl
dmljZSwgc2QpOyB9DQo+ICsNCj4gK3N0YXRpYyBpbnQgZHc5ODA3X2kyY19jaGVjayhzdHJ1Y3Qg
aTJjX2NsaWVudCAqY2xpZW50KSB7DQo+ICsJY29uc3QgY2hhciBzdGF0dXNfYWRkciA9IERXOTgw
N19TVEFUVVNfQUREUjsNCj4gKwljaGFyIHN0YXR1c19yZXN1bHQ7DQo+ICsJaW50IHJldDsNCj4g
Kw0KPiArCXJldCA9IGkyY19tYXN0ZXJfc2VuZChjbGllbnQsIChjb25zdCBjaGFyICopJnN0YXR1
c19hZGRyLA0KPiArCQlzaXplb2Yoc3RhdHVzX2FkZHIpKTsNCg0KPiBBcyByZXBvcnRlZCBieSBj
aGVja3BhdGNoLCBwbGVhc2UgZml4IGFsaWduZW1lbnQgdG8gdGhlIGZpcnN0IG9wZW4gYnJhY2Us
IGFuZCBhcyBwZXIgVG9tYXN6IGNvbW1lbnQgcmVtb3ZlIHRoZSBjYXN0DQoNCkRvbmUuDQoNCj4g
KwlpZiAocmV0IDwgMCkgew0KPiArCQlkZXZfZXJyKCZjbGllbnQtPmRldiwgIkkyQyB3cml0ZSBT
VEFUVVMgYWRkcmVzcyBmYWlsIHJldCA9ICVkXG4iLA0KPiArCQkJcmV0KTsNCj4gKwkJcmV0dXJu
IHJldDsNCj4gKwl9DQo+ICsNCj4gKwlyZXQgPSBpMmNfbWFzdGVyX3JlY3YoY2xpZW50LCAoY2hh
ciAqKSZzdGF0dXNfcmVzdWx0LA0KPiArCQlzaXplb2Yoc3RhdHVzX3Jlc3VsdCkpOw0KDQo+IEFs
aWduIHRoZSBsYXN0IGFyZ3VtZW50IHRvIHRoZSBmaXJzdCBvcGVuIGJyYWNlLg0KDQpEb25lDQoN
CglyZXQgPSBpMmNfbWFzdGVyX3JlY3YoY2xpZW50LCAoY2hhciAqKSZzdGF0dXNfcmVzdWx0LA0K
CQkgICAgICAgICAgICAgIHNpemVvZihzdGF0dXNfcmVzdWx0KSk7DQoNCj4gKwlpZiAocmV0ICE9
IHNpemVvZihzdGF0dXNfcmVzdWx0KSkgew0KDQo+IE15IGNvbW1lbnQgb24gaTJjIGZ1bmN0aW9u
cyByZXR1cm4gdmFsdWVzIGFwcGxpZXMgdG8gaTJjX21hc3Rlcl9yZWN2KCkgYXMgd2VsbC4gUGxl
YXNlIGp1c3QgY2hlY2sgZm9yIChyZXQgPCAwKSBoZXJlDQoNCkRvbmUNCg0KPiArCQlkZXZfZXJy
KCZjbGllbnQtPmRldiwgIkkyQyByZWFkIFNUQVRVUyB2YWx1ZSBmYWlsIHJldD0lZFxuIiwNCg0K
PiBUaGUgcHJldmlvdXMgZXJycm9yIG1lc3NhZ2UgaGFzIHNwYWNlcyBpbiBiZXR3ZWVuICdyZXQn
LCc9JyBhbmQgJyVkJy4NCj5QbGVhc2UgYmUgY29uc2lzdGVudC4NCg0KRG9uZQ0KDQo+ICsJCQly
ZXQpOw0KPiArCQlyZXR1cm4gcmV0Ow0KPiArCX0NCj4gKw0KPiArCXJldHVybiBzdGF0dXNfcmVz
dWx0Ow0KPiArfQ0KPiArDQo+ICtzdGF0aWMgaW50IGR3OTgwN19zZXRfZGFjKHN0cnVjdCBpMmNf
Y2xpZW50ICpjbGllbnQsIHUxNiBkYXRhKSB7DQo+ICsJY29uc3QgY2hhciB0eF9kYXRhWzNdID0g
ew0KPiArCQlEVzk4MDdfTVNCX0FERFIsICgoZGF0YSA+PiA4KSAmIDB4MDMpLCAoZGF0YSAmIDB4
ZmYpDQo+ICsJfTsNCj4gKwlpbnQgcmV0LCByZXRyeSA9IDA7DQo+ICsNCj4gKwkvKg0KPiArCSAq
IEFjY29yZGluZyB0byB0aGUgZGF0YXNoZWV0LCBuZWVkIHRvIGNoZWNrIHRoZSBidXMgc3RhdHVz
IGJlZm9yZSB3ZQ0KPiArCSAqIHdyaXRlIFZDTSBwb3NpdGlvbi4gVGhpcyBlbnN1cmUgdGhhdCB3
ZSByZWFsbHkgd3JpdGUgdGhlIHZhbHVlDQo+ICsJICogaW50byB0aGUgcmVnaXN0ZXINCj4gKwkg
Ki8NCj4gKwl3aGlsZSAoKHJldCA9IGR3OTgwN19pMmNfY2hlY2soY2xpZW50KSkgIT0gMCkgew0K
DQo+IFRvbWFzejogDQo+IE9uZSBjb3VsZCB1c2UgcmVhZHhfcG9sbF90aW1lb3V0KCkgaGVyZToN
Cg0KPiBpbnQgdmFsOw0KDQo+IHJldCA9IHJlYWR4X3BvbGxfdGltZW91dChkdzk4MDdfaTJjX2No
ZWNrLCBjbGllbnQsIHZhbCwgIXZhbCwNCj4gICAgICAgICAgICAgICAgICAgICAgICAgICBEVzk4
MDdfQ1RSTF9ERUxBWV9VUywNCj4gICAgICAgICAgICAgICAgICAgICAgICAgICBNQVhfUkVUUlkg
KiBEVzk4MDdfQ1RSTF9ERUxBWV9VUyk7DQoNCj4gaWYgKHJldCkgew0KPiAgICAgICAgICBkZXZf
ZXJyKCZjbGllbnQtPmRldiwNCj4gICAgICAgICAgICAgICAgICAiQ2Fubm90IGRvIHRoZSB3cml0
ZSBvcGVyYXRpb24gYmVjYXVzZSBWQ00gaXMgYnVzeVxuIik7DQo+ICAgICAgICAgIHJldHVybiAt
RUlPOw0KPiB9DQoNCkRvbmUsDQoNCj4gKwkJaWYgKHJldCA8IDApDQo+ICsJCQlyZXR1cm4gcmV0
Ow0KPiArDQo+ICsJCWlmIChNQVhfUkVUUlkgPT0gKytyZXRyeSkgew0KPiArCQkJZGV2X2Vycigm
Y2xpZW50LT5kZXYsDQo+ICsJCQkJIkNhbm5vdCBkbyB0aGUgd3JpdGUgb3BlcmF0aW9uIGJlY2F1
c2UgVkNNIGlzIGJ1c3lcbiIpOw0KDQpOaXQ6IHRoaXMgaXMgb3ZlciA4MCBjb2xzLCBpdCdzIGZp
bmUsIGJ1dCBJIHRoaW5rIHlvdSBjYW4gcmVhbGx5IHNob3J0ZW4gdGhlIGVycm9yIG1lc3NhZyB3
aXRob3V0IGxvc2luZyBjb250ZXh0Lg0KDQo+ICsJCQlyZXR1cm4gLUVJTzsNCj4gKwkJfQ0KPiAr
CQl1c2xlZXBfcmFuZ2UoRFc5ODA3X0NUUkxfREVMQVlfVVMsIERXOTgwN19DVFJMX0RFTEFZX1VT
ICsgMTApOw0KDQptbW0sIEkgd29uZGVyIGlmIGEgc2xlZXAgcmFuZ2Ugb2YgMTB1c2VjcyBpcyBy
ZWFsbHkgYSBzdHJpY3QgcmVxdWlyZW1lbnQuIEhhdmUgYSBsb29rIGF0IERvY3VtZW50YXRpb24v
dGltZXJzL3RpbWVycy1ob3d0by50eHQuDQpXaXRoIHN1Y2ggYSBzbWFsbCByYW5nZSB5b3UncmUg
bGlrZWx5IGZpcmUgc29tZSB1bnJlcXVpcmVkIGludGVycnVwdC4NCg0KSWYgSSBnb3QgdGhpcyBy
aWdodCwgaGVyZSB5b3UncmUganVzdCBwb2xsaW5nIGEgcmVnaXN0ZXIgZXZlcnkgMW1zZWMtaXNo
ICh1c2xlZXBfcmFuZ2UoMTAwMCwgMTAxMCkpLiBJIHRoaW5rIHlvdSBjYW4gZW5sYXJnZSB0aGUg
cmFuZ2Ugc2FmZWx5IChtYXliZSBsb3dlcmluZyB0aGUgbnVtYmVyIG9mIHJldHJpZXMgaWYgeW91
IHdpc2ggdG8pIGFuZCBnaXZlIG1vcmUgc3BhY2UgdG8gY29hbGVzY2UgeW91ciB3YWtldXAgd2l0
aCBvdGhlcnMuDQoNCldoYXQgaXMgYSBnb29kIHJhbmdlPyBHb29kIHF1ZXN0aW9uLiBIb3cgZWZm
ZWN0aXZlIGlzIHRoaXMgdG8gaGF2ZSB5b3VyIHdha2V1cCBjb2FsZXNjZWQgd2l0aCBvdGhlcnM/
IEkgdGhpbmsgdGhpcyBncmVhdGx5IGRlcGVuZHMgb24gdGhlIHN5c3RlbSB5b3UncmUgcnVubmlu
ZyBvbiBhbmQgaXRzIGxvYWQgYXQgdGhpcyBzcGVjaWZpYyB0aW1lLiBTbyBJIHdvdWxkIHJlcGx5
IHRvIGJvdGggcXVlc3Rpb25zIHdpdGggIm5vdCBzdXJlIiwgYnV0IEkgbGV0IHlvdSBjb25zaWRl
ciBpZiB5b3UgY291bGQgZW5sYXJnZSB5b3VyIHJhbmdlIHRvIHNheSAxMDAwLTE1MDAgdXNlYyBh
dCBsZWFzdC4NCg0KDQo+ICsJfQ0KPiArDQo+ICsJLyogV3JpdGUgVkNNIHBvc2l0aW9uIHRvIHJl
Z2lzdGVycyAqLw0KPiArCXJldCA9IGkyY19tYXN0ZXJfc2VuZChjbGllbnQsIHR4X2RhdGEsIHNp
emVvZih0eF9kYXRhKSk7DQo+ICsJaWYgKHJldCAhPSBzaXplb2YodHhfZGF0YSkpIHsNCg0KPiBB
cyBwZXIgcHJldmlvdXMgY29tbWVudHMsIGNoZWNrIGZvciByZXQgPCAwDQoNCkRvbmUNCg0KPiAr
CQlpZiAocmV0IDwgMCkgew0KPiArCQkJZGV2X2VycigmY2xpZW50LT5kZXYsDQo+ICsJCQkJIkky
QyB3cml0ZSBNU0IgZmFpbCByZXQ9JWRcbiIsIHJldCk7DQo+ICsJCQlyZXR1cm4gcmV0Ow0KPiAr
CQl9IGVsc2Ugew0KDQo+IFRoZXJlIGNhbm5vdCBiZSBhbnkgZWxzZSBjYXNlIGhlcmUgYXMgaTJj
X21hc3Rlcl9zZW5kIHJldHVybnMgPCAwICBvcg0KPiBzaXplb2YodHhfZGF0YSkgb25seS4NCg0K
RG9uZQ0KDQo+ICsJCQlkZXZfZXJyKCZjbGllbnQtPmRldiwgIkkyQyB3cml0ZSBNU0IgZmFpbCwg
dHJhbnNtaXNzaW9uIHNpemUgaXMgbm90IGVxdWFsIHRoZSBzaXplIGV4cGVjdGVkXG4iKTsNCj4g
KwkJCXJldHVybiAtRUlPOw0KDQo+IEkgYmVsaWV2ZSB0aGlzIGNhbid0IGhhcHBlbiwgYm90aCBi
eSBsb29raW5nIGF0IGltcGxlbWVudGF0aW9uIG9mDQo+IGkyY19tYXN0ZXJfc2VuZCgpIGFuZCBl
eGlzdGluZyBkcml2ZXJzIGNoZWNraW5nIG9ubHkgZm9yIChyZXQgPCAwKS4NCg0KRG9uZQ0KDQo+
ICsJCX0NCj4gKwl9DQo+ICsNCj4gKwlyZXR1cm4gMDsNCj4gK30NCj4gKw0KPiArc3RhdGljIGlu
dCBkdzk4MDdfc2V0X2N0cmwoc3RydWN0IHY0bDJfY3RybCAqY3RybCkgew0KPiArCXN0cnVjdCBk
dzk4MDdfZGV2aWNlICpkZXZfdmNtID0gY29udGFpbmVyX29mKGN0cmwtPmhhbmRsZXIsDQo+ICsJ
CXN0cnVjdCBkdzk4MDdfZGV2aWNlLCBjdHJsc192Y20pOw0KPiArDQo+ICsJaWYgKGN0cmwtPmlk
ID09IFY0TDJfQ0lEX0ZPQ1VTX0FCU09MVVRFKSB7DQo+ICsJCXN0cnVjdCBpMmNfY2xpZW50ICpj
bGllbnQgPSB2NGwyX2dldF9zdWJkZXZkYXRhKCZkZXZfdmNtLT5zZCk7DQo+ICsNCj4gKwkJZGV2
X3ZjbS0+Y3VycmVudF92YWwgPSBjdHJsLT52YWw7DQo+ICsJCXJldHVybiBkdzk4MDdfc2V0X2Rh
YyhjbGllbnQsIGN0cmwtPnZhbCk7DQo+ICsJfQ0KPiArDQo+ICsJcmV0dXJuIC1FSU5WQUw7DQo+
ICt9DQo+ICsNCj4gK3N0YXRpYyBjb25zdCBzdHJ1Y3QgdjRsMl9jdHJsX29wcyBkdzk4MDdfdmNt
X2N0cmxfb3BzID0gew0KPiArCS5zX2N0cmwgPSBkdzk4MDdfc2V0X2N0cmwsDQo+ICt9Ow0KPiAr
DQo+ICtzdGF0aWMgaW50IGR3OTgwN19vcGVuKHN0cnVjdCB2NGwyX3N1YmRldiAqc2QsIHN0cnVj
dCB2NGwyX3N1YmRldl9maCANCj4gKypmaCkgew0KPiArCWludCBydmFsOw0KPiArDQo+ICsJcnZh
bCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoc2QtPmRldik7DQo+ICsJaWYgKHJ2YWwgPCAwKSB7DQo+
ICsJCXBtX3J1bnRpbWVfcHV0X25vaWRsZShzZC0+ZGV2KTsNCj4gKwkJcmV0dXJuIHJ2YWw7DQo+
ICsJfQ0KPiArDQo+ICsJcmV0dXJuIDA7DQo+ICt9DQo+ICsNCj4gK3N0YXRpYyBpbnQgZHc5ODA3
X2Nsb3NlKHN0cnVjdCB2NGwyX3N1YmRldiAqc2QsIHN0cnVjdCB2NGwyX3N1YmRldl9maCANCj4g
KypmaCkgew0KPiArCXBtX3J1bnRpbWVfcHV0KHNkLT5kZXYpOw0KPiArDQo+ICsJcmV0dXJuIDA7
DQo+ICt9DQo+ICsNCj4gK3N0YXRpYyBjb25zdCBzdHJ1Y3QgdjRsMl9zdWJkZXZfaW50ZXJuYWxf
b3BzIGR3OTgwN19pbnRfb3BzID0gew0KPiArCS5vcGVuID0gZHc5ODA3X29wZW4sDQo+ICsJLmNs
b3NlID0gZHc5ODA3X2Nsb3NlLA0KPiArfTsNCj4gKw0KPiArc3RhdGljIGNvbnN0IHN0cnVjdCB2
NGwyX3N1YmRldl9vcHMgZHc5ODA3X29wcyA9IHsgfTsNCj4gKw0KPiArc3RhdGljIHZvaWQgZHc5
ODA3X3N1YmRldl9jbGVhbnVwKHN0cnVjdCBkdzk4MDdfZGV2aWNlICpkdzk4MDdfZGV2KSB7DQo+
ICsJdjRsMl9hc3luY191bnJlZ2lzdGVyX3N1YmRldigmZHc5ODA3X2Rldi0+c2QpOw0KPiArCXY0
bDJfY3RybF9oYW5kbGVyX2ZyZWUoJmR3OTgwN19kZXYtPmN0cmxzX3ZjbSk7DQo+ICsJbWVkaWFf
ZW50aXR5X2NsZWFudXAoJmR3OTgwN19kZXYtPnNkLmVudGl0eSk7DQo+ICt9DQo+ICsNCj4gK3N0
YXRpYyBpbnQgZHc5ODA3X2luaXRfY29udHJvbHMoc3RydWN0IGR3OTgwN19kZXZpY2UgKmRldl92
Y20pIHsNCj4gKwlzdHJ1Y3QgdjRsMl9jdHJsX2hhbmRsZXIgKmhkbCA9ICZkZXZfdmNtLT5jdHJs
c192Y207DQo+ICsJY29uc3Qgc3RydWN0IHY0bDJfY3RybF9vcHMgKm9wcyA9ICZkdzk4MDdfdmNt
X2N0cmxfb3BzOw0KPiArCXN0cnVjdCBpMmNfY2xpZW50ICpjbGllbnQgPSB2NGwyX2dldF9zdWJk
ZXZkYXRhKCZkZXZfdmNtLT5zZCk7DQo+ICsNCj4gKwl2NGwyX2N0cmxfaGFuZGxlcl9pbml0KGhk
bCwgMSk7DQo+ICsNCj4gKwl2NGwyX2N0cmxfbmV3X3N0ZChoZGwsIG9wcywgVjRMMl9DSURfRk9D
VVNfQUJTT0xVVEUsDQo+ICsJCQkgIDAsIERXOTgwN19NQVhfRk9DVVNfUE9TLCBEVzk4MDdfRk9D
VVNfU1RFUFMsIDApOw0KPiArDQo+ICsJZGV2X3ZjbS0+c2QuY3RybF9oYW5kbGVyID0gaGRsOw0K
PiArCWlmIChoZGwtPmVycm9yKSB7DQo+ICsJCWRldl9lcnIoJmNsaWVudC0+ZGV2LCAiJXMgZmFp
bCBlcnJvcjogMHgleFxuIiwNCj4gKwkJCV9fZnVuY19fLCBoZGwtPmVycm9yKTsNCj4gKwkJcmV0
dXJuIGhkbC0+ZXJyb3I7DQo+ICsJfQ0KPiArDQo+ICsJcmV0dXJuIDA7DQo+ICt9DQo+ICsNCj4g
K3N0YXRpYyBpbnQgZHc5ODA3X3Byb2JlKHN0cnVjdCBpMmNfY2xpZW50ICpjbGllbnQpIHsNCj4g
KwlzdHJ1Y3QgZHc5ODA3X2RldmljZSAqZHc5ODA3X2RldjsNCj4gKwlpbnQgcnZhbDsNCj4gKw0K
PiArCWR3OTgwN19kZXYgPSBkZXZtX2t6YWxsb2MoJmNsaWVudC0+ZGV2LCBzaXplb2YoKmR3OTgw
N19kZXYpLA0KPiArCQkJCSAgR0ZQX0tFUk5FTCk7DQo+ICsJaWYgKCFkdzk4MDdfZGV2KQ0KPiAr
CQlyZXR1cm4gLUVOT01FTTsNCj4gKw0KPiArCXY0bDJfaTJjX3N1YmRldl9pbml0KCZkdzk4MDdf
ZGV2LT5zZCwgY2xpZW50LCAmZHc5ODA3X29wcyk7DQo+ICsJZHc5ODA3X2Rldi0+c2QuZmxhZ3Mg
fD0gVjRMMl9TVUJERVZfRkxfSEFTX0RFVk5PREU7DQo+ICsJZHc5ODA3X2Rldi0+c2QuaW50ZXJu
YWxfb3BzID0gJmR3OTgwN19pbnRfb3BzOw0KPiArDQo+ICsJcnZhbCA9IGR3OTgwN19pbml0X2Nv
bnRyb2xzKGR3OTgwN19kZXYpOw0KPiArCWlmIChydmFsKQ0KPiArCQlnb3RvIGVycl9jbGVhbnVw
Ow0KPiArDQo+ICsJcnZhbCA9IG1lZGlhX2VudGl0eV9wYWRzX2luaXQoJmR3OTgwN19kZXYtPnNk
LmVudGl0eSwgMCwgTlVMTCk7DQo+ICsJaWYgKHJ2YWwgPCAwKQ0KPiArCQlnb3RvIGVycl9jbGVh
bnVwOw0KPiArDQo+ICsJZHc5ODA3X2Rldi0+c2QuZW50aXR5LmZ1bmN0aW9uID0gTUVESUFfRU5U
X0ZfTEVOUzsNCg0KTm90IHN1cGVyIHN1cmUgaGVyZSwgU2FrYXJpIG1heSBjb25maXJtIG9yIG5v
dCwgYnV0IHlvdSBkb24ndCBoYXZlIHBhZHMsIHlvdSBkb24ndCBoYXZlIHBhZCBvcGVyYXRpb25z
LCB3aHkgYXJlIGluaXRpYWxpemluZyBlbnRpdHkgcGFkcyBhbmQgZGVwZW5kIG9uIE1FRElBX0NP
TlRST0xMRVIgaW4gS2NvbmZpZz8gSSAtdGhpbmstIHlvdSBjYW4gcmVtb3ZlIHRoZXNlIGxpbmVz
IGFib3ZlIGhlcmUuDQoNCj4gKw0KPiArCXJ2YWwgPSB2NGwyX2FzeW5jX3JlZ2lzdGVyX3N1YmRl
digmZHc5ODA3X2Rldi0+c2QpOw0KPiArCWlmIChydmFsIDwgMCkNCj4gKwkJZ290byBlcnJfY2xl
YW51cDsNCj4gKw0KPiArCXBtX3J1bnRpbWVfc2V0X2FjdGl2ZSgmY2xpZW50LT5kZXYpOw0KPiAr
CXBtX3J1bnRpbWVfZW5hYmxlKCZjbGllbnQtPmRldik7DQo+ICsJcG1fcnVudGltZV9pZGxlKCZj
bGllbnQtPmRldik7DQo+ICsNCj4gKwlyZXR1cm4gMDsNCj4gKw0KPiArZXJyX2NsZWFudXA6DQo+
ICsJZHc5ODA3X3N1YmRldl9jbGVhbnVwKGR3OTgwN19kZXYpOw0KPiArDQo+ICsJcmV0dXJuIHJ2
YWw7DQo+ICt9DQo+ICsNCj4gK3N0YXRpYyBpbnQgZHc5ODA3X3JlbW92ZShzdHJ1Y3QgaTJjX2Ns
aWVudCAqY2xpZW50KSB7DQo+ICsJc3RydWN0IHY0bDJfc3ViZGV2ICpzZCA9IGkyY19nZXRfY2xp
ZW50ZGF0YShjbGllbnQpOw0KPiArCXN0cnVjdCBkdzk4MDdfZGV2aWNlICpkdzk4MDdfZGV2ID0g
c2RfdG9fZHc5ODA3X3ZjbShzZCk7DQo+ICsNCj4gKwlwbV9ydW50aW1lX2Rpc2FibGUoJmNsaWVu
dC0+ZGV2KTsNCj4gKwlwbV9ydW50aW1lX3NldF9zdXNwZW5kZWQoJmNsaWVudC0+ZGV2KTsNCj4g
Kw0KPiArCWR3OTgwN19zdWJkZXZfY2xlYW51cChkdzk4MDdfZGV2KTsNCj4gKw0KPiArCXJldHVy
biAwOw0KPiArfQ0KPiArDQo+ICsvKg0KPiArICogVGhpcyBmdW5jdGlvbiBzZXRzIHRoZSB2Y20g
cG9zaXRpb24sIHNvIGl0IGNvbnN1bWVzIGxlYXN0IGN1cnJlbnQNCj4gKyAqIFRoZSBsZW5zIHBv
c2l0aW9uIGlzIGdyYWR1YWxseSBtb3ZlZCBpbiB1bml0cyBvZiANCj4gK0RXOTgwN19DVFJMX1NU
RVBTLA0KPiArICogdG8gbWFrZSB0aGUgbW92ZW1lbnRzIHNtb290aGx5Lg0KPiArICovDQo+ICtz
dGF0aWMgaW50IF9fbWF5YmVfdW51c2VkIGR3OTgwN192Y21fc3VzcGVuZChzdHJ1Y3QgZGV2aWNl
ICpkZXYpIHsNCj4gKwlzdHJ1Y3QgaTJjX2NsaWVudCAqY2xpZW50ID0gdG9faTJjX2NsaWVudChk
ZXYpOw0KPiArCXN0cnVjdCB2NGwyX3N1YmRldiAqc2QgPSBpMmNfZ2V0X2NsaWVudGRhdGEoY2xp
ZW50KTsNCj4gKwlzdHJ1Y3QgZHc5ODA3X2RldmljZSAqZHc5ODA3X2RldiA9IHNkX3RvX2R3OTgw
N192Y20oc2QpOw0KPiArCWNvbnN0IGNoYXIgdHhfZGF0YVsyXSA9IHsgRFc5ODA3X0NUTF9BRERS
LCAweDAxIH07DQo+ICsJaW50IHJldCwgdmFsOw0KPiArDQo+ICsJZm9yICh2YWwgPSBkdzk4MDdf
ZGV2LT5jdXJyZW50X3ZhbCAmIH4oRFc5ODA3X0NUUkxfU1RFUFMgLSAxKTsNCj4gKwkgICAgIHZh
bCA+PSAwOyB2YWwgLT0gRFc5ODA3X0NUUkxfU1RFUFMpIHsNCj4gKwkJcmV0ID0gZHc5ODA3X3Nl
dF9kYWMoY2xpZW50LCB2YWwpOw0KPiArCQlpZiAocmV0KQ0KPiArCQkJZGV2X2Vycl9vbmNlKGRl
diwgIiVzIEkyQyBmYWlsdXJlOiAlZCIsIF9fZnVuY19fLCByZXQpOw0KPiArCQl1c2xlZXBfcmFu
Z2UoRFc5ODA3X0NUUkxfREVMQVlfVVMsIERXOTgwN19DVFJMX0RFTEFZX1VTICsgMTApOw0KDQo+
IGRpdHRvDQoNCkRvbmUNCg0KPiArCX0NCj4gKw0KPiArCS8qIFBvd2VyIGRvd24gKi8NCj4gKwly
ZXQgPSBpMmNfbWFzdGVyX3NlbmQoY2xpZW50LCB0eF9kYXRhLCBzaXplb2YodHhfZGF0YSkpOw0K
PiArDQoNCj4gZGl0Y2ggdGhpcyBlbXB0eSBsaW5lIHBsZWFzZQ0KDQpEb25lDQoNCj4gKwlpZiAo
cmV0ICE9IHNpemVvZih0eF9kYXRhKSkgew0KDQo+IGRpdHRvLCBjaGVjayBmb3IgcmV0IDwgMA0K
DQpEb25lDQoNCj4gKwkJZGV2X2VycigmY2xpZW50LT5kZXYsICJJMkMgd3JpdGUgQ1RMIGZhaWxc
biIpOw0KPiArCQlyZXR1cm4gLUVJTzsNCg0KY29uc2lkZXIgcmV0dXJuaW5nIHJldCB0byBwcm9w
YWdhdGUgaTJjIGVycm9yDQoNCj4gKwl9DQo+ICsNCj4gKwlyZXR1cm4gMDsNCj4gK30NCj4gKw0K
PiArLyoNCj4gKyAqIFRoaXMgZnVuY3Rpb24gc2V0cyB0aGUgdmNtIHBvc2l0aW9uIHRvIHRoZSB2
YWx1ZSBzZXQgYnkgdGhlIHVzZXINCj4gKyAqIHRocm91Z2ggdjRsMl9jdHJsX29wcyBzX2N0cmwg
aGFuZGxlcg0KPiArICogVGhlIGxlbnMgcG9zaXRpb24gaXMgZ3JhZHVhbGx5IG1vdmVkIGluIHVu
aXRzIG9mIA0KPiArRFc5ODA3X0NUUkxfU1RFUFMsDQo+ICsgKiB0byBtYWtlIHRoZSBtb3ZlbWVu
dHMgc21vb3RobHkuDQo+ICsgKi8NCj4gK3N0YXRpYyBpbnQgIF9fbWF5YmVfdW51c2VkIGR3OTgw
N192Y21fcmVzdW1lKHN0cnVjdCBkZXZpY2UgKmRldikgew0KPiArCXN0cnVjdCBpMmNfY2xpZW50
ICpjbGllbnQgPSB0b19pMmNfY2xpZW50KGRldik7DQo+ICsJc3RydWN0IHY0bDJfc3ViZGV2ICpz
ZCA9IGkyY19nZXRfY2xpZW50ZGF0YShjbGllbnQpOw0KPiArCXN0cnVjdCBkdzk4MDdfZGV2aWNl
ICpkdzk4MDdfZGV2ID0gc2RfdG9fZHc5ODA3X3ZjbShzZCk7DQo+ICsJY29uc3QgY2hhciB0eF9k
YXRhWzJdID0geyBEVzk4MDdfQ1RMX0FERFIsIDB4MDAgfTsNCj4gKwlpbnQgcmV0LCB2YWw7DQo+
ICsNCj4gKwkvKiBQb3dlciBvbiAqLw0KPiArCXJldCA9IGkyY19tYXN0ZXJfc2VuZChjbGllbnQs
IHR4X2RhdGEsIHNpemVvZih0eF9kYXRhKSk7DQo+ICsJaWYgKHJldCAhPSBzaXplb2YodHhfZGF0
YSkpIHsNCg0KPiBkaXR0bywgY2hlY2sgZm9yIHJldCA8IDANCg0KRG9uZQ0KDQo+ICsJCWRldl9l
cnIoJmNsaWVudC0+ZGV2LCAiSTJDIHdyaXRlIENUTCBmYWlsXG4iKTsNCj4gKwkJcmV0dXJuIC1F
SU87DQoNCj4gY29uc2lkZXIgcmV0dXJuaW5nIHJldCB0byBwcm9wYWdhdGUgaTJjIGVycm9yDQoN
CkRvbmUNCg0KDQo+ICsJfQ0KPiArDQo+ICsJZm9yICh2YWwgPSBkdzk4MDdfZGV2LT5jdXJyZW50
X3ZhbCAlIERXOTgwN19DVFJMX1NURVBTOw0KPiArCSAgICAgdmFsIDwgZHc5ODA3X2Rldi0+Y3Vy
cmVudF92YWwgKyBEVzk4MDdfQ1RSTF9TVEVQUyAtIDE7DQo+ICsJICAgICB2YWwgKz0gRFc5ODA3
X0NUUkxfU1RFUFMpIHsNCj4gKwkJcmV0ID0gZHc5ODA3X3NldF9kYWMoY2xpZW50LCB2YWwpOw0K
PiArCQlpZiAocmV0KQ0KPiArCQkJZGV2X2Vycl9yYXRlbGltaXRlZChkZXYsICIlcyBJMkMgZmFp
bHVyZTogJWQiLA0KPiArCQkJCQkJX19mdW5jX18sIHJldCk7DQo+ICsJCXVzbGVlcF9yYW5nZShE
Vzk4MDdfQ1RSTF9ERUxBWV9VUywgRFc5ODA3X0NUUkxfREVMQVlfVVMgKyAxMCk7DQoNCj4gZGl0
dG8NCg0KRG9uZQ0KDQo+ICsJfQ0KPiArDQo+ICsJcmV0dXJuIDA7DQo+ICt9DQo+ICsNCj4gK3N0
YXRpYyBjb25zdCBzdHJ1Y3Qgb2ZfZGV2aWNlX2lkIGR3OTgwN19vZl90YWJsZVtdID0gew0KPiAr
CXsgLmNvbXBhdGlibGUgPSAiZG9uZ3dvb24sZHc5ODA3IiB9LA0KPiArCXsgeyAwIH0gfQ0KDQo+
IFRvbWFzejoNCj4gSXQgbG9va3MgbGlrZSB3ZSBtYXkgbmVlZCBvdGhlciBjaGFuZ2VzLCBzbyBJ
J2QgZ28gd2l0aA0KPiB7IC8qIHNlbnRpbmVsICovIH0sDQo+IGhlcmUuIFRoYXQncyAoKy8tIHRo
ZSBjb21tZW50KSB3aGF0IG90aGVyIGRyaXZlcnMgdXNlIG5vcm1hbGx5Lg0KDQpkb25lDQoNCj4g
K307DQo+ICtNT0RVTEVfREVWSUNFX1RBQkxFKG9mLCBkdzk4MDdfb2ZfdGFibGUpOw0KPiArDQo+
ICtzdGF0aWMgY29uc3Qgc3RydWN0IGRldl9wbV9vcHMgZHc5ODA3X3BtX29wcyA9IHsNCj4gKwlT
RVRfU1lTVEVNX1NMRUVQX1BNX09QUyhkdzk4MDdfdmNtX3N1c3BlbmQsIGR3OTgwN192Y21fcmVz
dW1lKQ0KPiArCVNFVF9SVU5USU1FX1BNX09QUyhkdzk4MDdfdmNtX3N1c3BlbmQsIGR3OTgwN192
Y21fcmVzdW1lLCBOVUxMKSB9Ow0KPiArDQo+ICtzdGF0aWMgc3RydWN0IGkyY19kcml2ZXIgZHc5
ODA3X2kyY19kcml2ZXIgPSB7DQo+ICsJLmRyaXZlciA9IHsNCj4gKwkJLm5hbWUgPSAiZHc5ODA3
IiwNCj4gKwkJLnBtID0gJmR3OTgwN19wbV9vcHMsDQo+ICsJCS5vZl9tYXRjaF90YWJsZSA9IGR3
OTgwN19vZl90YWJsZSwNCj4gKwl9LA0KPiArCS5wcm9iZV9uZXcgPSBkdzk4MDdfcHJvYmUsDQo+
ICsJLnJlbW92ZSA9IGR3OTgwN19yZW1vdmUsDQo+ICt9Ow0KPiArDQo+ICttb2R1bGVfaTJjX2Ry
aXZlcihkdzk4MDdfaTJjX2RyaXZlcik7DQo+ICsNCj4gK01PRFVMRV9BVVRIT1IoIkNoaWFuZywg
QWxhbiA8YWxhbnguY2hpYW5nQGludGVsLmNvbT4iKTsNCj4gK01PRFVMRV9ERVNDUklQVElPTigi
RFc5ODA3IFZDTSBkcml2ZXIiKTsgTU9EVUxFX0xJQ0VOU0UoIkdQTCB2MiIpOw0KPiAtLQ0KPiAy
LjcuNA0KPg0K
