Return-path: <video4linux-list-bounces@redhat.com>
Received: from mx3.redhat.com (mx3.redhat.com [172.16.48.32])
	by int-mx1.corp.redhat.com (8.13.1/8.13.1) with ESMTP id mABBW5Ud001070
	for <video4linux-list@redhat.com>; Tue, 11 Nov 2008 06:32:05 -0500
Received: from mail.gmx.net (mail.gmx.net [213.165.64.20])
	by mx3.redhat.com (8.13.8/8.13.8) with SMTP id mABBVcw4006598
	for <video4linux-list@redhat.com>; Tue, 11 Nov 2008 06:31:46 -0500
Date: Tue, 11 Nov 2008 12:31:46 +0100 (CET)
From: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
To: Robert Jarzmik <robert.jarzmik@free.fr>
In-Reply-To: <87k5bar0aq.fsf@free.fr>
Message-ID: <Pine.LNX.4.64.0811111220130.4565@axis700.grange>
References: <Pine.LNX.4.64.0811101323490.4248@axis700.grange>
	<Pine.LNX.4.64.0811101335170.4248@axis700.grange>
	<874p2fkwh5.fsf@free.fr>
	<Pine.LNX.4.64.0811110834140.4565@axis700.grange>
	<87k5bar0aq.fsf@free.fr>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Cc: video4linux-list@redhat.com
Subject: Re: [PATCH 5/5] pxa-camera: framework to handle camera-native and
 synthesized formats
List-Unsubscribe: <https://www.redhat.com/mailman/listinfo/video4linux-list>,
	<mailto:video4linux-list-request@redhat.com?subject=unsubscribe>
List-Archive: <https://www.redhat.com/mailman/private/video4linux-list>
List-Post: <mailto:video4linux-list@redhat.com>
List-Help: <mailto:video4linux-list-request@redhat.com?subject=help>
List-Subscribe: <https://www.redhat.com/mailman/listinfo/video4linux-list>,
	<mailto:video4linux-list-request@redhat.com?subject=subscribe>
Sender: video4linux-list-bounces@redhat.com
Errors-To: video4linux-list-bounces@redhat.com
List-ID: <video4linux-list@redhat.com>

On Tue, 11 Nov 2008, Robert Jarzmik wrote:

> Guennadi Liakhovetski <g.liakhovetski@gmx.de> writes:
> 
> >> };
> >> 
> >>  - camera host provide a static table like this :
> >> struct soc_camera_format_translate pxa_pixfmt_translations[] = {
> >>        { V4L2_PIX_FMT_YUYV, V4L2_PIX_FMT_YUYV },
> >>        { V4L2_PIX_FMT_UYVY, V4L2_PIX_FMT_UYVY },
> >>        ...
> >>        { V4L2_PIX_FMT_YUV422P, V4L2_PIX_FMT_UYVY},
> >> };
> >
> > Hm, I don't think you want to list all possible formats you can pull 
> > through this camera host. AFAIU, camera hosts can transfer data from 
> > cameras to destination (memory / framebuffer / output device...) in three 
> > ways:
> Oh yes, you should list them all : that's what you'll end up doing once the
> function format_supported() is fully implemented anyway, wouldn't you ?
> format_supported() will compare a list of known formats to the sensor output
> formats, and keep only known ones (ie. drop RGB32, or YUV 4:2:0, etc ...)

Don't you think we can have a default case? If the format requested by the 
user is provided by the camera and we "can trandfer it 1-to-1" (bus-width 
== depth or some such) then just switch on the pass-through mode?

> > Also, a probably better approach than what you suggested above (if I 
> > understood it right) would be not to use a static translation table, but 
> > to generate one dynamically during .add() and have them per-device, not 
> > per-host.
> The translation table will be per-host static (it's hardwired in the chip), but
> the generated supported formats will be dynamically generated by the host on
> sensor attachment (ie. computed), and for each device.
> 
> >> Is there a reason you chose to fully export the formats computation to hosts ?
> >
> > In short: I'd prefer to first keep this in pxa-camera, and then see as new 
> > host drivers arrive, whether we can make portions of the code generic. 
> > Makes sense?
> I understand your thinking. I don't think it's the good way to go, but you're
> the maintainer, you decide. We'll see soon enough, once TI and Qualcomm embedded
> devices will be enough documented, who was right.

Wow, I'm scared...:-) Ok, let's try it your way, I don't want to play the 
"maintainer" card, and you seem to be strongly in favour of a central 
solution, whereas I just slightly incline towards local... So, either give 
me a few days, or feel free to code off - whichever you prefer.

If you do this, I think, best do something like

int soc_camera_host_register(struct soc_camera_host *ici)
{
...
	if (!ici->ops->enum_fmt)
		ici->ops->enum_fmt = soc_camera_enum_fmt;
...

etc. for any other methods you want to provide defaults for. Instead of 
exporting more functions and letting hosts do

int x_do_something(...)
{
	return soc_camera_do_something(...);
}

Thanks
Guennadi
---
Guennadi Liakhovetski, Ph.D.
Freelance Open-Source Software Developer

--
video4linux-list mailing list
Unsubscribe mailto:video4linux-list-request@redhat.com?subject=unsubscribe
https://www.redhat.com/mailman/listinfo/video4linux-list
