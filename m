Return-path: <video4linux-list-bounces@redhat.com>
Received: from mx3.redhat.com (mx3.redhat.com [172.16.48.32])
	by int-mx1.corp.redhat.com (8.13.1/8.13.1) with ESMTP id m9H2mQE2004543
	for <video4linux-list@redhat.com>; Thu, 16 Oct 2008 22:48:26 -0400
Received: from hs-out-0708.google.com (hs-out-0708.google.com [64.233.178.247])
	by mx3.redhat.com (8.13.8/8.13.8) with ESMTP id m9H2lrvn000941
	for <video4linux-list@redhat.com>; Thu, 16 Oct 2008 22:47:53 -0400
Received: by hs-out-0708.google.com with SMTP id x43so107873hsb.3
	for <video4linux-list@redhat.com>; Thu, 16 Oct 2008 19:47:53 -0700 (PDT)
Message-ID: <aec7e5c30810161947n57851272i4204dcce515a8ec4@mail.gmail.com>
Date: Fri, 17 Oct 2008 11:47:51 +0900
From: "Magnus Damm" <magnus.damm@gmail.com>
To: "Hans Verkuil" <hverkuil@xs4all.nl>
In-Reply-To: <200810162258.28993.hverkuil@xs4all.nl>
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="----=_Part_383_7371032.1224211671848"
References: <u63nt9mvx.wl%morimoto.kuninori@renesas.com>
	<20081016102701.1bcb2c59.ospite@studenti.unina.it>
	<Pine.LNX.4.64.0810162114030.8422@axis700.grange>
	<200810162258.28993.hverkuil@xs4all.nl>
Cc: video4linux-list@redhat.com, Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Subject: Re: [PATCH] Add ov772x driver
List-Unsubscribe: <https://www.redhat.com/mailman/listinfo/video4linux-list>,
	<mailto:video4linux-list-request@redhat.com?subject=unsubscribe>
List-Archive: <https://www.redhat.com/mailman/private/video4linux-list>
List-Post: <mailto:video4linux-list@redhat.com>
List-Help: <mailto:video4linux-list-request@redhat.com?subject=help>
List-Subscribe: <https://www.redhat.com/mailman/listinfo/video4linux-list>,
	<mailto:video4linux-list-request@redhat.com?subject=subscribe>
Sender: video4linux-list-bounces@redhat.com
Errors-To: video4linux-list-bounces@redhat.com
List-ID: <video4linux-list@redhat.com>

------=_Part_383_7371032.1224211671848
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On Fri, Oct 17, 2008 at 5:58 AM, Hans Verkuil <hverkuil@xs4all.nl> wrote:
> On Thursday 16 October 2008 21:23:59 Guennadi Liakhovetski wrote:
>> Hans Verkuil will, probably, notice, that
>> soc-camera is not universal enough for many video applications, but
>> it might well be enough for the cideo part of a simple USB
>> web-camera, I think. OTOH, Hans is working on a new API, that should
>> unify the host / device interface in v4l applications, at which time
>> soc-camera drivers will have to be converted, as well as multiple
>> other currently existing APIs.
>
> I'm planning to start on this this weekend. If all goes well the basic
> framework should go into v4l-dvb soon after the 2.6.28 windows closes,
> and it should end up in 2.6.29.

Hans,  any chance of that framework including pixel format helper
code? I've hacked a bit on using a bitmap to represent pixel formats
supported by a certain driver. The attached very rough patch maybe
shows what i'm trying to do.

Basically, I need a simple way to determine if a camera sensor
supports a certain pixel format, and if so then i'd like to add a
bunch of pixel formats supported by the soc_camera host.

The SuperH CEU "Capture Engine Unit" has a mode where it accepts
interleaved YUV pixel formats as input from the camera sensor and
converts them to one of NV12, NV21 or a less common 4:2:2 format maybe
known as NV16, NV61. So I need a simple way to check and add pixel
formats by the soc_camera host driver.

Also, having a centralized place for pixel format strings, color depth
and colorspaces associated with each of the pixel formats makes sense
to me. Any thoughts? Want me to hack something up?

Cheers,

/ magnus

------=_Part_383_7371032.1224211671848
Content-Type: application/octet-stream;
	name=linux-2.6.28-rc-video-pixel_formats-20081015.patch
Content-Transfer-Encoding: base64
X-Attachment-Id: f_fme7tdde0
Content-Disposition: attachment;
	filename=linux-2.6.28-rc-video-pixel_formats-20081015.patch

LS0tIDAwMDEvZHJpdmVycy9tZWRpYS92aWRlby9NYWtlZmlsZQorKysgd29yay9kcml2ZXJzL21l
ZGlhL3ZpZGVvL01ha2VmaWxlCTIwMDgtMTAtMTUgMjA6NDU6NDcuMDAwMDAwMDAwICswOTAwCkBA
IC0xMiw3ICsxMiw3IEBAIHZpZGVvZGV2LW9ianMJOj0JdjRsMi1kZXYubyB2NGwyLWlvY3RsLm8K
IAogb2JqLSQoQ09ORklHX1ZJREVPX0RFVikgKz0gdmlkZW9kZXYubyBjb21wYXRfaW9jdGwzMi5v
IHY0bDItaW50LWRldmljZS5vCiAKLW9iai0kKENPTkZJR19WSURFT19WNEwyX0NPTU1PTikgKz0g
djRsMi1jb21tb24ubworb2JqLSQoQ09ORklHX1ZJREVPX1Y0TDJfQ09NTU9OKSArPSB2NGwyLWNv
bW1vbi5vIHBpeGVsX2Zvcm1hdC5vCiAKIGlmZXEgKCQoQ09ORklHX1ZJREVPX1Y0TDFfQ09NUEFU
KSx5KQogICBvYmotJChDT05GSUdfVklERU9fREVWKSArPSB2NGwxLWNvbXBhdC5vCi0tLSAvZGV2
L251bGwKKysrIHdvcmsvZHJpdmVycy9tZWRpYS92aWRlby9waXhlbF9mb3JtYXQuYwkyMDA4LTEw
LTE1IDIyOjIzOjUwLjAwMDAwMDAwMCArMDkwMApAQCAtMCwwICsxLDY5IEBACisjaW5jbHVkZSA8
bGludXgva2VybmVsLmg+CisjaW5jbHVkZSA8bGludXgvZXJyLmg+CisjaW5jbHVkZSA8bGludXgv
dmlkZW9kZXYyLmg+CisjaW5jbHVkZSA8bGludXgvYml0b3BzLmg+CisjaW5jbHVkZSA8bWVkaWEv
cGl4ZWxfZm9ybWF0Lmg+CisKK3N0YXRpYyBfX3UzMiBmb3VyY2NzW05SX1BJWEVMX0ZPUk1BVFNd
ID0geworCVtQSVhFTF9GT1JNQVRfUkdCMzMyXSA9IFY0TDJfUElYX0ZNVF9SR0IzMzIsCisKKwlb
UElYRUxfRk9STUFUX1JHQjU2NV0gPSBWNEwyX1BJWF9GTVRfUkdCNTY1LAorfTsKKworc3RhdGlj
IF9fdTggZGVzY3JpcHRpb25zW05SX1BJWEVMX0ZPUk1BVFNdWzMyXSA9IHsKKwlbUElYRUxfRk9S
TUFUX1JHQjMzMl0gPSAiUkdCLTMtMy0yIFtSR0IxXSIsCisJW1BJWEVMX0ZPUk1BVF9SR0I1NjVd
ID0gIlJHQi01LTYtNSBbUkdCUF0iLAorfTsKKworaW50IGZvdXJjY190b19waXhlbF9mb3JtYXQo
X191MzIgZm91cmNjLCBzdHJ1Y3QgcGl4ZWxfZm9ybWF0cyAqc3VwcG9ydGVkKQoreworCXVuc2ln
bmVkIGludCBrOworCisJZm9yIChrID0gMDsgayA8IE5SX1BJWEVMX0ZPUk1BVFM7IGsrKykKKwkJ
aWYgKGZvdXJjY3Nba10gPT0gZm91cmNjKQorCQkJaWYgKCFzdXBwb3J0ZWQgfHwgdGVzdF9iaXQo
aywgc3VwcG9ydGVkLT5iaXRzKSkKKwkJCQlyZXR1cm4gazsKKworCXJldHVybiAtRUlOVkFMOwor
fQorCitpbnQgZGVmYXVsdF9waXhlbF9mb3JtYXQoc3RydWN0IHBpeGVsX2Zvcm1hdHMgKnN1cHBv
cnRlZCkKK3sKKwlpbnQgcGl4ZWxfZm9ybWF0OworCQorCXBpeGVsX2Zvcm1hdCA9IGZpbmRfZmly
c3RfYml0KHN1cHBvcnRlZC0+Yml0cywgTlJfUElYRUxfRk9STUFUUyk7CisJQlVHX09OKHBpeGVs
X2Zvcm1hdCA+PSBOUl9QSVhFTF9GT1JNQVRTKTsKKworCXJldHVybiBwaXhlbF9mb3JtYXQ7Cit9
CisKK2ludCBnZXRfcGl4ZWxfZm9ybWF0X2JwcChlbnVtIHY0bDJfcGl4ZWxfZm9ybWF0IHBpeGVs
X2Zvcm1hdCkKK3sKKwlCVUdfT04ocGl4ZWxfZm9ybWF0ID49IE5SX1BJWEVMX0ZPUk1BVFMpOwor
CXJldHVybiAxNjsKK30KKworaW50IGdldF9waXhlbF9mb3JtYXRfZm91cmNjKGVudW0gdjRsMl9w
aXhlbF9mb3JtYXQgcGl4ZWxfZm9ybWF0KQoreworCUJVR19PTihwaXhlbF9mb3JtYXQgPj0gTlJf
UElYRUxfRk9STUFUUyk7CisJcmV0dXJuIGZvdXJjY3NbcGl4ZWxfZm9ybWF0XTsKK30KKworaW50
IHBpeGVsX2Zvcm1hdF9lbnVtX2ZtdGRlc2Moc3RydWN0IHY0bDJfZm10ZGVzYyAqZiwKKwkJCSAg
ICAgIHN0cnVjdCBwaXhlbF9mb3JtYXRzICpzdXBwb3J0ZWQpCit7CisJdW5zaWduZWQgbG9uZyBi
aXQ7CisJaW50IGluZGV4OworCisJZm9yIChiaXQgPSAwLCBpbmRleCA9IDA7CisJICAgICBiaXQg
PCBOUl9QSVhFTF9GT1JNQVRTICYmIGluZGV4IDw9IGYtPmluZGV4OworCSAgICAgYml0KyssIGlu
ZGV4KyspCisJCWJpdCA9IGZpbmRfbmV4dF9iaXQoc3VwcG9ydGVkLT5iaXRzLCBOUl9QSVhFTF9G
T1JNQVRTLCBiaXQpOworCisJaWYgKGJpdCA+PSBOUl9QSVhFTF9GT1JNQVRTKQorCQlyZXR1cm4g
LUVJTlZBTDsKKworCXN0cmxjcHkoZi0+ZGVzY3JpcHRpb24sIGRlc2NyaXB0aW9uc1tiaXRdLCBz
aXplb2YoZi0+ZGVzY3JpcHRpb24pKTsKKwlmLT5waXhlbGZvcm1hdCA9IGZvdXJjY3NbYml0XTsK
KwlyZXR1cm4gMDsKK30KLS0tIDAwMDUvZHJpdmVycy9tZWRpYS92aWRlby9zaF9tb2JpbGVfY2V1
X2NhbWVyYS5jCisrKyB3b3JrL2RyaXZlcnMvbWVkaWEvdmlkZW8vc2hfbW9iaWxlX2NldV9jYW1l
cmEuYwkyMDA4LTEwLTE1IDIxOjUwOjMxLjAwMDAwMDAwMCArMDkwMApAQCAtMzcsNiArMzcsNyBA
QAogI2luY2x1ZGUgPG1lZGlhL3NvY19jYW1lcmEuaD4KICNpbmNsdWRlIDxtZWRpYS9zaF9tb2Jp
bGVfY2V1Lmg+CiAjaW5jbHVkZSA8bWVkaWEvdmlkZW9idWYtZG1hLWNvbnRpZy5oPgorI2luY2x1
ZGUgPG1lZGlhL3BpeGVsX2Zvcm1hdC5oPgogCiAvKiByZWdpc3RlciBvZmZzZXRzIGZvciBzaDc3
MjIgLyBzaDc3MjMgKi8KIApAQCAtNzksNyArODAsNyBAQCBzdGF0aWMgREVGSU5FX01VVEVYKGNh
bWVyYV9sb2NrKTsKIC8qIHBlciB2aWRlbyBmcmFtZSBidWZmZXIgKi8KIHN0cnVjdCBzaF9tb2Jp
bGVfY2V1X2J1ZmZlciB7CiAJc3RydWN0IHZpZGVvYnVmX2J1ZmZlciB2YjsgLyogdjRsIGJ1ZmZl
ciBtdXN0IGJlIGZpcnN0ICovCi0JY29uc3Qgc3RydWN0IHNvY19jYW1lcmFfZGF0YV9mb3JtYXQg
KmZtdDsKKwllbnVtIHY0bDJfcGl4ZWxfZm9ybWF0IGZvcm1hdDsKIH07CiAKIHN0cnVjdCBzaF9t
b2JpbGVfY2V1X2RldiB7CkBAIC0xMjEsNyArMTIyLDggQEAgc3RhdGljIGludCBzaF9tb2JpbGVf
Y2V1X3ZpZGVvYnVmX3NldHVwKAogCXN0cnVjdCBzb2NfY2FtZXJhX2RldmljZSAqaWNkID0gdnEt
PnByaXZfZGF0YTsKIAlzdHJ1Y3Qgc29jX2NhbWVyYV9ob3N0ICppY2kgPSB0b19zb2NfY2FtZXJh
X2hvc3QoaWNkLT5kZXYucGFyZW50KTsKIAlzdHJ1Y3Qgc2hfbW9iaWxlX2NldV9kZXYgKnBjZGV2
ID0gaWNpLT5wcml2OwotCWludCBieXRlc19wZXJfcGl4ZWwgPSAoaWNkLT5jdXJyZW50X2ZtdC0+
ZGVwdGggKyA3KSA+PiAzOworCWludCBicHAgPSBnZXRfcGl4ZWxfZm9ybWF0X2JwcChpY2QtPmN1
cnJlbnRfZm9ybWF0KTsKKwlpbnQgYnl0ZXNfcGVyX3BpeGVsID0gKGJwcCArIDcpID4+IDM7CiAK
IAkqc2l6ZSA9IFBBR0VfQUxJR04oaWNkLT53aWR0aCAqIGljZC0+aGVpZ2h0ICogYnl0ZXNfcGVy
X3BpeGVsKTsKIApAQCAtMTc3LDcgKzE3OSw3IEBAIHN0YXRpYyBpbnQgc2hfbW9iaWxlX2NldV92
aWRlb2J1Zl9wcmVwYXIKIHsKIAlzdHJ1Y3Qgc29jX2NhbWVyYV9kZXZpY2UgKmljZCA9IHZxLT5w
cml2X2RhdGE7CiAJc3RydWN0IHNoX21vYmlsZV9jZXVfYnVmZmVyICpidWY7Ci0JaW50IHJldDsK
KwlpbnQgYnBwLCByZXQ7CiAKIAlidWYgPSBjb250YWluZXJfb2YodmIsIHN0cnVjdCBzaF9tb2Jp
bGVfY2V1X2J1ZmZlciwgdmIpOwogCkBAIC0xOTMsMjAgKzE5NSwyMSBAQCBzdGF0aWMgaW50IHNo
X21vYmlsZV9jZXVfdmlkZW9idWZfcHJlcGFyCiAJbWVtc2V0KCh2b2lkICopdmItPmJhZGRyLCAw
eGFhLCB2Yi0+YnNpemUpOwogI2VuZGlmCiAKLQlCVUdfT04oTlVMTCA9PSBpY2QtPmN1cnJlbnRf
Zm10KTsKKwlCVUdfT04oaWNkLT5jdXJyZW50X2Zvcm1hdCA+PSBOUl9QSVhFTF9GT1JNQVRTKTsK
IAotCWlmIChidWYtPmZtdAkhPSBpY2QtPmN1cnJlbnRfZm10IHx8CisJaWYgKGJ1Zi0+Zm9ybWF0
CSE9IGljZC0+Y3VycmVudF9mb3JtYXQgfHwKIAkgICAgdmItPndpZHRoCSE9IGljZC0+d2lkdGgg
fHwKIAkgICAgdmItPmhlaWdodAkhPSBpY2QtPmhlaWdodCB8fAogCSAgICB2Yi0+ZmllbGQJIT0g
ZmllbGQpIHsKLQkJYnVmLT5mbXQJPSBpY2QtPmN1cnJlbnRfZm10OworCQlidWYtPmZvcm1hdAk9
IGljZC0+Y3VycmVudF9mb3JtYXQ7CiAJCXZiLT53aWR0aAk9IGljZC0+d2lkdGg7CiAJCXZiLT5o
ZWlnaHQJPSBpY2QtPmhlaWdodDsKIAkJdmItPmZpZWxkCT0gZmllbGQ7CiAJCXZiLT5zdGF0ZQk9
IFZJREVPQlVGX05FRURTX0lOSVQ7CiAJfQogCi0JdmItPnNpemUgPSB2Yi0+d2lkdGggKiB2Yi0+
aGVpZ2h0ICogKChidWYtPmZtdC0+ZGVwdGggKyA3KSA+PiAzKTsKKwlicHAgPSBnZXRfcGl4ZWxf
Zm9ybWF0X2JwcChidWYtPmZvcm1hdCk7CisJdmItPnNpemUgPSB2Yi0+d2lkdGggKiB2Yi0+aGVp
Z2h0ICogKChicHAgKyA3KSA+PiAzKTsKIAlpZiAoMCAhPSB2Yi0+YmFkZHIgJiYgdmItPmJzaXpl
IDwgdmItPnNpemUpIHsKIAkJcmV0ID0gLUVJTlZBTDsKIAkJZ290byBvdXQ7CkBAIC0zOTQsNyAr
Mzk3LDcgQEAgc3RhdGljIGludCBzaF9tb2JpbGVfY2V1X3NldF9idXNfcGFyYW0ocwogCiAJbWRl
bGF5KDEpOwogCi0Jd2lkdGggPSBpY2QtPndpZHRoICogKGljZC0+Y3VycmVudF9mbXQtPmRlcHRo
IC8gOCk7CisJd2lkdGggPSBpY2QtPndpZHRoICogKGdldF9waXhlbF9mb3JtYXRfYnBwKGljZC0+
Y3VycmVudF9mb3JtYXQpIC8gOCk7CiAJd2lkdGggPSAoYnVzd2lkdGggPT0gMTYpID8gd2lkdGgg
LyAyIDogd2lkdGg7CiAJY2ZzenJfd2lkdGggPSAoYnVzd2lkdGggPT0gOCkgPyB3aWR0aCAvIDIg
OiB3aWR0aDsKIAljZHdkcl93aWR0aCA9IChidXN3aWR0aCA9PSAxNikgPyB3aWR0aCAqIDIgOiB3
aWR0aDsKLS0tIDAwMDEvZHJpdmVycy9tZWRpYS92aWRlby9zb2NfY2FtZXJhLmMKKysrIHdvcmsv
ZHJpdmVycy9tZWRpYS92aWRlby9zb2NfY2FtZXJhLmMJMjAwOC0xMC0xNSAyMTo0NDoxMi4wMDAw
MDAwMDAgKzA5MDAKQEAgLTM1LDE3ICszNSw2IEBAIHN0YXRpYyBMSVNUX0hFQUQoZGV2aWNlcyk7
CiBzdGF0aWMgREVGSU5FX01VVEVYKGxpc3RfbG9jayk7CiBzdGF0aWMgREVGSU5FX01VVEVYKHZp
ZGVvX2xvY2spOwogCi1jb25zdCBzdGF0aWMgc3RydWN0IHNvY19jYW1lcmFfZGF0YV9mb3JtYXQq
Ci1mb3JtYXRfYnlfZm91cmNjKHN0cnVjdCBzb2NfY2FtZXJhX2RldmljZSAqaWNkLCB1bnNpZ25l
ZCBpbnQgZm91cmNjKQotewotCXVuc2lnbmVkIGludCBpOwotCi0JZm9yIChpID0gMDsgaSA8IGlj
ZC0+bnVtX2Zvcm1hdHM7IGkrKykKLQkJaWYgKGljZC0+Zm9ybWF0c1tpXS5mb3VyY2MgPT0gZm91
cmNjKQotCQkJcmV0dXJuIGljZC0+Zm9ybWF0cyArIGk7Ci0JcmV0dXJuIE5VTEw7Ci19Ci0KIHN0
YXRpYyBpbnQgc29jX2NhbWVyYV90cnlfZm10X3ZpZF9jYXAoc3RydWN0IGZpbGUgKmZpbGUsIHZv
aWQgKnByaXYsCiAJCQkJICBzdHJ1Y3QgdjRsMl9mb3JtYXQgKmYpCiB7CkBAIC01NCwxOSArNDMs
MjAgQEAgc3RhdGljIGludCBzb2NfY2FtZXJhX3RyeV9mbXRfdmlkX2NhcChzdAogCXN0cnVjdCBz
b2NfY2FtZXJhX2hvc3QgKmljaSA9CiAJCXRvX3NvY19jYW1lcmFfaG9zdChpY2QtPmRldi5wYXJl
bnQpOwogCWVudW0gdjRsMl9maWVsZCBmaWVsZDsKLQljb25zdCBzdHJ1Y3Qgc29jX2NhbWVyYV9k
YXRhX2Zvcm1hdCAqZm10OworCWludCBwaXhlbF9mb3JtYXQ7CiAJaW50IHJldDsKIAogCVdBUk5f
T04ocHJpdiAhPSBmaWxlLT5wcml2YXRlX2RhdGEpOwogCi0JZm10ID0gZm9ybWF0X2J5X2ZvdXJj
YyhpY2QsIGYtPmZtdC5waXgucGl4ZWxmb3JtYXQpOwotCWlmICghZm10KSB7CisJcGl4ZWxfZm9y
bWF0ID0gZm91cmNjX3RvX3BpeGVsX2Zvcm1hdChmLT5mbXQucGl4LnBpeGVsZm9ybWF0LAorCQkJ
CQkgICAgICAmaWNkLT5zdXBwb3J0ZWRfZm9ybWF0cyk7CisJaWYgKHBpeGVsX2Zvcm1hdCA8IDAp
IHsKIAkJZGV2X2RiZygmaWNkLT5kZXYsICJpbnZhbGlkIGZvcm1hdCAweCUwOHhcbiIsCiAJCQlm
LT5mbXQucGl4LnBpeGVsZm9ybWF0KTsKIAkJcmV0dXJuIC1FSU5WQUw7CiAJfQogCi0JZGV2X2Ri
ZygmaWNkLT5kZXYsICJmbXQ6IDB4JTA4eFxuIiwgZm10LT5mb3VyY2MpOworCWRldl9kYmcoJmlj
ZC0+ZGV2LCAiZm10OiAweCUwOHhcbiIsIGYtPmZtdC5waXgucGl4ZWxmb3JtYXQpOwogCiAJZmll
bGQgPSBmLT5mbXQucGl4LmZpZWxkOwogCkBAIC04OCw3ICs3OCw3IEBAIHN0YXRpYyBpbnQgc29j
X2NhbWVyYV90cnlfZm10X3ZpZF9jYXAoc3QKIAkvKiBjYWxjdWxhdGUgbWlzc2luZyBmaWVsZHMg
Ki8KIAlmLT5mbXQucGl4LmZpZWxkID0gZmllbGQ7CiAJZi0+Zm10LnBpeC5ieXRlc3BlcmxpbmUg
PQotCQkoZi0+Zm10LnBpeC53aWR0aCAqIGZtdC0+ZGVwdGgpID4+IDM7CisJCShmLT5mbXQucGl4
LndpZHRoICogZ2V0X3BpeGVsX2Zvcm1hdF9icHAocGl4ZWxfZm9ybWF0KSkgPj4gMzsKIAlmLT5m
bXQucGl4LnNpemVpbWFnZSA9CiAJCWYtPmZtdC5waXguaGVpZ2h0ICogZi0+Zm10LnBpeC5ieXRl
c3BlcmxpbmU7CiAKQEAgLTMzMiwxNiArMzIyLDE3IEBAIHN0YXRpYyBpbnQgc29jX2NhbWVyYV9z
X2ZtdF92aWRfY2FwKHN0cnUKIAkJdG9fc29jX2NhbWVyYV9ob3N0KGljZC0+ZGV2LnBhcmVudCk7
CiAJaW50IHJldDsKIAlzdHJ1Y3QgdjRsMl9yZWN0IHJlY3Q7Ci0JY29uc3Qgc3RhdGljIHN0cnVj
dCBzb2NfY2FtZXJhX2RhdGFfZm9ybWF0ICpkYXRhX2ZtdDsKKwlpbnQgcGl4ZWxfZm9ybWF0Owog
CiAJV0FSTl9PTihwcml2ICE9IGZpbGUtPnByaXZhdGVfZGF0YSk7CiAKLQlkYXRhX2ZtdCA9IGZv
cm1hdF9ieV9mb3VyY2MoaWNkLCBmLT5mbXQucGl4LnBpeGVsZm9ybWF0KTsKLQlpZiAoIWRhdGFf
Zm10KQorCXBpeGVsX2Zvcm1hdCA9IGZvdXJjY190b19waXhlbF9mb3JtYXQoZi0+Zm10LnBpeC5w
aXhlbGZvcm1hdCwKKwkJCQkJICAgICAgJmljZC0+c3VwcG9ydGVkX2Zvcm1hdHMpOworCWlmIChw
aXhlbF9mb3JtYXQgPCAwKQogCQlyZXR1cm4gLUVJTlZBTDsKIAogCS8qIGJ1c3dpZHRoIG1heSBi
ZSBmdXJ0aGVyIGFkanVzdGVkIGJ5IHRoZSBpY2kgKi8KLQlpY2QtPmJ1c3dpZHRoID0gZGF0YV9m
bXQtPmRlcHRoOworCWljZC0+YnVzd2lkdGggPSBnZXRfcGl4ZWxfZm9ybWF0X2JwcChwaXhlbF9m
b3JtYXQpOwogCiAJcmV0ID0gc29jX2NhbWVyYV90cnlfZm10X3ZpZF9jYXAoZmlsZSwgaWNmLCBm
KTsKIAlpZiAocmV0IDwgMCkKQEAgLTM1NSw3ICszNDYsNyBAQCBzdGF0aWMgaW50IHNvY19jYW1l
cmFfc19mbXRfdmlkX2NhcChzdHJ1CiAJaWYgKHJldCA8IDApCiAJCXJldHVybiByZXQ7CiAKLQlp
Y2QtPmN1cnJlbnRfZm10CT0gZGF0YV9mbXQ7CisJaWNkLT5jdXJyZW50X2Zvcm1hdAk9IHBpeGVs
X2Zvcm1hdDsKIAlpY2QtPndpZHRoCQk9IHJlY3Qud2lkdGg7CiAJaWNkLT5oZWlnaHQJCT0gcmVj
dC5oZWlnaHQ7CiAJaWNmLT52Yl92aWRxLmZpZWxkCT0gZi0+Zm10LnBpeC5maWVsZDsKQEAgLTM3
NSwxOCArMzY2LDEwIEBAIHN0YXRpYyBpbnQgc29jX2NhbWVyYV9lbnVtX2ZtdF92aWRfY2FwKHMK
IHsKIAlzdHJ1Y3Qgc29jX2NhbWVyYV9maWxlICppY2YgPSBmaWxlLT5wcml2YXRlX2RhdGE7CiAJ
c3RydWN0IHNvY19jYW1lcmFfZGV2aWNlICppY2QgPSBpY2YtPmljZDsKLQljb25zdCBzdHJ1Y3Qg
c29jX2NhbWVyYV9kYXRhX2Zvcm1hdCAqZm9ybWF0OwogCiAJV0FSTl9PTihwcml2ICE9IGZpbGUt
PnByaXZhdGVfZGF0YSk7CiAKLQlpZiAoZi0+aW5kZXggPj0gaWNkLT5udW1fZm9ybWF0cykKLQkJ
cmV0dXJuIC1FSU5WQUw7Ci0KLQlmb3JtYXQgPSAmaWNkLT5mb3JtYXRzW2YtPmluZGV4XTsKLQot
CXN0cmxjcHkoZi0+ZGVzY3JpcHRpb24sIGZvcm1hdC0+bmFtZSwgc2l6ZW9mKGYtPmRlc2NyaXB0
aW9uKSk7Ci0JZi0+cGl4ZWxmb3JtYXQgPSBmb3JtYXQtPmZvdXJjYzsKLQlyZXR1cm4gMDsKKwly
ZXR1cm4gcGl4ZWxfZm9ybWF0X2VudW1fZm10ZGVzYyhmLCAmaWNkLT5zdXBwb3J0ZWRfZm9ybWF0
cyk7CiB9CiAKIHN0YXRpYyBpbnQgc29jX2NhbWVyYV9nX2ZtdF92aWRfY2FwKHN0cnVjdCBmaWxl
ICpmaWxlLCB2b2lkICpwcml2LApAQCAtMzk0LDE5ICszNzcsMjAgQEAgc3RhdGljIGludCBzb2Nf
Y2FtZXJhX2dfZm10X3ZpZF9jYXAoc3RydQogewogCXN0cnVjdCBzb2NfY2FtZXJhX2ZpbGUgKmlj
ZiA9IGZpbGUtPnByaXZhdGVfZGF0YTsKIAlzdHJ1Y3Qgc29jX2NhbWVyYV9kZXZpY2UgKmljZCA9
IGljZi0+aWNkOworCWludCBkZXB0aCA9IGdldF9waXhlbF9mb3JtYXRfYnBwKGljZC0+Y3VycmVu
dF9mb3JtYXQpOwogCiAJV0FSTl9PTihwcml2ICE9IGZpbGUtPnByaXZhdGVfZGF0YSk7CiAKIAlm
LT5mbXQucGl4LndpZHRoCT0gaWNkLT53aWR0aDsKIAlmLT5mbXQucGl4LmhlaWdodAk9IGljZC0+
aGVpZ2h0OwogCWYtPmZtdC5waXguZmllbGQJPSBpY2YtPnZiX3ZpZHEuZmllbGQ7Ci0JZi0+Zm10
LnBpeC5waXhlbGZvcm1hdAk9IGljZC0+Y3VycmVudF9mbXQtPmZvdXJjYzsKKwlmLT5mbXQucGl4
LnBpeGVsZm9ybWF0CT0gZ2V0X3BpeGVsX2Zvcm1hdF9mb3VyY2MoaWNkLT5jdXJyZW50X2Zvcm1h
dCk7CiAJZi0+Zm10LnBpeC5ieXRlc3BlcmxpbmUJPQotCQkoZi0+Zm10LnBpeC53aWR0aCAqIGlj
ZC0+Y3VycmVudF9mbXQtPmRlcHRoKSA+PiAzOworCQkoZi0+Zm10LnBpeC53aWR0aCAqIGRlcHRo
KSA+PiAzOwogCWYtPmZtdC5waXguc2l6ZWltYWdlCT0KIAkJZi0+Zm10LnBpeC5oZWlnaHQgKiBm
LT5mbXQucGl4LmJ5dGVzcGVybGluZTsKIAlkZXZfZGJnKCZpY2QtPmRldiwgImN1cnJlbnRfZm10
LT5mb3VyY2M6IDB4JTA4eFxuIiwKLQkJaWNkLT5jdXJyZW50X2ZtdC0+Zm91cmNjKTsKKwkJZi0+
Zm10LnBpeC5waXhlbGZvcm1hdCk7CiAJcmV0dXJuIDA7CiB9CiAKQEAgLTkzOSw5ICs5MjMsOSBA
QCBpbnQgc29jX2NhbWVyYV92aWRlb19zdGFydChzdHJ1Y3Qgc29jX2NhCiAJdmRldi0+aW9jdGxf
b3BzCQk9ICZzb2NfY2FtZXJhX2lvY3RsX29wczsKIAl2ZGV2LT5yZWxlYXNlCQk9IHZpZGVvX2Rl
dmljZV9yZWxlYXNlOwogCXZkZXYtPm1pbm9yCQk9IC0xOwotCXZkZXYtPnR2bm9ybXMJCT0gVjRM
Ml9TVERfVU5LTk9XTiwKKwl2ZGV2LT50dm5vcm1zCQk9IFY0TDJfU1REX1VOS05PV047CiAKLQlp
Y2QtPmN1cnJlbnRfZm10ID0gJmljZC0+Zm9ybWF0c1swXTsKKwlpY2QtPmN1cnJlbnRfZm9ybWF0
ID0gZGVmYXVsdF9waXhlbF9mb3JtYXQoJmljZC0+c3VwcG9ydGVkX2Zvcm1hdHMpOwogCiAJZXJy
ID0gdmlkZW9fcmVnaXN0ZXJfZGV2aWNlKHZkZXYsIFZGTF9UWVBFX0dSQUJCRVIsIHZkZXYtPm1p
bm9yKTsKIAlpZiAoZXJyIDwgMCkgewotLS0gMDAwMi9kcml2ZXJzL21lZGlhL3ZpZGVvL3NvY19j
YW1lcmFfcGxhdGZvcm0uYworKysgd29yay9kcml2ZXJzL21lZGlhL3ZpZGVvL3NvY19jYW1lcmFf
cGxhdGZvcm0uYwkyMDA4LTEwLTE1IDIyOjEwOjE5LjAwMDAwMDAwMCArMDkwMApAQCAtMjMsNyAr
MjMsNiBAQAogc3RydWN0IHNvY19jYW1lcmFfcGxhdGZvcm1fcHJpdiB7CiAJc3RydWN0IHNvY19j
YW1lcmFfcGxhdGZvcm1faW5mbyAqaW5mbzsKIAlzdHJ1Y3Qgc29jX2NhbWVyYV9kZXZpY2UgaWNk
OwotCXN0cnVjdCBzb2NfY2FtZXJhX2RhdGFfZm9ybWF0IGZvcm1hdDsKIH07CiAKIHN0YXRpYyBz
dHJ1Y3Qgc29jX2NhbWVyYV9wbGF0Zm9ybV9pbmZvICoKQEAgLTk4LDE1ICs5NywxNCBAQCBzdGF0
aWMgaW50IHNvY19jYW1lcmFfcGxhdGZvcm1fdHJ5X2ZtdF9jCiBzdGF0aWMgaW50IHNvY19jYW1l
cmFfcGxhdGZvcm1fdmlkZW9fcHJvYmUoc3RydWN0IHNvY19jYW1lcmFfZGV2aWNlICppY2QpCiB7
CiAJc3RydWN0IHNvY19jYW1lcmFfcGxhdGZvcm1fcHJpdiAqcHJpdjsKLQlwcml2ID0gY29udGFp
bmVyX29mKGljZCwgc3RydWN0IHNvY19jYW1lcmFfcGxhdGZvcm1fcHJpdiwgaWNkKTsKKwlpbnQg
cGl4ZWxfZm9ybWF0OwogCi0JcHJpdi0+Zm9ybWF0Lm5hbWUgPSBwcml2LT5pbmZvLT5mb3JtYXRf
bmFtZTsKLQlwcml2LT5mb3JtYXQuZGVwdGggPSBwcml2LT5pbmZvLT5mb3JtYXRfZGVwdGg7Ci0J
cHJpdi0+Zm9ybWF0LmZvdXJjYyA9IHByaXYtPmluZm8tPmZvcm1hdC5waXhlbGZvcm1hdDsKLQlw
cml2LT5mb3JtYXQuY29sb3JzcGFjZSA9IHByaXYtPmluZm8tPmZvcm1hdC5jb2xvcnNwYWNlOwor
CXByaXYgPSBjb250YWluZXJfb2YoaWNkLCBzdHJ1Y3Qgc29jX2NhbWVyYV9wbGF0Zm9ybV9wcml2
LCBpY2QpOwogCi0JaWNkLT5mb3JtYXRzID0gJnByaXYtPmZvcm1hdDsKLQlpY2QtPm51bV9mb3Jt
YXRzID0gMTsKKwlwaXhlbF9mb3JtYXQgPSBmb3VyY2NfdG9fcGl4ZWxfZm9ybWF0KHByaXYtPmlu
Zm8tPmZvcm1hdC5waXhlbGZvcm1hdCwKKwkJCQkJICAgICAgTlVMTCk7CisJQlVHX09OKChwaXhl
bF9mb3JtYXQgPCAwKSB8fCAocGl4ZWxfZm9ybWF0ID49IE5SX1BJWEVMX0ZPUk1BVFMpKTsKKwlz
ZXRfYml0KHBpeGVsX2Zvcm1hdCwgaWNkLT5zdXBwb3J0ZWRfZm9ybWF0cy5iaXRzKTsKIAogCXJl
dHVybiBzb2NfY2FtZXJhX3ZpZGVvX3N0YXJ0KGljZCk7CiB9Ci0tLSAvZGV2L251bGwKKysrIHdv
cmsvaW5jbHVkZS9tZWRpYS9waXhlbF9mb3JtYXQuaAkyMDA4LTEwLTE1IDIxOjQ4OjIyLjAwMDAw
MDAwMCArMDkwMApAQCAtMCwwICsxLDcxIEBACisKKyNpZm5kZWYgX19QSVhFTF9GT1JNQVRfSF9f
CisjZGVmaW5lIF9fUElYRUxfRk9STUFUX0hfXworCisjaW5jbHVkZSA8bGludXgvaW5pdC5oPgor
I2luY2x1ZGUgPGxpbnV4L2JpdG1hcC5oPgorCitlbnVtIHY0bDJfcGl4ZWxfZm9ybWF0IHsKKwlQ
SVhFTF9GT1JNQVRfUkdCMzMyID0gMCwKKwlQSVhFTF9GT1JNQVRfUkdCNDQ0LAorCVBJWEVMX0ZP
Uk1BVF9SR0I1NTUsCisJUElYRUxfRk9STUFUX1JHQjU2NSwKKwlQSVhFTF9GT1JNQVRfUkdCNTU1
WCwKKwlQSVhFTF9GT1JNQVRfUkdCNTY1WCwKKwlQSVhFTF9GT1JNQVRfQkdSMjQsCisJUElYRUxf
Rk9STUFUX1JHQjI0LAorCVBJWEVMX0ZPUk1BVF9CR1IzMiwKKwlQSVhFTF9GT1JNQVRfUkdCMzIs
CisJUElYRUxfRk9STUFUX0dSRVksCisJUElYRUxfRk9STUFUX1kxNiwKKwlQSVhFTF9GT1JNQVRf
UEFMOCwKKwlQSVhFTF9GT1JNQVRfWVZVNDEwLAorCVBJWEVMX0ZPUk1BVF9ZVlU0MjAsCisJUElY
RUxfRk9STUFUX1lVWVYsCisJUElYRUxfRk9STUFUX1VZVlksCisJUElYRUxfRk9STUFUX1lVVjQy
MlAsCisJUElYRUxfRk9STUFUX1lVVjQxMVAsCisJUElYRUxfRk9STUFUX1k0MVAsCisJUElYRUxf
Rk9STUFUX1lVVjQ0NCwKKwlQSVhFTF9GT1JNQVRfWVVWNTU1LAorCVBJWEVMX0ZPUk1BVF9ZVVY1
NjUsCisJUElYRUxfRk9STUFUX1lVVjMyLAorCVBJWEVMX0ZPUk1BVF9OVjEyLAorCVBJWEVMX0ZP
Uk1BVF9OVjIxLAorCVBJWEVMX0ZPUk1BVF9ZVVY0MTAsCisJUElYRUxfRk9STUFUX1lVVjQyMCwK
KwlQSVhFTF9GT1JNQVRfWVlVViwKKwlQSVhFTF9GT1JNQVRfSEkyNDAsCisJUElYRUxfRk9STUFU
X0hNMTIsCisJUElYRUxfRk9STUFUX1NCR0dSOCwKKwlQSVhFTF9GT1JNQVRfU0dCUkc4LAorCVBJ
WEVMX0ZPUk1BVF9TQkdHUjE2LAorCVBJWEVMX0ZPUk1BVF9NSlBFRywKKwlQSVhFTF9GT1JNQVRf
SlBFRywKKwlQSVhFTF9GT1JNQVRfRFYsCisJUElYRUxfRk9STUFUX01QRUcsCisJUElYRUxfRk9S
TUFUX1dOVkEsCisJUElYRUxfRk9STUFUX1NOOUMxMFgsCisJUElYRUxfRk9STUFUX1BXQzEsCisJ
UElYRUxfRk9STUFUX1BXQzIsCisJUElYRUxfRk9STUFUX0VUNjFYMjUxLAorCVBJWEVMX0ZPUk1B
VF9TUENBNTAxLAorCVBJWEVMX0ZPUk1BVF9TUENBNTA1LAorCVBJWEVMX0ZPUk1BVF9TUENBNTA4
LAorCVBJWEVMX0ZPUk1BVF9TUENBNTYxLAorCVBJWEVMX0ZPUk1BVF9QQUMyMDcsCisJUElYRUxf
Rk9STUFUX1BKUEcsCisJUElYRUxfRk9STUFUX1lWWVUsCisJTlJfUElYRUxfRk9STUFUUywKK307
CisKK3N0cnVjdCBwaXhlbF9mb3JtYXRzIHsgREVDTEFSRV9CSVRNQVAoYml0cywgTlJfUElYRUxf
Rk9STUFUUyk7IH07CisKK2ludCBmb3VyY2NfdG9fcGl4ZWxfZm9ybWF0KF9fdTMyIGZvdXJjYywg
c3RydWN0IHBpeGVsX2Zvcm1hdHMgKnN1cHBvcnRlZCk7CitpbnQgZGVmYXVsdF9waXhlbF9mb3Jt
YXQoc3RydWN0IHBpeGVsX2Zvcm1hdHMgKnN1cHBvcnRlZCk7CitpbnQgZ2V0X3BpeGVsX2Zvcm1h
dF9icHAoZW51bSB2NGwyX3BpeGVsX2Zvcm1hdCBwaXhlbF9mb3JtYXQpOworaW50IGdldF9waXhl
bF9mb3JtYXRfZm91cmNjKGVudW0gdjRsMl9waXhlbF9mb3JtYXQgcGl4ZWxfZm9ybWF0KTsKK2lu
dCBwaXhlbF9mb3JtYXRfZW51bV9mbXRkZXNjKHN0cnVjdCB2NGwyX2ZtdGRlc2MgKmYsCisJCQkg
ICAgICBzdHJ1Y3QgcGl4ZWxfZm9ybWF0cyAqc3VwcG9ydGVkKTsKKworI2VuZGlmIC8qIF9fUElY
RUxfRk9STUFUX0hfXyAqLwotLS0gMDAwMS9pbmNsdWRlL21lZGlhL3NvY19jYW1lcmEuaAorKysg
d29yay9pbmNsdWRlL21lZGlhL3NvY19jYW1lcmEuaAkyMDA4LTEwLTE1IDIxOjM4OjI2LjAwMDAw
MDAwMCArMDkwMApAQCAtMTQsNiArMTQsNyBAQAogCiAjaW5jbHVkZSA8bGludXgvdmlkZW9kZXYy
Lmg+CiAjaW5jbHVkZSA8bWVkaWEvdmlkZW9idWYtY29yZS5oPgorI2luY2x1ZGUgPG1lZGlhL3Bp
eGVsX2Zvcm1hdC5oPgogI2luY2x1ZGUgPGxpbnV4L3BtLmg+CiAKIHN0cnVjdCBzb2NfY2FtZXJh
X2RldmljZSB7CkBAIC0zOCw5ICszOSw4IEBAIHN0cnVjdCBzb2NfY2FtZXJhX2RldmljZSB7CiAJ
dW5zaWduZWQgY2hhciBidXN3aWR0aDsJCS8qIFNlZSBjb21tZW50IGluIC5jICovCiAJc3RydWN0
IHNvY19jYW1lcmFfb3BzICpvcHM7CiAJc3RydWN0IHZpZGVvX2RldmljZSAqdmRldjsKLQljb25z
dCBzdHJ1Y3Qgc29jX2NhbWVyYV9kYXRhX2Zvcm1hdCAqY3VycmVudF9mbXQ7Ci0JY29uc3Qgc3Ry
dWN0IHNvY19jYW1lcmFfZGF0YV9mb3JtYXQgKmZvcm1hdHM7Ci0JaW50IG51bV9mb3JtYXRzOwor
CXN0cnVjdCBwaXhlbF9mb3JtYXRzIHN1cHBvcnRlZF9mb3JtYXRzOworCWVudW0gdjRsMl9waXhl
bF9mb3JtYXQgY3VycmVudF9mb3JtYXQ7CiAJc3RydWN0IG1vZHVsZSAqb3duZXI7CiAJLyogc29j
X2NhbWVyYS5jIHByaXZhdGUgY291bnQuIE9ubHkgYWNjZXNzZWQgd2l0aCB2aWRlb19sb2NrIGhl
bGQgKi8KIAlpbnQgdXNlX2NvdW50Owo=
------=_Part_383_7371032.1224211671848
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

--
video4linux-list mailing list
Unsubscribe mailto:video4linux-list-request@redhat.com?subject=unsubscribe
https://www.redhat.com/mailman/listinfo/video4linux-list
------=_Part_383_7371032.1224211671848--
