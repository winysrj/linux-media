Return-path: <video4linux-list-bounces@redhat.com>
Received: from mx3.redhat.com (mx3.redhat.com [172.16.48.32])
	by int-mx2.corp.redhat.com (8.13.1/8.13.1) with ESMTP id m8PBUAFT011064
	for <video4linux-list@redhat.com>; Thu, 25 Sep 2008 07:30:10 -0400
Received: from wf-out-1314.google.com (wf-out-1314.google.com [209.85.200.169])
	by mx3.redhat.com (8.13.8/8.13.8) with ESMTP id m8PBTtTq004141
	for <video4linux-list@redhat.com>; Thu, 25 Sep 2008 07:29:56 -0400
Received: by wf-out-1314.google.com with SMTP id 25so448914wfc.6
	for <video4linux-list@redhat.com>; Thu, 25 Sep 2008 04:29:55 -0700 (PDT)
Message-ID: <208cbae30809250429m64c1c552ud18ff5064602e3c0@mail.gmail.com>
Date: Thu, 25 Sep 2008 15:29:55 +0400
From: "Alexey Klimov" <klimov.linux@gmail.com>
To: video4linux-list@redhat.com
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----=_Part_20424_16703633.1222342195477"
Subject: radio-mr800 usb driver
List-Unsubscribe: <https://www.redhat.com/mailman/listinfo/video4linux-list>,
	<mailto:video4linux-list-request@redhat.com?subject=unsubscribe>
List-Archive: <https://www.redhat.com/mailman/private/video4linux-list>
List-Post: <mailto:video4linux-list@redhat.com>
List-Help: <mailto:video4linux-list-request@redhat.com?subject=help>
List-Subscribe: <https://www.redhat.com/mailman/listinfo/video4linux-list>,
	<mailto:video4linux-list-request@redhat.com?subject=subscribe>
Sender: video4linux-list-bounces@redhat.com
Errors-To: video4linux-list-bounces@redhat.com
List-ID: <video4linux-list@redhat.com>

------=_Part_20424_16703633.1222342195477
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hello, there

First of all - sorry for my english.

I wrote driver (for linux kernel) for MR 800 USB FM Radio from AverMedia:

http://www.avermedia.com/cgi-bin/products_multimedia_usbradio.asp?show=11

Well, actually it's simple kernel module using Video for Linux 2
interface to communicate with userspace programs & i use
usb_bulk_msg() to communicate with usb subsystem. No new interfaces (+
no assembler code) - just old one's. There are 2 usb radio devices
(using v4l2) - D-Link/Gemtek USB FM radio and Silicon Labs Si470x FM
Radio, so i use this two drivers as base to create/to develop driver
for AverMedia USB Radio.

One of problems is that this usb device isn't widely-distributed
(maybe i'm wrong) and i don't know how to test module widely.

Actually, now this driver is simple & farther development required
(add some radio tuning stuff, make more x86 independence, maybe add
more power-management stuff, correct mistakes, etc).

Driver works fine with kradio & gnomeradio applications. Works normal
under Linux kernel  2.6.27-rc6 (released 9 Sep 2008), compiles without
warnings with gcc version 4.3.1 (Gentoo 4.3.1-r1 p1.1) on
x86-architecture machine.

Mauro Carvalho Chehab gave me instructions how to make patch-file. So,
here we go. May be you can test it or (actually i don't exactly know
the procedure) point out mistakes, etc.

Best regards, Klimov Alexey.

------=_Part_20424_16703633.1222342195477
Content-Type: application/octet-stream; name=radio-mr800.patch
Content-Transfer-Encoding: base64
X-Attachment-Id: f_fljaose20
Content-Disposition: attachment; filename=radio-mr800.patch

ZGlmZiAtciBlNWNhNDUzNGI1NDMgbGludXgvZHJpdmVycy9tZWRpYS9yYWRpby9LY29uZmlnCi0t
LSBhL2xpbnV4L2RyaXZlcnMvbWVkaWEvcmFkaW8vS2NvbmZpZwlUdWUgU2VwIDA5IDA4OjI5OjU2
IDIwMDggLTA3MDAKKysrIGIvbGludXgvZHJpdmVycy9tZWRpYS9yYWRpby9LY29uZmlnCU1vbiBT
ZXAgMjIgMTY6Mzc6MzAgMjAwOCArMDQwMApAQCAtMzYxLDQgKzM2MSwxNiBAQAogCSAgVG8gY29t
cGlsZSB0aGlzIGRyaXZlciBhcyBhIG1vZHVsZSwgY2hvb3NlIE0gaGVyZTogdGhlCiAJICBtb2R1
bGUgd2lsbCBiZSBjYWxsZWQgcmFkaW8tc2lsYWJzLgogCitjb25maWcgVVNCX01SODAwCisJdHJp
c3RhdGUgIkF2ZXJNZWRpYSBNUiA4MDAgVVNCIEZNIHJhZGlvIHN1cHBvcnQiCisJZGVwZW5kcyBv
biBVU0IgJiYgVklERU9fVjRMMgorCS0tLWhlbHAtLS0KKwkgIFNheSBZIGhlcmUgaWYgeW91IHdh
bnQgdG8gY29ubmVjdCB0aGlzIHR5cGUgb2YgcmFkaW8gdG8geW91cgorCSAgY29tcHV0ZXIncyBV
U0IgcG9ydC4gTm90ZSB0aGF0IHRoZSBhdWRpbyBpcyBub3QgZGlnaXRhbCwgYW5kCisJICB5b3Ug
bXVzdCBjb25uZWN0IHRoZSBsaW5lIG91dCBjb25uZWN0b3IgdG8gYSBzb3VuZCBjYXJkIG9yIGEK
KwkgIHNldCBvZiBzcGVha2Vycy4KKworCSAgVG8gY29tcGlsZSB0aGlzIGRyaXZlciBhcyBhIG1v
ZHVsZSwgY2hvb3NlIE0gaGVyZTogdGhlCisJICBtb2R1bGUgd2lsbCBiZSBjYWxsZWQgcmFkaW8t
bXI4MDAuCisKIGVuZGlmICMgUkFESU9fQURBUFRFUlMKZGlmZiAtciBlNWNhNDUzNGI1NDMgbGlu
dXgvZHJpdmVycy9tZWRpYS9yYWRpby9NYWtlZmlsZQotLS0gYS9saW51eC9kcml2ZXJzL21lZGlh
L3JhZGlvL01ha2VmaWxlCVR1ZSBTZXAgMDkgMDg6Mjk6NTYgMjAwOCAtMDcwMAorKysgYi9saW51
eC9kcml2ZXJzL21lZGlhL3JhZGlvL01ha2VmaWxlCU1vbiBTZXAgMjIgMTY6Mzc6MzAgMjAwOCAr
MDQwMApAQCAtMTgsNSArMTgsNiBAQAogb2JqLSQoQ09ORklHX1JBRElPX01BRVNUUk8pICs9IHJh
ZGlvLW1hZXN0cm8ubwogb2JqLSQoQ09ORklHX1VTQl9EU0JSKSArPSBkc2JyMTAwLm8KIG9iai0k
KENPTkZJR19VU0JfU0k0NzBYKSArPSByYWRpby1zaTQ3MHgubworb2JqLSQoQ09ORklHX1VTQl9N
UjgwMCkgKz0gcmFkaW8tbXI4MDAubwogCiBFWFRSQV9DRkxBR1MgKz0gLUlzb3VuZApkaWZmIC1y
IGU1Y2E0NTM0YjU0MyBsaW51eC9kcml2ZXJzL21lZGlhL3JhZGlvL3JhZGlvLW1yODAwLmMKLS0t
IC9kZXYvbnVsbAlUaHUgSmFuIDAxIDAwOjAwOjAwIDE5NzAgKzAwMDAKKysrIGIvbGludXgvZHJp
dmVycy9tZWRpYS9yYWRpby9yYWRpby1tcjgwMC5jCU1vbiBTZXAgMjIgMTY6Mzc6MzAgMjAwOCAr
MDQwMApAQCAtMCwwICsxLDYwMCBAQAorLyoKKyAqIEEgZHJpdmVyIGZvciB0aGUgQXZlck1lZGlh
IE1SIDgwMCBVU0IgRk0gcmFkaW8uIFRoaXMgZGV2aWNlIHBsdWdzCisgKiBpbnRvIGJvdGggdGhl
IFVTQiBhbmQgYW4gYW5hbG9nIGF1ZGlvIGlucHV0LCBzbyB0aGlzIHRoaW5nCisgKiBvbmx5IGRl
YWxzIHdpdGggaW5pdGlhbGl6YXRpb24gYW5kIGZyZXF1ZW5jeSBzZXR0aW5nLCB0aGUKKyAqIGF1
ZGlvIGRhdGEgaGFzIHRvIGJlIGhhbmRsZWQgYnkgYSBzb3VuZCBkcml2ZXIuCisgKgorICogQ29w
eXJpZ2h0IChjKSAyMDA4IEFsZXhleSBLbGltb3YgPGtsaW1vdi5saW51eEBnbWFpbC5jb20+Cisg
KgorICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRl
IGl0IGFuZC9vciBtb2RpZnkKKyAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVy
YWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5CisgKiB0aGUgRnJlZSBTb2Z0d2FyZSBG
b3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvcgorICogKGF0IHlv
dXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKyAqCisgKiBUaGlzIHByb2dyYW0gaXMgZGlz
dHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKKyAqIGJ1dCBXSVRI
T1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCisg
KiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBT
ZWUgdGhlCisgKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgor
ICoKKyAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFs
IFB1YmxpYyBMaWNlbnNlCisgKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbTsgaWYgbm90LCB3cml0
ZSB0byB0aGUgRnJlZSBTb2Z0d2FyZQorICogRm91bmRhdGlvbiwgSW5jLiwgNTkgVGVtcGxlIFBs
YWNlLCBTdWl0ZSAzMzAsIEJvc3RvbiwgTUEgMDIxMTEtMTMwNyBVU0EKKyAqLworCisvKgorICog
QmlnIHRoYW5rcyB0byBhdXRob3JzIG9mIGRzYnIxMDAuYyBhbmQgcmFkaW8tc2k0NzB4LmMKKyAq
CisgKiBXaGVuIHdvcmsgd2FzIGxvb2tlZCBwcmV0dHkgZ29vZCwgaSBkaXNjb3ZlciB0aGlzOgor
ICogaHR0cDovL2F2LXVzYnJhZGlvLnNvdXJjZWZvcmdlLm5ldC9pbmRleC5waHAKKyAqIGh0dHA6
Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvYXYtdXNicmFkaW8vCisgKiBMYXRlc3QgcmVsZWFz
ZSBvZiB0aGVpcnMgcHJvamVjdCB3YXMgaW4gMjAwNS4KKyAqIFByb2JhYmx5LCB0aGlzIGRyaXZl
ciBjb3VsZCBiZSBpbXByb3ZlZCB0cm91Z2ggdXNpbmcgdGhlaXIKKyAqIGFjaGlldmVtZW50cyAo
c3BlY2lmaWNhdGlvbnMgZ2l2ZW4pLgorICogU28sIHdlIGhhdmUgc210aCB0byBiZWdpbiB3aXRo
LgorICoKKyAqIEhpc3Rvcnk6CisgKiBWZXJzaW9uIDAuMDE6Rmlyc3Qgd29ya2luZyB2ZXJzaW9u
LgorICogCQlJdCdzIHJlcXVpcmVkIHRvIGJsYWNrbGlzdCBBdmVyTWVkaWEgVVNCIFJhZGlvCisg
KiAJCWluIHVzYmhpZC9oaWQtcXVpcmtzLmMKKyAqCisgKiBNYW55IHRoaW5ncyB0byBkbzoKKyAq
IAktIENvcnJlY3QgcG93ZXIgbWFuYWdtZW50IG9mIGRldmljZSAoc3VzcGVuZCAmIHJlc3VtZSkK
KyAqIAktIE1ha2UgeDg2IGluZGVwZW5kYW5jZSAobGl0dGxlLWVuZGlhbiBhbmQgYmlnLWVuZGlh
biBzdHVmZikKKyAqIAktIEFkZCBjb2RlIGZvciBzY2FubmluZyBhbmQgc21vb3RoIHR1bmluZwor
ICogCS0gQ2hlY2tlZCBhbmQgYWRkIHN0ZXJlbyZtb25vIHN0dWZmCisgKiAJLSBBZGQgY29kZSBm
b3Igc2Vuc2l0aXZpdHkgdmFsdWUKKyAqIAktIENvcnJlY3QgbWlzdGFrZXMKKyAqIAktIEluIEph
cGFuIGFub3RoZXIgRlJFUV9NSU4gYW5kIEZSRVFfTUFYCisgKi8KKworLyoga2VybmVsIGluY2x1
ZGVzICovCisjaW5jbHVkZSA8bGludXgva2VybmVsLmg+CisjaW5jbHVkZSA8bGludXgvbW9kdWxl
Lmg+CisjaW5jbHVkZSA8bGludXgvaW5pdC5oPgorI2luY2x1ZGUgPGxpbnV4L3NsYWIuaD4KKyNp
bmNsdWRlIDxsaW51eC9pbnB1dC5oPgorI2luY2x1ZGUgPGxpbnV4L3ZpZGVvZGV2Mi5oPgorI2lu
Y2x1ZGUgPG1lZGlhL3Y0bDItY29tbW9uLmg+CisjaW5jbHVkZSA8bWVkaWEvdjRsMi1pb2N0bC5o
PgorI2luY2x1ZGUgPGxpbnV4L3VzYi5oPgorI2luY2x1ZGUgPGxpbnV4L3ZlcnNpb24uaD4JLyog
Zm9yIEtFUk5FTF9WRVJTSU9OIE1BQ1JPICovCisKKy8qIGRyaXZlciBhbmQgbW9kdWxlIGRlZmlu
aXRpb25zICovCisjZGVmaW5lIERSSVZFUl9BVVRIT1IgIkFsZXhleSBLbGltb3YgPGtsaW1vdi5s
aW51eEBnbWFpbC5jb20+IgorI2RlZmluZSBEUklWRVJfREVTQyAiQXZlck1lZGlhIE1SIDgwMCBV
U0IgRk0gcmFkaW8gZHJpdmVyIgorI2RlZmluZSBEUklWRVJfVkVSU0lPTiAiMC4wMSIKKyNkZWZp
bmUgUkFESU9fVkVSU0lPTiBLRVJORUxfVkVSU0lPTigwLCAwLCAxKQorCitNT0RVTEVfQVVUSE9S
KERSSVZFUl9BVVRIT1IpOworTU9EVUxFX0RFU0NSSVBUSU9OKERSSVZFUl9ERVNDKTsKK01PRFVM
RV9MSUNFTlNFKCJHUEwiKTsKKworI2RlZmluZSBVU0JfQU1SQURJT19WRU5ET1IgMHgwN2NhCisj
ZGVmaW5lIFVTQl9BTVJBRElPX1BST0RVQ1QgMHhiODAwCisKKy8qIFByb2JhYmx5IFVTQl9USU1F
T1VUIHNob3VsZCBiZSBtb2RpZmllZCBpbiBtb2R1bGUgcGFyYW1ldGVyICovCisjZGVmaW5lIEJV
RkZFUl9MRU5HVEggOAorI2RlZmluZSBVU0JfVElNRU9VVCA1MDAKKworLyogRnJlcXVlbmN5IGxp
bWl0cyBpbiBNSHogLS0gdGhlc2UgYXJlIEV1cm9wZWFuIHZhbHVlcy4gIEZvciBKYXBhbmVzZQor
ZGV2aWNlcywgdGhhdCB3b3VsZCBiZSA3NiBhbmQgOTEuICAqLworI2RlZmluZSBGUkVRX01JTiAg
ODcuNQorI2RlZmluZSBGUkVRX01BWCAxMDguMAorI2RlZmluZSBGUkVRX01VTCAxNjAwMAorCisv
KiBtb2R1bGUgcGFyYW1ldGVyICovCitzdGF0aWMgaW50IHJhZGlvX25yID0gLTE7Cittb2R1bGVf
cGFyYW0ocmFkaW9fbnIsIGludCwgMCk7CitNT0RVTEVfUEFSTV9ERVNDKHJhZGlvX25yLCAiUmFk
aW8gTnIiKTsKKworc3RhdGljIHN0cnVjdCB2NGwyX3F1ZXJ5Y3RybCByYWRpb19xY3RybFtdID0g
eworCXsKKwkJLmlkICAgICAgICAgICAgPSBWNEwyX0NJRF9BVURJT19NVVRFLAorCQkubmFtZSAg
ICAgICAgICA9ICJNdXRlIiwKKwkJLm1pbmltdW0gICAgICAgPSAwLAorCQkubWF4aW11bSAgICAg
ICA9IDEsCisJCS5zdGVwCSAgICAgICA9IDEsCisJCS5kZWZhdWx0X3ZhbHVlID0gMSwKKwkJLnR5
cGUgICAgICAgICAgPSBWNEwyX0NUUkxfVFlQRV9CT09MRUFOLAorCX0sCisvKiBISU5UOiB0aGUg
ZGlzYWJsZWQgY29udHJvbHMgYXJlIG9ubHkgaGVyZSB0byBzYXRpZnkga3JhZGlvIGFuZCBzdWNo
IGFwcHMgKi8KKwl7CS5pZAkJPSBWNEwyX0NJRF9BVURJT19WT0xVTUUsCisJCS5mbGFncwkJPSBW
NEwyX0NUUkxfRkxBR19ESVNBQkxFRCwKKwl9LAorCXsKKwkJLmlkCQk9IFY0TDJfQ0lEX0FVRElP
X0JBTEFOQ0UsCisJCS5mbGFncwkJPSBWNEwyX0NUUkxfRkxBR19ESVNBQkxFRCwKKwl9LAorCXsK
KwkJLmlkCQk9IFY0TDJfQ0lEX0FVRElPX0JBU1MsCisJCS5mbGFncwkJPSBWNEwyX0NUUkxfRkxB
R19ESVNBQkxFRCwKKwl9LAorCXsKKwkJLmlkCQk9IFY0TDJfQ0lEX0FVRElPX1RSRUJMRSwKKwkJ
LmZsYWdzCQk9IFY0TDJfQ1RSTF9GTEFHX0RJU0FCTEVELAorCX0sCisJeworCQkuaWQJCT0gVjRM
Ml9DSURfQVVESU9fTE9VRE5FU1MsCisJCS5mbGFncwkJPSBWNEwyX0NUUkxfRkxBR19ESVNBQkxF
RCwKKwl9LAorfTsKKworc3RhdGljIGludCB1c2JfYW1yYWRpb19wcm9iZShzdHJ1Y3QgdXNiX2lu
dGVyZmFjZSAqaW50ZiwKKwkJCSAgICAgY29uc3Qgc3RydWN0IHVzYl9kZXZpY2VfaWQgKmlkKTsK
K3N0YXRpYyB2b2lkIHVzYl9hbXJhZGlvX2Rpc2Nvbm5lY3Qoc3RydWN0IHVzYl9pbnRlcmZhY2Ug
KmludGYpOworc3RhdGljIGludCB1c2JfYW1yYWRpb19vcGVuKHN0cnVjdCBpbm9kZSAqaW5vZGUs
IHN0cnVjdCBmaWxlICpmaWxlKTsKK3N0YXRpYyBpbnQgdXNiX2FtcmFkaW9fY2xvc2Uoc3RydWN0
IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZpbGUpOworc3RhdGljIGludCB1c2JfYW1yYWRp
b19zdXNwZW5kKHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRmLAorCQkJCXBtX21lc3NhZ2VfdCBt
ZXNzYWdlKTsKK3N0YXRpYyBpbnQgdXNiX2FtcmFkaW9fcmVzdW1lKHN0cnVjdCB1c2JfaW50ZXJm
YWNlICppbnRmKTsKKworLyogRGF0YSBmb3Igb25lIChwaHlzaWNhbCkgZGV2aWNlICovCitzdHJ1
Y3QgYW1yYWRpb19kZXZpY2UgeworCS8qIHJlZmVyZW5jZSB0byBVU0IgYW5kIHZpZGVvIGRldmlj
ZSAqLworCXN0cnVjdCB1c2JfZGV2aWNlICp1c2JkZXY7CisJc3RydWN0IHZpZGVvX2RldmljZSAq
dmlkZW9kZXY7CisKKwl1bnNpZ25lZCBjaGFyICpidWZmZXI7CisJc3RydWN0IG11dGV4IGxvY2s7
CS8qIGJ1ZmZlciBsb2NraW5nICovCisJaW50IGN1cmZyZXE7CisJaW50IHN0ZXJlbzsKKwlpbnQg
dXNlcnM7CisJaW50IHJlbW92ZWQ7CisJaW50IG11dGVkOworfTsKKworLyogVVNCIERldmljZSBJ
RCBMaXN0ICovCitzdGF0aWMgc3RydWN0IHVzYl9kZXZpY2VfaWQgdXNiX2FtcmFkaW9fZGV2aWNl
X3RhYmxlW10gPSB7CisJe1VTQl9ERVZJQ0VfQU5EX0lOVEVSRkFDRV9JTkZPKFVTQl9BTVJBRElP
X1ZFTkRPUiwgVVNCX0FNUkFESU9fUFJPRFVDVCwKKwkJCQkJCQlVU0JfQ0xBU1NfSElELCAwLCAw
KSB9LAorCXsgfQkJCQkJCS8qIFRlcm1pbmF0aW5nIGVudHJ5ICovCit9OworCitNT0RVTEVfREVW
SUNFX1RBQkxFKHVzYiwgdXNiX2FtcmFkaW9fZGV2aWNlX3RhYmxlKTsKKworLyogVVNCIHN1YnN5
c3RlbSBpbnRlcmZhY2UgKi8KK3N0YXRpYyBzdHJ1Y3QgdXNiX2RyaXZlciB1c2JfYW1yYWRpb19k
cml2ZXIgPSB7CisJLm5hbWUJCQk9ICJyYWRpby1tcjgwMCIsCisJLnByb2JlCQkJPSB1c2JfYW1y
YWRpb19wcm9iZSwKKwkuZGlzY29ubmVjdAkJPSB1c2JfYW1yYWRpb19kaXNjb25uZWN0LAorCS5z
dXNwZW5kCQk9IHVzYl9hbXJhZGlvX3N1c3BlbmQsCisJLnJlc3VtZQkJCT0gdXNiX2FtcmFkaW9f
cmVzdW1lLAorCS5yZXNldF9yZXN1bWUJCT0gdXNiX2FtcmFkaW9fcmVzdW1lLAorCS5pZF90YWJs
ZQkJPSB1c2JfYW1yYWRpb19kZXZpY2VfdGFibGUsCisJLnN1cHBvcnRzX2F1dG9zdXNwZW5kCT0g
MSwKK307CisKKy8qIHN3aXRjaCBvbiByYWRpby4gU2VuZCA4IGJ5dGVzIHRvIGRldmljZS4gKi8K
K3N0YXRpYyBpbnQgYW1yYWRpb19zdGFydChzdHJ1Y3QgYW1yYWRpb19kZXZpY2UgKnJhZGlvKQor
eworCWludCByZXR2YWw7CisJaW50IHNpemU7CisKKwltdXRleF9sb2NrKCZyYWRpby0+bG9jayk7
CisKKwlyYWRpby0+YnVmZmVyWzBdID0gMHgwMDsKKwlyYWRpby0+YnVmZmVyWzFdID0gMHg1NTsK
KwlyYWRpby0+YnVmZmVyWzJdID0gMHhhYTsKKwlyYWRpby0+YnVmZmVyWzNdID0gMHgwMDsKKwly
YWRpby0+YnVmZmVyWzRdID0gMHhhYjsKKwlyYWRpby0+YnVmZmVyWzVdID0gMHgwMDsKKwlyYWRp
by0+YnVmZmVyWzZdID0gMHgwMDsKKwlyYWRpby0+YnVmZmVyWzddID0gMHgwMDsKKworCXJldHZh
bCA9IHVzYl9idWxrX21zZyhyYWRpby0+dXNiZGV2LCB1c2Jfc25kaW50cGlwZShyYWRpby0+dXNi
ZGV2LCAyKSwKKwkJKHZvaWQgKikgKHJhZGlvLT5idWZmZXIpLCBCVUZGRVJfTEVOR1RILCAmc2l6
ZSwgVVNCX1RJTUVPVVQpOworCisJbXV0ZXhfdW5sb2NrKCZyYWRpby0+bG9jayk7CisKKwlyYWRp
by0+bXV0ZWQgPSAwOworCisJcmV0dXJuIHJldHZhbDsKK30KKworLyogc3dpdGNoIG9mZiByYWRp
byAqLworc3RhdGljIGludCBhbXJhZGlvX3N0b3Aoc3RydWN0IGFtcmFkaW9fZGV2aWNlICpyYWRp
bykKK3sKKwlpbnQgcmV0dmFsOworCWludCBzaXplOworCisJbXV0ZXhfbG9jaygmcmFkaW8tPmxv
Y2spOworCisJcmFkaW8tPmJ1ZmZlclswXSA9IDB4MDA7CisJcmFkaW8tPmJ1ZmZlclsxXSA9IDB4
NTU7CisJcmFkaW8tPmJ1ZmZlclsyXSA9IDB4YWE7CisJcmFkaW8tPmJ1ZmZlclszXSA9IDB4MDA7
CisJcmFkaW8tPmJ1ZmZlcls0XSA9IDB4YWI7CisJcmFkaW8tPmJ1ZmZlcls1XSA9IDB4MDE7CisJ
cmFkaW8tPmJ1ZmZlcls2XSA9IDB4MDA7CisJcmFkaW8tPmJ1ZmZlcls3XSA9IDB4MDA7CisKKwly
ZXR2YWwgPSB1c2JfYnVsa19tc2cocmFkaW8tPnVzYmRldiwgdXNiX3NuZGludHBpcGUocmFkaW8t
PnVzYmRldiwgMiksCisJCSh2b2lkICopIChyYWRpby0+YnVmZmVyKSwgQlVGRkVSX0xFTkdUSCwg
JnNpemUsIFVTQl9USU1FT1VUKTsKKworCW11dGV4X3VubG9jaygmcmFkaW8tPmxvY2spOworCisJ
cmFkaW8tPm11dGVkID0gMTsKKworCXJldHVybiByZXR2YWw7Cit9CisKKy8qIHNldCBhIGZyZXF1
ZW5jeSwgZnJlcSBpcyBkZWZpbmVkIGJ5IHY0bCdzIFRVTkVSX0xPVywgaS5lLiAxLzE2dGgga0h6
ICovCitzdGF0aWMgaW50IGFtcmFkaW9fc2V0ZnJlcShzdHJ1Y3QgYW1yYWRpb19kZXZpY2UgKnJh
ZGlvLCBpbnQgZnJlcSkKK3sKKwlpbnQgcmV0dmFsOworCWludCBzaXplOworCXVuc2lnbmVkIHNo
b3J0IGZyZXFfc2VuZCA9IDB4MTMgKyAoZnJlcSA+PiAzKSAvIDI1OworCisJbXV0ZXhfbG9jaygm
cmFkaW8tPmxvY2spOworCisJcmFkaW8tPmJ1ZmZlclswXSA9IDB4MDA7CisJcmFkaW8tPmJ1ZmZl
clsxXSA9IDB4NTU7CisJcmFkaW8tPmJ1ZmZlclsyXSA9IDB4YWE7CisJcmFkaW8tPmJ1ZmZlclsz
XSA9IDB4MDM7CisJcmFkaW8tPmJ1ZmZlcls0XSA9IDB4YTQ7CisJcmFkaW8tPmJ1ZmZlcls1XSA9
IDB4MDA7CisJcmFkaW8tPmJ1ZmZlcls2XSA9IDB4MDA7CisJcmFkaW8tPmJ1ZmZlcls3XSA9IDB4
MDg7CisKKwlyZXR2YWwgPSB1c2JfYnVsa19tc2cocmFkaW8tPnVzYmRldiwgdXNiX3NuZGludHBp
cGUocmFkaW8tPnVzYmRldiwgMiksCisJCSh2b2lkICopIChyYWRpby0+YnVmZmVyKSwgQlVGRkVS
X0xFTkdUSCwgJnNpemUsIFVTQl9USU1FT1VUKTsKKworCWlmIChyZXR2YWwpCisJCXJldHVybiAt
MTsKKworCXJhZGlvLT5idWZmZXJbMF0gPSAoZnJlcV9zZW5kID4+IDgpICYgMHhmZjsKKwlyYWRp
by0+YnVmZmVyWzFdID0gZnJlcV9zZW5kICYgMHhmZjsKKwlyYWRpby0+YnVmZmVyWzJdID0gMHgw
MTsKKwlyYWRpby0+YnVmZmVyWzNdID0gMHgwMDsKKwlyYWRpby0+YnVmZmVyWzRdID0gMHgwMDsK
KwkvKiA1IGFuZCA2IGJ5dGVzIG9mIGJ1ZmZlciBhbHJlYWR5ID0gMHgwMCAqLworCXJhZGlvLT5i
dWZmZXJbN10gPSAweDAwOworCisJcmV0dmFsID0gdXNiX2J1bGtfbXNnKHJhZGlvLT51c2JkZXYs
IHVzYl9zbmRpbnRwaXBlKHJhZGlvLT51c2JkZXYsIDIpLAorCQkodm9pZCAqKSAocmFkaW8tPmJ1
ZmZlciksIEJVRkZFUl9MRU5HVEgsICZzaXplLCBVU0JfVElNRU9VVCk7CisKKwltdXRleF91bmxv
Y2soJnJhZGlvLT5sb2NrKTsKKworCXJhZGlvLT5zdGVyZW8gPSAwOworCisJcmV0dXJuIHJldHZh
bDsKK30KKworLyogVVNCIHN1YnN5c3RlbSBpbnRlcmZhY2UgYmVnaW5zIGhlcmUgKi8KKworLyog
aGFuZGxlIHVucGx1Z2dpbmcgb2YgdGhlIGRldmljZSwgcmVsZWFzZSBkYXRhIHN0cnVjdHVyZXMK
K2lmIG5vdGhpbmcga2VlcHMgdXMgZnJvbSBkb2luZyBpdC4gIElmIHNvbWV0aGluZyBpcyBzdGls
bAora2VlcGluZyB1cyBidXN5LCB0aGUgcmVsZWFzZSBjYWxsYmFjayBvZiB2NGwgd2lsbCB0YWtl
IGNhcmUKK29mIHJlbGVhc2luZyBpdC4gKi8KK3N0YXRpYyB2b2lkIHVzYl9hbXJhZGlvX2Rpc2Nv
bm5lY3Qoc3RydWN0IHVzYl9pbnRlcmZhY2UgKmludGYpCit7CisJc3RydWN0IGFtcmFkaW9fZGV2
aWNlICpyYWRpbyA9IHVzYl9nZXRfaW50ZmRhdGEoaW50Zik7CisKKwl1c2Jfc2V0X2ludGZkYXRh
KGludGYsIE5VTEwpOworCWlmIChyYWRpbykgeworCQl2aWRlb191bnJlZ2lzdGVyX2RldmljZShy
YWRpby0+dmlkZW9kZXYpOworCQlyYWRpby0+dmlkZW9kZXYgPSBOVUxMOworCQlpZiAocmFkaW8t
PnVzZXJzKSB7CisJCQlrZnJlZShyYWRpby0+YnVmZmVyKTsKKwkJCWtmcmVlKHJhZGlvKTsKKwkJ
fSBlbHNlIHsKKwkJCXJhZGlvLT5yZW1vdmVkID0gMTsKKwkJfQorCX0KK30KKworLyogdmlkaW9j
X3F1ZXJ5Y2FwIC0gcXVlcnkgZGV2aWNlIGNhcGFiaWxpdGllcyAqLworc3RhdGljIGludCB2aWRp
b2NfcXVlcnljYXAoc3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgKnByaXYsCisJCQkJCXN0cnVjdCB2
NGwyX2NhcGFiaWxpdHkgKnYpCit7CisJc3RybGNweSh2LT5kcml2ZXIsICJyYWRpby1tcjgwMCIs
IHNpemVvZih2LT5kcml2ZXIpKTsKKwlzdHJsY3B5KHYtPmNhcmQsICJBdmVyTWVkaWEgTVIgODAw
IFVTQiBGTSBSYWRpbyIsIHNpemVvZih2LT5jYXJkKSk7CisJc3ByaW50Zih2LT5idXNfaW5mbywg
IlVTQiIpOworCXYtPnZlcnNpb24gPSBSQURJT19WRVJTSU9OOworCXYtPmNhcGFiaWxpdGllcyA9
IFY0TDJfQ0FQX1RVTkVSOworCXJldHVybiAwOworfQorCisvKiB2aWRpb2NfZ190dW5lciAtIGdl
dCB0dW5lciBhdHRyaWJ1dGVzICovCitzdGF0aWMgaW50IHZpZGlvY19nX3R1bmVyKHN0cnVjdCBm
aWxlICpmaWxlLCB2b2lkICpwcml2LAorCQkJCXN0cnVjdCB2NGwyX3R1bmVyICp2KQoreworCXN0
cnVjdCBhbXJhZGlvX2RldmljZSAqcmFkaW8gPSB2aWRlb19nZXRfZHJ2ZGF0YSh2aWRlb19kZXZk
YXRhKGZpbGUpKTsKKworCWlmICh2LT5pbmRleCA+IDApCisJCXJldHVybiAtRUlOVkFMOworCisv
KiBUT0RPOiBBZGQgZnVuY3Rpb24gd2hpY2ggbG9vayBpcyBzaWduYWwgc3RlcmVvIG9yIG5vdAor
ICogCWFtcmFkaW9fZ2V0c3RhdChyYWRpbyk7CisgKi8KKwlyYWRpby0+c3RlcmVvID0gLTE7CisJ
c3RyY3B5KHYtPm5hbWUsICJGTSIpOworCXYtPnR5cGUgPSBWNEwyX1RVTkVSX1JBRElPOworCXYt
PnJhbmdlbG93ID0gRlJFUV9NSU4gKiBGUkVRX01VTDsKKwl2LT5yYW5nZWhpZ2ggPSBGUkVRX01B
WCAqIEZSRVFfTVVMOworCXYtPnJ4c3ViY2hhbnMgPSBWNEwyX1RVTkVSX1NVQl9NT05PIHwgVjRM
Ml9UVU5FUl9TVUJfU1RFUkVPOworCXYtPmNhcGFiaWxpdHkgPSBWNEwyX1RVTkVSX0NBUF9MT1c7
CisJaWYgKHJhZGlvLT5zdGVyZW8pCisJCXYtPmF1ZG1vZGUgPSBWNEwyX1RVTkVSX01PREVfU1RF
UkVPOworCWVsc2UKKwkJdi0+YXVkbW9kZSA9IFY0TDJfVFVORVJfTU9ERV9NT05POworCXYtPnNp
Z25hbCA9IDB4ZmZmZjsgICAgIC8qIENhbid0IGdldCB0aGUgc2lnbmFsIHN0cmVuZ3RoLCBzYWQu
LiAqLworCXYtPmFmYyA9IDA7IC8qIERvbid0IGtub3cgd2hhdCBpcyB0aGlzICovCisJcmV0dXJu
IDA7Cit9CisKKy8qIHZpZGlvY19zX3R1bmVyIC0gc2V0IHR1bmVyIGF0dHJpYnV0ZXMgKi8KK3N0
YXRpYyBpbnQgdmlkaW9jX3NfdHVuZXIoc3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgKnByaXYsCisJ
CQkJc3RydWN0IHY0bDJfdHVuZXIgKnYpCit7CisJaWYgKHYtPmluZGV4ID4gMCkKKwkJcmV0dXJu
IC1FSU5WQUw7CisJcmV0dXJuIDA7Cit9CisKKy8qIHZpZGlvY19zX2ZyZXF1ZW5jeSAtIHNldCB0
dW5lciByYWRpbyBmcmVxdWVuY3kgKi8KK3N0YXRpYyBpbnQgdmlkaW9jX3NfZnJlcXVlbmN5KHN0
cnVjdCBmaWxlICpmaWxlLCB2b2lkICpwcml2LAorCQkJCXN0cnVjdCB2NGwyX2ZyZXF1ZW5jeSAq
ZikKK3sKKwlzdHJ1Y3QgYW1yYWRpb19kZXZpY2UgKnJhZGlvID0gdmlkZW9fZ2V0X2RydmRhdGEo
dmlkZW9fZGV2ZGF0YShmaWxlKSk7CisKKwlyYWRpby0+Y3VyZnJlcSA9IGYtPmZyZXF1ZW5jeTsK
KwlpZiAoYW1yYWRpb19zZXRmcmVxKHJhZGlvLCByYWRpby0+Y3VyZnJlcSkgPCAwKQorCQl3YXJu
KCJTZXQgZnJlcXVlbmN5IGZhaWxlZCIpOworCXJldHVybiAwOworfQorCisvKiB2aWRpb2NfZ19m
cmVxdWVuY3kgLSBnZXQgdHVuZXIgcmFkaW8gZnJlcXVlbmN5ICovCitzdGF0aWMgaW50IHZpZGlv
Y19nX2ZyZXF1ZW5jeShzdHJ1Y3QgZmlsZSAqZmlsZSwgdm9pZCAqcHJpdiwKKwkJCQlzdHJ1Y3Qg
djRsMl9mcmVxdWVuY3kgKmYpCit7CisJc3RydWN0IGFtcmFkaW9fZGV2aWNlICpyYWRpbyA9IHZp
ZGVvX2dldF9kcnZkYXRhKHZpZGVvX2RldmRhdGEoZmlsZSkpOworCisJZi0+dHlwZSA9IFY0TDJf
VFVORVJfUkFESU87CisJZi0+ZnJlcXVlbmN5ID0gcmFkaW8tPmN1cmZyZXE7CisJcmV0dXJuIDA7
Cit9CisKKy8qIHZpZGlvY19xdWVyeWN0cmwgLSBlbnVtZXJhdGUgY29udHJvbCBpdGVtcyAqLwor
c3RhdGljIGludCB2aWRpb2NfcXVlcnljdHJsKHN0cnVjdCBmaWxlICpmaWxlLCB2b2lkICpwcml2
LAorCQkJCXN0cnVjdCB2NGwyX3F1ZXJ5Y3RybCAqcWMpCit7CisJaW50IGk7CisKKwlmb3IgKGkg
PSAwOyBpIDwgQVJSQVlfU0laRShyYWRpb19xY3RybCk7IGkrKykgeworCQlpZiAocWMtPmlkICYm
IHFjLT5pZCA9PSByYWRpb19xY3RybFtpXS5pZCkgeworCQkJbWVtY3B5KHFjLCAmKHJhZGlvX3Fj
dHJsW2ldKSwKKwkJCQkJCXNpemVvZigqcWMpKTsKKwkJCXJldHVybiAwOworCQl9CisJfQorCXJl
dHVybiAtRUlOVkFMOworfQorCisvKiB2aWRpb2NfZ19jdHJsIC0gZ2V0IHRoZSB2YWx1ZSBvZiBh
IGNvbnRyb2wgKi8KK3N0YXRpYyBpbnQgdmlkaW9jX2dfY3RybChzdHJ1Y3QgZmlsZSAqZmlsZSwg
dm9pZCAqcHJpdiwKKwkJCQlzdHJ1Y3QgdjRsMl9jb250cm9sICpjdHJsKQoreworCXN0cnVjdCBh
bXJhZGlvX2RldmljZSAqcmFkaW8gPSB2aWRlb19nZXRfZHJ2ZGF0YSh2aWRlb19kZXZkYXRhKGZp
bGUpKTsKKworCXN3aXRjaCAoY3RybC0+aWQpIHsKKwljYXNlIFY0TDJfQ0lEX0FVRElPX01VVEU6
CisJCWN0cmwtPnZhbHVlID0gcmFkaW8tPm11dGVkOworCQlyZXR1cm4gMDsKKwl9CisJcmV0dXJu
IC1FSU5WQUw7Cit9CisKKy8qIHZpZGlvY19zX2N0cmwgLSBzZXQgdGhlIHZhbHVlIG9mIGEgY29u
dHJvbCAqLworc3RhdGljIGludCB2aWRpb2Nfc19jdHJsKHN0cnVjdCBmaWxlICpmaWxlLCB2b2lk
ICpwcml2LAorCQkJCXN0cnVjdCB2NGwyX2NvbnRyb2wgKmN0cmwpCit7CisJc3RydWN0IGFtcmFk
aW9fZGV2aWNlICpyYWRpbyA9IHZpZGVvX2dldF9kcnZkYXRhKHZpZGVvX2RldmRhdGEoZmlsZSkp
OworCisJc3dpdGNoIChjdHJsLT5pZCkgeworCWNhc2UgVjRMMl9DSURfQVVESU9fTVVURToKKwkJ
aWYgKGN0cmwtPnZhbHVlKSB7CisJCQlpZiAoYW1yYWRpb19zdG9wKHJhZGlvKSA8IDApCisJCQkJ
d2FybigiYW1yYWRpb19zdG9wKCkgZmFpbGVkIik7CisJCX0gZWxzZSB7CisJCQlpZiAoYW1yYWRp
b19zdGFydChyYWRpbykgPCAwKQorCQkJCXdhcm4oImFtcmFkaW9fc3RhcnQoKSBmYWlsZWQiKTsK
KwkJfQorCQlyZXR1cm4gMDsKKwl9CisJcmV0dXJuIC1FSU5WQUw7Cit9CisKKy8qIHZpZGlvY19n
X2F1ZGlvIC0gZ2V0IGF1ZGlvIGF0dHJpYnV0ZXMgKi8KK3N0YXRpYyBpbnQgdmlkaW9jX2dfYXVk
aW8oc3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgKnByaXYsCisJCQkJc3RydWN0IHY0bDJfYXVkaW8g
KmEpCit7CisJaWYgKGEtPmluZGV4ID4gMSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlzdHJjcHko
YS0+bmFtZSwgIlJhZGlvIik7CisJYS0+Y2FwYWJpbGl0eSA9IFY0TDJfQVVEQ0FQX1NURVJFTzsK
KwlyZXR1cm4gMDsKK30KKworLyogdmlkaW9jX2dfaW5wdXQgLSBnZXQgaW5wdXQgKi8KK3N0YXRp
YyBpbnQgdmlkaW9jX2dfaW5wdXQoc3RydWN0IGZpbGUgKmZpbHAsIHZvaWQgKnByaXYsIHVuc2ln
bmVkIGludCAqaSkKK3sKKwkqaSA9IDA7CisJcmV0dXJuIDA7Cit9CisKKy8qIHZpZGlvY19zX2lu
cHV0IC0gc2V0IGlucHV0ICovCitzdGF0aWMgaW50IHZpZGlvY19zX2lucHV0KHN0cnVjdCBmaWxl
ICpmaWxwLCB2b2lkICpwcml2LCB1bnNpZ25lZCBpbnQgaSkKK3sKKwlpZiAoaSAhPSAwKQorCQly
ZXR1cm4gLUVJTlZBTDsKKwlyZXR1cm4gMDsKK30KKworLyogdmlkaW9jX3NfYXVkaW8gLSBzZXQg
YXVkaW8gYXR0cmlidXRlcyAgKi8KK3N0YXRpYyBpbnQgdmlkaW9jX3NfYXVkaW8oc3RydWN0IGZp
bGUgKmZpbGUsIHZvaWQgKnByaXYsCisJCQkJCXN0cnVjdCB2NGwyX2F1ZGlvICphKQoreworCWlm
IChhLT5pbmRleCAhPSAwKQorCQlyZXR1cm4gLUVJTlZBTDsKKwlyZXR1cm4gMDsKK30KKy8qIG9w
ZW4gZGV2aWNlIC0gYW1yYWRpb19zdGFydCgpIGFuZCBhbXJhZGlvX3NldGZyZXEoKSAqLworc3Rh
dGljIGludCB1c2JfYW1yYWRpb19vcGVuKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBmaWxl
ICpmaWxlKQoreworCXN0cnVjdCBhbXJhZGlvX2RldmljZSAqcmFkaW8gPSB2aWRlb19nZXRfZHJ2
ZGF0YSh2aWRlb19kZXZkYXRhKGZpbGUpKTsKKworCXJhZGlvLT51c2VycyA9IDE7CisJcmFkaW8t
Pm11dGVkID0gMTsKKworCWlmIChhbXJhZGlvX3N0YXJ0KHJhZGlvKSA8IDApIHsKKwkJd2Fybigi
UmFkaW8gZGlkIG5vdCBzdGFydCB1cCBwcm9wZXJseSIpOworCQlyYWRpby0+dXNlcnMgPSAwOwor
CQlyZXR1cm4gLUVJTzsKKwl9CisJaWYgKGFtcmFkaW9fc2V0ZnJlcShyYWRpbywgcmFkaW8tPmN1
cmZyZXEpIDwgMCkKKwkJd2FybigiU2V0IGZyZXF1ZW5jeSBmYWlsZWQiKTsKKwlyZXR1cm4gMDsK
K30KKworLypjbG9zZSBkZXZpY2UgLSBmcmVlIGRyaXZlciBzdHJ1Y3R1cmVzICovCitzdGF0aWMg
aW50IHVzYl9hbXJhZGlvX2Nsb3NlKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBmaWxlICpm
aWxlKQoreworCXN0cnVjdCBhbXJhZGlvX2RldmljZSAqcmFkaW8gPSB2aWRlb19nZXRfZHJ2ZGF0
YSh2aWRlb19kZXZkYXRhKGZpbGUpKTsKKworCWlmICghcmFkaW8pCisJCXJldHVybiAtRU5PREVW
OworCXJhZGlvLT51c2VycyA9IDA7CisJaWYgKHJhZGlvLT5yZW1vdmVkKSB7CisJCWtmcmVlKHJh
ZGlvLT5idWZmZXIpOworCQlrZnJlZShyYWRpbyk7CisJfQorCXJldHVybiAwOworfQorCisvKiBT
dXNwZW5kIGRldmljZSAtIHN0b3AgZGV2aWNlLiBOZWVkIHRvIGJlIGNoZWNrZWQgYW5kIGZpeGVk
ICovCitzdGF0aWMgaW50IHVzYl9hbXJhZGlvX3N1c3BlbmQoc3RydWN0IHVzYl9pbnRlcmZhY2Ug
KmludGYsIHBtX21lc3NhZ2VfdCBtZXNzYWdlKQoreworCXN0cnVjdCBhbXJhZGlvX2RldmljZSAq
cmFkaW8gPSB1c2JfZ2V0X2ludGZkYXRhKGludGYpOworCisJaWYgKGFtcmFkaW9fc3RvcChyYWRp
bykgPCAwKQorCQl3YXJuKCJhbXJhZGlvX3N0b3AoKSBmYWlsZWQiKTsKKworCWluZm8oInJhZGlv
LW1yODAwOiBHb2luZyBpbnRvIHN1c3BlbmQuLiIpOworCisJcmV0dXJuIDA7Cit9CisKKy8qIFJl
c3VtZSBkZXZpY2UgLSBzdGFydCBkZXZpY2UuIE5lZWQgdG8gYmUgY2hlY2tlZCBhbmQgZml4ZWQg
Ki8KK3N0YXRpYyBpbnQgdXNiX2FtcmFkaW9fcmVzdW1lKHN0cnVjdCB1c2JfaW50ZXJmYWNlICpp
bnRmKQoreworCXN0cnVjdCBhbXJhZGlvX2RldmljZSAqcmFkaW8gPSB1c2JfZ2V0X2ludGZkYXRh
KGludGYpOworCisJaWYgKGFtcmFkaW9fc3RvcChyYWRpbykgPCAwKQorCQl3YXJuKCJhbXJhZGlv
X3N0b3AoKSBmYWlsZWQiKTsKKworCWluZm8oInJhZGlvLW1yODAwOiByZXN1bWluZyBub3cuLiIp
OworCisJcmV0dXJuIDA7Cit9CisKKy8qIEZpbGUgc3lzdGVtIGludGVyZmFjZSAqLworc3RhdGlj
IGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgdXNiX2FtcmFkaW9fZm9wcyA9IHsKKwkub3du
ZXIJCT0gVEhJU19NT0RVTEUsCisJLm9wZW4JCT0gdXNiX2FtcmFkaW9fb3BlbiwKKwkucmVsZWFz
ZQk9IHVzYl9hbXJhZGlvX2Nsb3NlLAorCS5pb2N0bAkJPSB2aWRlb19pb2N0bDIsCisjaWZkZWYg
Q09ORklHX0NPTVBBVAorCS5jb21wYXRfaW9jdGwJPSB2NGxfY29tcGF0X2lvY3RsMzIsCisjZW5k
aWYKKwkubGxzZWVrCQk9IG5vX2xsc2VlaywKK307CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgdjRs
Ml9pb2N0bF9vcHMgdXNiX2FtcmFkaW9faW9jdGxfb3BzID0geworCS52aWRpb2NfcXVlcnljYXAg
ICAgPSB2aWRpb2NfcXVlcnljYXAsCisJLnZpZGlvY19nX3R1bmVyICAgICA9IHZpZGlvY19nX3R1
bmVyLAorCS52aWRpb2Nfc190dW5lciAgICAgPSB2aWRpb2Nfc190dW5lciwKKwkudmlkaW9jX2df
ZnJlcXVlbmN5ID0gdmlkaW9jX2dfZnJlcXVlbmN5LAorCS52aWRpb2Nfc19mcmVxdWVuY3kgPSB2
aWRpb2Nfc19mcmVxdWVuY3ksCisJLnZpZGlvY19xdWVyeWN0cmwgICA9IHZpZGlvY19xdWVyeWN0
cmwsCisJLnZpZGlvY19nX2N0cmwgICAgICA9IHZpZGlvY19nX2N0cmwsCisJLnZpZGlvY19zX2N0
cmwgICAgICA9IHZpZGlvY19zX2N0cmwsCisJLnZpZGlvY19nX2F1ZGlvICAgICA9IHZpZGlvY19n
X2F1ZGlvLAorCS52aWRpb2Nfc19hdWRpbyAgICAgPSB2aWRpb2Nfc19hdWRpbywKKwkudmlkaW9j
X2dfaW5wdXQgICAgID0gdmlkaW9jX2dfaW5wdXQsCisJLnZpZGlvY19zX2lucHV0ICAgICA9IHZp
ZGlvY19zX2lucHV0LAorfTsKKworLyogVjRMMiBpbnRlcmZhY2UgKi8KK3N0YXRpYyBzdHJ1Y3Qg
dmlkZW9fZGV2aWNlIGFtcmFkaW9fdmlkZW9kZXZfdGVtcGxhdGUgPSB7CisJLm5hbWUJCT0gIkF2
ZXJNZWRpYSBNUiA4MDAgVVNCIEZNIFJhZGlvIiwKKwkuZm9wcwkJPSAmdXNiX2FtcmFkaW9fZm9w
cywKKwkuaW9jdGxfb3BzIAk9ICZ1c2JfYW1yYWRpb19pb2N0bF9vcHMsCisJLnJlbGVhc2UJPSB2
aWRlb19kZXZpY2VfcmVsZWFzZSwKK307CisKKy8qIGNoZWNrIGlmIHRoZSBkZXZpY2UgaXMgcHJl
c2VudCBhbmQgcmVnaXN0ZXIgd2l0aCB2NGwgYW5kCit1c2IgaWYgaXQgaXMgKi8KK3N0YXRpYyBp
bnQgdXNiX2FtcmFkaW9fcHJvYmUoc3RydWN0IHVzYl9pbnRlcmZhY2UgKmludGYsCisJCQkJY29u
c3Qgc3RydWN0IHVzYl9kZXZpY2VfaWQgKmlkKQoreworCXN0cnVjdCBhbXJhZGlvX2RldmljZSAq
cmFkaW87CisKKwlyYWRpbyA9IGttYWxsb2Moc2l6ZW9mKHN0cnVjdCBhbXJhZGlvX2RldmljZSks
IEdGUF9LRVJORUwpOworCisJaWYgKCEocmFkaW8pKQorCQlyZXR1cm4gLUVOT01FTTsKKworCXJh
ZGlvLT5idWZmZXIgPSBrbWFsbG9jKEJVRkZFUl9MRU5HVEgsIEdGUF9LRVJORUwpOworCisJaWYg
KCEocmFkaW8tPmJ1ZmZlcikpIHsKKwkJa2ZyZWUocmFkaW8pOworCQlyZXR1cm4gLUVOT01FTTsg
fQorCisJcmFkaW8tPnZpZGVvZGV2ID0gdmlkZW9fZGV2aWNlX2FsbG9jKCk7CisKKwlpZiAoIShy
YWRpby0+dmlkZW9kZXYpKSB7CisJCWtmcmVlKHJhZGlvLT5idWZmZXIpOworCQlrZnJlZShyYWRp
byk7CisJCXJldHVybiAtRU5PTUVNOyB9CisKKwltZW1jcHkocmFkaW8tPnZpZGVvZGV2LCAmYW1y
YWRpb192aWRlb2Rldl90ZW1wbGF0ZSwKKwkJc2l6ZW9mKGFtcmFkaW9fdmlkZW9kZXZfdGVtcGxh
dGUpKTsKKworCXJhZGlvLT5yZW1vdmVkID0gMDsKKwlyYWRpby0+dXNlcnMgPSAwOworCXJhZGlv
LT51c2JkZXYgPSBpbnRlcmZhY2VfdG9fdXNiZGV2KGludGYpOworCXJhZGlvLT5jdXJmcmVxID0g
MTA3LjUyICogRlJFUV9NVUw7CisKKwltdXRleF9pbml0KCZyYWRpby0+bG9jayk7CisKKwl2aWRl
b19zZXRfZHJ2ZGF0YShyYWRpby0+dmlkZW9kZXYsIHJhZGlvKTsKKwlpZiAodmlkZW9fcmVnaXN0
ZXJfZGV2aWNlKHJhZGlvLT52aWRlb2RldiwgVkZMX1RZUEVfUkFESU8sIHJhZGlvX25yKSkgewor
CQl3YXJuKCJDb3VsZCBub3QgcmVnaXN0ZXIgdmlkZW8gZGV2aWNlIik7CisJCXZpZGVvX2Rldmlj
ZV9yZWxlYXNlKHJhZGlvLT52aWRlb2Rldik7CisJCWtmcmVlKHJhZGlvLT5idWZmZXIpOworCQlr
ZnJlZShyYWRpbyk7CisJCXJldHVybiAtRUlPOworCX0KKwl1c2Jfc2V0X2ludGZkYXRhKGludGYs
IHJhZGlvKTsKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBfX2luaXQgYW1yYWRpb19pbml0
KHZvaWQpCit7CisJaW50IHJldHZhbCA9IHVzYl9yZWdpc3RlcigmdXNiX2FtcmFkaW9fZHJpdmVy
KTsKKwlpbmZvKERSSVZFUl9WRVJTSU9OICIgIiBEUklWRVJfREVTQyk7CisJaWYgKHJldHZhbCkK
KwkJZXJyKCJ1c2JfcmVnaXN0ZXIgZmFpbGVkLiBFcnJvciBudW1iZXIgJWQiLCByZXR2YWwpOwor
CXJldHVybiByZXR2YWw7Cit9CisKK3N0YXRpYyB2b2lkIF9fZXhpdCBhbXJhZGlvX2V4aXQodm9p
ZCkKK3sKKwl1c2JfZGVyZWdpc3RlcigmdXNiX2FtcmFkaW9fZHJpdmVyKTsKK30KKworbW9kdWxl
X2luaXQoYW1yYWRpb19pbml0KTsKK21vZHVsZV9leGl0KGFtcmFkaW9fZXhpdCk7CisK
------=_Part_20424_16703633.1222342195477
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

--
video4linux-list mailing list
Unsubscribe mailto:video4linux-list-request@redhat.com?subject=unsubscribe
https://www.redhat.com/mailman/listinfo/video4linux-list
------=_Part_20424_16703633.1222342195477--
